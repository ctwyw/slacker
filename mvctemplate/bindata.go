// Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// component.tpl
// controllers.tpl
// dao.tpl
// js.tpl
// markdown.tpl
// models.tpl
// service.tpl
// vue.tpl
package mvctemplate

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _componentTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xcb\x6a\xdc\x4a\x10\xdd\xeb\x2b\x8a\xe6\x2e\x34\x17\x5b\xe3\xb5\x34\x1a\x4c\xb2\x4c\x30\x81\x2c\x8d\x17\x6d\xa9\x64\x35\xe9\x17\xdd\xa5\x49\x86\x41\x90\x6d\xc8\x97\x64\x95\x65\xfe\x28\x24\x7f\x11\xba\xf5\x18\x8d\x3d\xc6\x78\x23\x75\x55\x9f\x3a\xf5\x3a\xbd\x21\x54\x56\x72\xc2\x6d\x02\xb0\x41\x79\xe9\x51\x62\x45\x09\x00\xc0\xee\x52\x99\x1a\x65\x46\x4e\xa8\x92\x09\x6d\x3b\x62\xf1\xa2\x11\x92\xd0\xf1\x7b\x89\xd1\x74\xa8\x0c\x0d\x47\x2b\x79\x85\xad\x91\x35\xba\x92\xfd\xf9\xf9\xeb\xef\xd7\x6f\xbf\xbf\xff\x18\xa2\xae\x1b\x53\x75\xbe\x64\x0f\x48\x52\xf8\x91\x2a\x97\x86\xd7\x42\x3f\x94\x6c\x3c\x8c\xd8\xaa\xe5\xfa\x01\x4b\xd6\x72\x5d\x4b\xfc\x18\x8b\x1a\xae\x2a\x89\xfc\x98\x3b\xaf\x85\x0f\x46\x5d\xb2\xe9\x14\x60\xdb\x78\x19\xfa\x31\x96\x84\xd1\xd1\x0c\x1d\x35\xc6\x95\x4c\x10\x2a\x10\x1a\x8e\x65\x00\xe4\x9f\x70\x3f\xdc\x64\x87\x43\xf6\xc1\x09\xc5\xdd\xfe\x1d\xee\xdf\x1a\xd9\x29\x9d\x0d\xbf\x1b\xae\xb0\xef\xe7\x10\xc9\xef\x51\xbe\x36\x68\xc7\x65\x87\xaf\x0a\xda\x6e\xd6\x73\x23\x71\x4d\xeb\x79\x4f\xdb\x64\xb3\x3e\x6e\x30\xd9\xf8\xca\x09\x4b\x01\x24\x94\x35\x8e\xe0\x7f\xe0\x1e\xb8\x15\xd0\x38\xa3\x80\x5d\xaf\xb9\x15\xeb\xc3\x21\x1b\xf9\x8b\x04\x00\xbf\x44\x64\x8d\x0d\xef\x24\xc1\x21\xe6\xac\x39\xf1\x74\x35\x1a\x61\xc5\xd4\x39\x3d\x9b\x00\xe3\xb6\x72\x68\xb8\xf4\x78\x31\xfb\xa3\x4a\x72\x60\xec\xe8\x0a\x53\xce\xe1\xf6\x6e\x74\xf4\x45\x3c\xf4\x03\xc0\x3a\x63\x7d\x0e\x07\x88\x63\xc9\xe1\xa6\x53\xf7\xe8\x2e\x60\x5a\x66\x0e\x6f\x8c\x91\xc8\xf5\x14\xa0\x90\x5a\x53\x87\x90\x91\x6f\xa9\x90\x74\xb7\x5a\xd4\x28\x1a\x48\x69\x6f\xd1\x34\xb0\x83\xb2\x04\xa6\x23\x39\x5b\x62\x00\xa8\x15\x3e\xfb\x0f\x95\xa0\x74\xd4\xf8\x05\xec\x56\xc5\x33\x88\x41\x97\x8f\x20\x3d\xa0\xf4\xf8\x22\xeb\xd5\xcb\xac\x4b\x48\x3f\x0d\x6c\x1a\xe5\xf8\x70\xd2\x65\xfd\x91\x65\x5c\x06\x94\x40\xae\xc3\x23\x03\xb7\x62\x91\x30\x7b\x1f\x83\x97\x1e\x6a\x51\xa7\xce\x5b\x28\xb7\x27\xd5\x4f\xbc\xc2\x13\x94\xe0\xbc\xcd\x82\x1e\xe2\x67\xd9\x42\x7f\x42\x56\x71\xaa\xda\x14\x9d\x8b\x6c\xfd\xd3\x44\xe9\xea\xb9\x3c\x73\xfd\x51\x4d\xa7\x29\x8a\xc7\x63\x10\x5a\x9c\x9b\xc1\x50\xeb\xed\x5d\x71\xea\x8f\xc3\x0f\x93\x09\x46\x14\x59\x71\x2a\x90\xd9\x0f\x5b\xb8\x3a\x23\x8d\x79\xea\x67\x36\xb3\x54\xf2\xe7\xd0\xfe\x51\x96\xa3\x9e\x9b\x4e\x57\xe1\xdd\x3e\x2d\x78\x68\xa3\x38\x47\xa5\x4c\xa7\x09\xeb\x45\xcc\x93\x88\x80\xef\x8b\x64\xb3\x9e\x5e\x7c\xf2\x2f\x00\x00\xff\xff\x50\xb4\x2e\x04\xca\x05\x00\x00")

func componentTplBytes() ([]byte, error) {
	return bindataRead(
		_componentTpl,
		"component.tpl",
	)
}

func componentTpl() (*asset, error) {
	bytes, err := componentTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "component.tpl", size: 1482, mode: os.FileMode(420), modTime: time.Unix(1569292443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x51\x6f\xdb\x36\x10\x7e\x16\x7f\xc5\x4d\x0f\x83\x14\x68\x52\x3a\x14\x7d\xf0\xe0\x87\xc6\x09\xda\x6e\x41\xea\x2d\xc9\x53\x51\x0c\x0c\x79\x76\x88\x48\xa4\x47\x52\xe9\x0c\x4d\xff\x7d\xa0\xa4\x34\x96\x2c\x3a\x5e\x1c\x2c\x7a\x52\x22\xf2\xbb\xef\xbe\xef\xee\x48\x67\xd9\x07\x94\xa8\xa9\x45\x0e\x37\x6b\x30\x39\x65\x77\xa8\x81\x64\xd9\x52\x48\xd0\xaa\xb4\xa8\x49\x76\x44\xe8\x4a\xa4\x1f\xce\xae\xa2\x30\xab\xaa\xf4\x5c\x7d\x43\x7d\x41\x0b\xac\xeb\x6c\x22\x78\x98\x30\x25\xad\x56\x79\x8e\xda\xa4\x57\xf4\x0e\xab\x2a\x9d\xd1\x02\xf3\x19\x35\xd8\xae\x8b\xbd\x08\xfd\xdd\xe7\xc2\x58\xdf\xee\xf9\xe7\xcb\xa7\xb6\xcf\x34\x52\xeb\x0d\x3f\xbf\xde\x27\x81\xeb\x15\xdf\x85\xf1\xfe\x6a\xf6\x71\x0f\x94\x39\xb5\xec\xd6\x07\x72\x7a\x76\x7e\x76\x75\xb6\x07\xca\x29\xe6\x38\xca\x05\x76\x90\xe9\x43\x9c\x38\x22\xcf\x61\x33\x02\xe3\xa5\xe3\x95\x77\x04\xc4\xab\x2f\x90\xa3\x8c\x90\x15\x65\x77\x74\x89\xb0\xb1\x8f\x10\x51\xac\x94\xb6\x11\x09\x20\xac\xaa\x70\xa9\x8c\x66\x59\xa1\x38\xe6\x26\xfc\x07\xd2\x4f\xcd\xd7\x73\x71\xa3\xa9\x5e\xd7\xb5\xa3\xd0\x45\x27\x41\xb8\x14\xf6\xb6\xbc\x49\x99\x2a\x5c\x49\xff\xb4\x54\x52\x30\xf7\xe6\xbe\x49\xb4\xd9\xad\xb5\x2b\xf7\x6e\xac\x66\x4a\xde\x87\x24\x26\x64\x51\x4a\x06\x00\xe3\xc5\x18\x31\x38\x5a\x0a\x99\xce\x94\xb4\xf8\xb7\x8d\x01\x2a\x02\x00\x70\x4f\x35\xf4\x93\x1f\xfc\x99\x6e\x63\x91\x40\x2d\x16\x06\x6d\xf2\xe7\x64\xda\x11\x48\xe7\x54\x1b\xbc\x16\xd2\x46\x2c\x3d\xc5\x05\x2d\x73\xfb\x7b\x89\x7a\x1d\x85\xed\xda\x30\x09\x8f\xc3\x38\x81\x37\xc7\x09\xbc\x7b\x1b\x13\x68\xa2\xe7\xa2\x10\x7b\xc2\x34\x4b\x3b\x94\x37\xc7\x49\x83\x11\xb0\xf4\xf2\x56\x95\x39\x3f\x11\x92\xb7\xeb\x7e\xec\xb3\x8f\x5d\x18\x4e\x2d\x4d\xac\xb2\x34\x4f\x50\xeb\xc9\x14\x2e\x51\xdf\x0b\x86\x9e\xbe\x8d\xba\xec\x5a\x72\x43\xbc\x20\x08\x7e\xbd\xfc\x7c\x11\xb1\x04\x9c\x9e\x1f\x2b\x12\x04\xa1\x8b\x10\x4e\xba\x48\xee\x1f\x4d\xb4\x70\x02\x6d\x54\x12\xd4\x2e\x72\x4c\xea\xef\x2e\x8d\x0f\x9c\x97\x75\x69\x4f\x79\x40\xf0\x04\x50\x6b\x98\x4c\xa1\xe7\xc3\xa7\xc6\x86\x39\xd5\xb4\x88\x42\xc1\x1f\x85\x0f\xc4\xa2\xd9\xf0\xc3\x14\xa4\xc8\xc1\x49\xf0\xa0\x89\x14\x8d\xc8\x4c\x71\x4c\x2f\xf0\x5b\xf4\xf0\x7e\x42\xf9\x1f\xf8\x57\x89\xc6\x36\x4a\x38\x1d\x35\xda\x52\x4b\x12\xd4\x6d\x2d\xf4\x99\xb5\x8c\x1e\xad\xf2\xe8\x25\x78\x0c\x9b\x96\x0c\x40\xfa\xa2\xfb\xe6\xec\x8b\xaa\xde\x08\xba\x78\xd0\x73\xd3\x81\x86\xe3\xd0\x80\x5f\xfa\x42\x42\xf3\x3c\x43\x4e\xe8\x9e\xef\xa2\x8e\x69\xda\x91\x7a\xd0\xd4\xab\xc7\x76\xcd\xef\xa3\xaf\x6f\x44\x8e\xc9\x1b\xbc\x48\xd5\x1d\x52\x74\x07\xf4\xd5\xf3\xed\x3d\xac\x4f\x48\xb0\x4d\x6e\xae\x45\x41\xf5\xfa\x37\x5c\xcf\x54\x5e\x16\x72\xc8\x16\xa6\x20\x38\x09\xfa\xcd\xe4\x75\xca\x6f\x7c\xc7\x77\xa3\x9b\x3c\xa7\xf3\xa8\xdb\xaf\xed\x75\xe0\x8c\x2e\x9b\xac\x17\x02\x73\x6e\x60\x0a\x05\xbd\xc3\xa8\xa0\xab\x2f\xc6\x6a\x21\x97\x5f\x85\xb4\xa8\x17\x94\x61\x55\xc7\xbb\x3d\xde\x04\xda\x72\xf8\xb0\x41\x38\x30\xca\xa7\xb1\xe0\x49\x8f\xc4\x56\xd8\x0d\x9f\x7c\xd7\x1f\xdf\xd4\x3b\xd8\x2b\x38\xf8\x38\x18\xa8\xe0\xcd\x40\x70\x5f\x89\x66\x47\x5d\xf6\x3b\x6f\x80\x5b\x12\x34\xa5\x6a\xba\xd4\x85\x5c\x9a\x9f\x85\xb4\xef\xde\x9a\x88\xa5\xcd\xf9\xf9\x5e\x6b\xba\x6e\xb3\x8f\xdb\xa5\x53\xa0\xab\x15\x4a\x1e\x09\x6e\x92\xa7\x76\x7d\xf9\x1a\xc6\x71\x9a\xa6\x71\x97\xe2\xc6\x2c\xde\xcd\x53\x3c\xe1\xf1\xae\xeb\xf2\x58\x92\xff\x5f\x3b\x1c\x3a\xf1\x5e\xd3\x0e\x7f\xf7\x99\x04\x06\xfd\xf7\x94\x39\x7b\x1f\x8e\x9d\x3b\xff\xf5\x54\x82\x17\x3d\x96\x5e\xc3\x84\x71\x0f\xbc\xba\xb9\x96\x18\x99\x34\x31\xa9\xdd\x2f\xb2\x7f\x03\x00\x00\xff\xff\x6c\x6e\x87\x4a\x22\x10\x00\x00")

func controllersTplBytes() ([]byte, error) {
	return bindataRead(
		_controllersTpl,
		"controllers.tpl",
	)
}

func controllersTpl() (*asset, error) {
	bytes, err := controllersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controllers.tpl", size: 4130, mode: os.FileMode(420), modTime: time.Unix(1575006368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _daoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\x51\x6f\xdb\x36\x10\xc7\x9f\xc5\x4f\x71\xd5\x83\x21\x15\x02\xb5\x02\xc3\x1e\x02\x08\xc5\xe6\x64\x45\x30\xa7\x6d\xea\x04\x7b\x28\x8a\x81\x16\xcf\x36\x11\x89\x74\x48\xaa\x8e\xc1\xea\xbb\x0f\xa4\x6c\xd5\x96\x3d\xd8\x01\xf6\x64\x48\x3e\xf2\xee\xff\xbb\xff\x9d\xf2\xfc\x03\x4a\xd4\xcc\x22\x87\xd9\x06\x4c\xc5\xca\x27\xd4\x64\xc5\xca\x27\xb6\x40\xe0\x4c\x11\x22\xea\x95\xd2\x16\x12\x92\xe7\xe6\x39\x8a\x17\xc2\x2e\x9b\x19\x2d\x55\x9d\xdf\x31\x63\x51\xd7\x42\x72\x93\x9b\xe7\x46\x68\x8d\x55\x4c\x62\xe7\xe2\x85\x32\xba\xcc\x6b\xc5\xb1\x32\xf1\x0f\xa0\xb7\xe1\x8e\x89\x98\x69\xa6\x37\x6d\x9b\x3b\x47\x3f\xb2\x1a\xdb\x36\x26\x29\x21\xf3\x46\x96\x90\x70\x78\x7b\xcd\x54\x0a\x13\x61\xac\x73\x74\xcc\x6a\xac\xc6\xcc\x60\x17\x98\xa8\xf9\xdc\xa0\xcd\x2a\x51\x0b\x0b\x8d\x90\xf6\xb7\x5f\x33\x83\x4c\x97\x4b\x70\x8e\x4e\xd4\x1a\x75\x17\x49\x8f\x0f\xa7\x90\x7c\xfd\x76\x36\x2a\x13\xd2\x66\xa8\xb5\xd2\x29\x38\x02\x00\xf0\x9d\x69\xe0\xcc\x32\x28\x6a\xf6\x84\x17\xdd\xf1\x4b\xda\x9f\xb4\xca\xb2\x0a\x84\xb4\x24\x32\x57\x05\xa7\x0b\xa5\x6b\x7a\xe7\x99\x24\x67\xef\x71\x6d\x4a\x22\xe7\xc4\x1c\xc6\x4a\x5a\x26\xa4\x01\x3a\x5d\x0b\x5b\x2e\x7d\x0c\xc4\xc6\x32\x8b\x71\xdb\x02\x89\x22\x53\x18\xfa\xf7\x12\x35\x26\xdd\xeb\x37\xc5\xfb\x38\x1b\x64\x98\xfa\x3f\xae\xb1\x0a\xb7\xa2\xe4\x6d\x4b\x22\xd4\x1a\xae\x0a\x30\x74\xac\x1a\x69\x93\x51\xa8\x37\xa5\x9f\x34\x47\x9d\xc4\xce\xd1\xcf\x5a\xd4\x4c\x6f\xfe\xc2\xcd\x58\x55\x4d\x2d\x69\xf7\xd3\x5d\x09\x1c\x4d\x19\xa7\x74\x5a\xaa\x15\x9a\xe4\x53\x68\xcf\xc4\x77\x27\xbc\xd9\xf5\x0b\x42\xc3\xd2\x94\xfe\x29\x24\x4f\x46\x9e\x66\x4a\x6f\x3c\xe4\xc0\x49\xa3\x6d\xb4\x0c\x90\xb3\x90\xdf\x37\x80\xb4\x84\x38\x47\xef\xd0\x2e\x15\x7f\x60\x4f\xd8\xb6\x43\x93\x8c\x35\x32\x8b\x27\x6c\x72\xa8\xfb\x02\x6b\x9c\xef\x45\x06\xc1\x14\x90\x3a\x02\xd1\x7e\x34\xfc\x00\xfa\x7b\x63\x55\xcd\xac\x28\xbb\x8a\x1e\x57\x9c\x59\xbc\x79\x59\x69\x34\x46\x28\xe9\x2b\xf7\xa0\xfb\xfe\x77\x61\xc9\xe8\x30\xeb\x09\x24\x87\x01\xa1\x06\x72\x84\xa1\x4b\xf7\x7f\x60\xd8\x6a\x74\x24\x82\xff\x94\x78\x42\x1c\x00\xe4\x39\xfc\x93\x6d\xbd\xc4\x29\x9f\x85\xc9\xe6\x37\x2f\x58\x26\x71\x13\x4e\x40\x3f\xee\x60\xd0\xee\x9e\xf8\xf4\x7e\xd2\xb6\xb0\xf6\xce\x85\x73\x6e\x2b\xae\xce\x45\x0c\x2d\x1f\xe6\x70\x9f\xfc\x94\x7d\xbf\x84\xfb\x49\xce\x9f\x99\x2d\x97\x27\x30\x0b\x0e\xdd\x26\xda\x0a\xad\xd9\xea\xab\xb1\x5a\xc8\xc5\x37\x21\x2d\xea\x39\x2b\xd1\xed\xc1\x85\x60\xa0\x01\xd0\x3b\xb6\x1a\x30\x8d\xfa\xc5\x73\xb6\x71\x3e\xda\x47\xd2\x93\x7c\x0e\x63\x0b\xc1\x0f\xcd\xd8\x2d\xa3\x6e\x26\xbb\x5a\x4c\xd2\x29\xd9\x81\x89\x0e\xa9\xfc\x1c\xcb\x6b\xac\xd0\x86\xc1\xf4\x2f\xc5\x1c\xe8\xad\x79\x34\xa8\x1f\xd8\xac\xf2\x8d\x1e\x12\xf4\x63\x7c\x5c\xfd\x1f\x1b\xff\x9b\x34\x06\xb5\xf4\x6e\xeb\xd8\xa5\x70\xf1\x50\xee\x6f\xea\xd7\x7a\x9e\x44\x7d\xde\x62\x9b\xd9\xd0\x07\x15\x0e\xf5\x25\xa5\x24\x9a\xde\x4f\xbc\xb7\x63\x83\x15\x96\x16\xde\xc2\x5c\xab\x7a\xcf\xd3\xbd\x83\x1f\xb7\x67\x8e\xdc\x09\x6d\x5b\xbc\xef\x36\x21\xbc\x8b\xfb\xcd\x1b\xa6\xe5\x03\xda\xa1\x2b\x33\x98\xde\x4f\x32\xd8\x2b\xe1\x35\x3b\xe1\x58\xe8\xad\xb9\x79\x11\xc6\x1e\x63\x9e\x29\x55\xf9\x91\x1f\x28\x7c\xf7\x7a\x85\x03\x81\xbe\x1d\xe8\x73\x86\x14\x87\x82\xef\x1b\xd4\x9b\x2f\x6a\x9d\x78\x91\xbd\x46\x3a\x2d\x99\x4c\x46\xe1\x50\x4a\x22\x31\xf7\xe2\xe0\x4d\x01\x52\x54\x30\x1a\xed\x9e\xcc\x73\xe5\x9d\xf9\x51\x7d\x51\x6b\xe3\x4b\xdf\xa1\xb1\xba\x41\x12\xb5\x3f\x0d\xeb\x2f\xea\x3e\x24\xe1\x73\xf7\x6f\x00\x00\x00\xff\xff\x57\xfb\x0f\xb9\xea\x08\x00\x00")

func daoTplBytes() ([]byte, error) {
	return bindataRead(
		_daoTpl,
		"dao.tpl",
	)
}

func daoTpl() (*asset, error) {
	bytes, err := daoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dao.tpl", size: 2282, mode: os.FileMode(420), modTime: time.Unix(1575006368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x95\x4f\x8f\xda\x3c\x10\xc6\xef\xf9\x14\x23\xeb\x3d\x38\x6f\x77\x93\x3b\xab\xa8\xed\xfe\x69\x55\x69\x55\xa1\x16\xda\x23\x0c\xc9\xa4\x58\x24\x71\x6a\x4f\x96\x22\x94\xef\x5e\xd9\x09\xdd\xed\x12\xa2\xc2\x05\x64\xcf\xcc\x33\x3f\x3f\x83\x4d\x1c\x03\x7c\xa4\x8a\x0c\x32\x65\xb0\xda\x81\x2d\x30\xdd\x90\x09\x54\x59\x6b\xc3\xb0\x66\xae\x21\x37\xba\x04\x11\xc5\x6e\x21\x6e\x82\x43\xcc\xb2\x36\xd4\x07\xdf\xc5\x7e\xf5\x22\xfa\x3f\xa0\x85\x54\xeb\x8d\x7a\xce\x69\x58\x15\x36\xee\x36\x5d\x2a\xfd\xf2\xa9\x79\x53\xa5\xac\x74\x05\x33\xdc\x90\x54\x59\x08\xfb\x00\xc0\x10\x37\xa6\xf2\x04\xd1\x0f\x62\xb9\x8c\xb1\x56\xf1\x7e\x1f\x3d\xea\x2d\x99\xcf\x58\x52\xdb\xc6\xff\xed\x55\xd6\x2e\xc3\x9b\xa0\x3d\x56\x7b\x54\x96\xe5\xcf\x86\xcc\x6e\x58\x50\x0c\x08\x8a\x2b\x9f\x0a\x50\xa3\xc1\xd2\x4e\xc0\xd7\x07\x00\xed\x70\x8f\x3b\x43\xc8\x24\x57\x3a\x1b\x68\x52\x6b\x7b\xb2\x8b\xaf\x18\x94\x9c\xd7\x99\x93\x54\x59\x9f\x74\x2c\xdb\x8c\x9a\x31\xa6\x3d\x45\x4e\xd7\x63\xd2\x3e\x7e\xa1\xf8\x3d\x15\xc4\xc3\xf3\xcb\xba\xd0\xd9\x23\xbc\x75\x3c\xbd\xee\x89\x49\x8e\x48\x2f\xcf\x1c\xa6\xef\xd6\x59\xe4\x33\xcf\x77\xa9\xf7\xe7\x92\xbe\xfd\xd8\xc7\x1b\x9f\x98\xfc\x65\x6d\x3f\xf9\x8b\x2a\x73\x55\x50\xd7\xea\x09\x0d\xe4\xda\x94\x90\x40\x45\x5b\xf8\xa0\x4d\x79\x8f\x8c\x32\xbc\x09\xc0\x07\x22\xac\x6b\xaa\x32\x29\x5c\x8d\xb8\x02\xf7\xd5\x7d\x46\x15\x96\xe4\xf3\x8e\x2e\x40\x07\xdc\xbd\x0a\xc7\xdc\x4e\xf6\xc0\xbd\x26\xcc\xc8\xd8\x49\xbf\x04\x10\x77\xba\x62\xaa\xf8\x7a\xb6\xab\x49\x4c\x40\x94\x4d\xc1\xaa\x46\xc3\xb1\xab\xbb\xce\x90\x51\xf8\xdc\xf6\xf4\x31\x1f\xfc\x5a\x3e\x1f\xb1\x31\x05\x24\x9d\x51\x46\xa7\x64\x6d\x44\xd5\x53\xf4\x6d\xfe\xb0\x78\x3f\x9d\x2e\x6e\xd1\xd2\xfc\xcb\x23\xbc\xf1\x19\xdd\xed\xed\x24\x5f\xc1\xbf\xc5\xd4\x15\x2f\x58\x6f\xa8\x4a\x44\x5f\xe0\x9f\xc1\xc8\x32\x32\x45\x3e\xe2\x3c\x29\x74\x8a\x8e\x25\x5a\x1b\xca\x21\x71\x04\x83\xa8\xdf\x69\xf5\x55\xa7\x1b\x3a\xd0\xaa\x1c\xe4\x18\x63\x92\x80\x10\x61\x6f\x57\x6f\xbc\x3c\x78\xb7\xb5\x93\x38\x3e\x60\xbd\x64\xd0\x96\xff\xec\x76\xe7\xdb\xd2\xca\xfa\xbe\xff\x74\x44\xe8\x9f\x75\xf7\x88\xce\x5c\x44\x86\x7e\xdf\x8f\xbf\x0d\x5e\x91\x8c\xf0\x47\x86\xea\x02\x53\x92\xc2\xff\xb3\x5c\x39\x66\x11\xfe\xe5\xfc\x79\x64\x43\x5c\xfe\x47\xf1\x3b\x00\x00\xff\xff\x12\x70\xb9\x58\xe7\x06\x00\x00")

func jsTplBytes() ([]byte, error) {
	return bindataRead(
		_jsTpl,
		"js.tpl",
	)
}

func jsTpl() (*asset, error) {
	bytes, err := jsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js.tpl", size: 1767, mode: os.FileMode(420), modTime: time.Unix(1569289381, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _markdownTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x52\xcd\x6e\xd3\x4c\x14\xdd\xcf\x53\x5c\xb9\xd5\xb7\x4a\xeb\xae\x2d\xd5\xdf\xa2\x0b\x36\x88\x15\x62\x01\x42\xaa\x89\xa7\x25\xd4\x3f\xc5\x76\x84\xa2\xc9\x48\xa1\x0a\x10\x14\x9a\x54\x22\x2d\x25\x25\x85\x40\x52\x75\x43\x1a\x24\x0a\x6d\x1c\xda\x97\xf1\x8c\x9d\xb7\x40\xf6\x38\x28\x81\x12\x58\x30\xab\xb9\x47\xe7\x9e\x73\xee\xcc\x95\xe5\x6b\xd8\xc2\x8e\xe6\x61\x1d\xee\x15\xc0\x35\xb4\xec\x06\x76\xd0\x1c\x10\xb2\x78\x43\x33\x31\xa5\x88\x7d\x7c\xc5\x7b\xa7\x6c\x67\x1b\x8a\xc0\x4a\xc3\xf0\x93\xcf\x0e\xab\x50\x84\xe8\xe4\x33\xdf\xaf\xa1\x85\xf1\x29\x2e\x5c\x75\x45\x84\x38\x9a\xb5\x8e\x61\x3e\x97\x99\xcf\xda\x86\xb2\xbc\xb8\x62\x1b\x79\xd3\x72\x29\x05\x42\x62\x28\x05\x84\x1d\x14\xc7\xe8\xcd\xc2\xe6\x54\xbd\x62\x9b\x26\xb6\x3c\x4a\x11\x21\xd8\xd2\x29\x45\x68\x6e\x0e\x1e\xb8\xb6\x15\x76\x06\xc1\x45\x15\xad\xae\xae\xc6\x15\x22\x33\x3d\x01\x40\xba\xc2\x57\x52\x52\xf0\x36\x76\xec\x5b\x9a\x91\xc7\x94\x66\x7e\x38\xd1\x58\x3c\xf1\xe3\xb5\x2e\xab\x7f\x88\x2e\x1b\xec\xe0\xf0\x17\xdf\x44\x3c\x6b\xeb\x58\x52\x96\x32\xa2\x32\xb1\xeb\x6a\xeb\x58\x52\x24\x7b\x43\x4a\x31\x5d\xf3\x34\x49\x11\xf4\x7f\x16\x55\x88\x89\xb8\xf1\x7d\x32\x34\xab\x1c\x30\x7f\x00\x48\x85\x4d\xdb\xf5\x92\x37\x03\x56\xe9\x83\xac\x6d\xe6\x64\x42\x16\xaf\xdb\x8f\xb0\x93\x7e\x77\xc2\x7f\x72\x2c\x7e\x3d\xb8\xec\xf1\xc6\x79\xdc\x97\x9f\xdd\x26\x2b\x39\x1d\xc4\x03\xbd\x78\xc6\x7a\xcd\xc9\xf6\xc4\x57\xf3\xb2\xf7\xff\x42\x41\x55\x21\xb8\xa8\xb2\xa3\x2d\x48\x5b\x88\x34\x7a\x53\x8a\x8e\x1e\x0b\xa9\xb0\x59\x16\xca\x92\xc2\x4a\x43\xfa\x87\x34\x62\xf4\x77\xa3\xd7\x1d\xa4\x82\x8e\x0d\xec\xe1\xdf\xb3\x21\x66\x47\xb5\xaf\xac\xbe\x17\x9c\x95\x78\xab\x8d\x54\x58\xc7\xde\xec\x61\x05\x9f\x75\x9a\x33\xf9\x48\x05\xfe\xb6\x1b\x9d\xbc\xe7\xad\x76\xe0\x7f\x09\xfc\xee\xc3\x3c\x76\x0a\xac\xbe\xc5\x77\xfb\x7c\xef\x9c\x0d\xeb\xa1\x5f\x66\x3b\x95\xcc\xc8\xdf\x8f\x7a\x9d\xff\xed\xb5\x35\x17\x7b\xcb\x4b\xff\x19\x39\x33\xe7\x2d\x2f\x21\x15\xa9\x20\x76\x0e\xa9\x30\xde\x37\x15\x08\x52\x61\x7a\xe7\xd2\xfa\xa7\xad\x4b\xd1\xf1\xde\x89\x32\x81\x3c\xdb\xd3\x8c\xb8\x13\x64\x99\x7d\x7b\xc9\x9e\x6f\x4f\x25\x3d\xab\x86\xcd\x32\x2f\xf9\xbc\xd5\xe6\xbb\xfd\x4c\xd8\x38\x0e\x06\x35\x56\x79\x3a\x6a\x9f\x4e\xaa\x08\xe1\x3b\x77\x53\x2c\x1e\x98\x8a\xa0\xdf\x03\x00\x00\xff\xff\x2c\x19\x42\x29\x60\x04\x00\x00")

func markdownTplBytes() ([]byte, error) {
	return bindataRead(
		_markdownTpl,
		"markdown.tpl",
	)
}

func markdownTpl() (*asset, error) {
	bytes, err := markdownTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "markdown.tpl", size: 1120, mode: os.FileMode(420), modTime: time.Unix(1563850859, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6f\x9b\x40\x10\xc5\xcf\xcc\xa7\x18\xa1\x1c\x40\x4a\x77\xdb\x6b\x25\xf7\xe2\x4a\x55\x5a\x27\xa9\x45\x7a\xaa\x7a\x58\xc3\x84\x6c\xb2\x7f\xf0\xee\xa0\xd4\x5a\xed\x77\xaf\xc0\xc4\x72\x9a\x1e\x2a\x38\xf0\x06\xde\xfc\xe6\x0d\x2b\xe5\x17\x72\x14\x14\x53\x87\xbb\x03\x46\xa3\xda\x27\x0a\x20\x25\xab\x9d\x21\x4c\x49\xdc\x28\x4b\x39\x83\x94\xcd\x76\x03\x52\xa6\x24\x1a\xee\x9a\xed\x66\xae\x4d\x2f\x27\x81\xef\x3e\x61\xaf\xf9\x61\xdc\x89\xd6\x5b\xf9\x68\xbd\x0e\xde\xc9\xb8\x37\xbf\x8f\x9e\x97\x0f\x67\xd7\xda\x9b\xd1\xba\xb8\x74\xdb\x6e\x16\x9d\x33\x0c\xaa\x7d\x52\xfd\xcc\xdd\xf8\x67\x0a\x0b\x1c\xb4\x1d\x7c\x60\xac\x20\xee\x8b\xf2\x0c\x74\xad\x22\x53\xb0\xda\x75\x51\xc6\xfd\xa8\x43\x20\x53\x42\x0d\xd0\x7a\x17\xb9\x82\xa2\x61\xc5\x74\xfb\x6d\xf5\x7e\x79\xfc\x4c\x66\xf5\x01\x6a\x40\xe0\xc3\x30\x73\xd6\xca\x92\x59\xab\x48\x47\x16\x46\x0e\x63\xcb\x09\x10\x11\x53\x0a\xca\xf5\x84\x17\xfa\xf2\xa2\xf5\xe6\xe3\x4a\x9c\x46\xc5\x94\xa6\xd2\x1b\xfb\x52\xbe\x3b\x0c\xe7\x4a\xf5\x67\x0e\x6f\x2d\x39\xce\x79\x41\x90\xeb\x72\x86\x0c\x90\x92\xbe\x47\x71\x15\x7f\x44\x0a\x77\xd3\xfa\x73\x86\xfb\xd1\xb5\x58\xa5\x24\xae\x9c\x66\xad\xcc\x91\xfc\x37\xb5\xc6\x6b\x15\xe2\x83\x32\x5f\x9b\xdb\x9b\xaa\xc6\xea\xe7\xaf\xdd\x81\xe9\x12\x29\x04\x1f\x6a\x4c\x50\xcc\x71\xd9\x0e\xff\x70\x43\xf1\xaa\xbf\x48\x49\x7c\x57\x31\x3e\xfb\xd0\x1d\xe3\xbe\x09\xb9\xc2\xb2\x84\x22\x10\x8f\xc1\xe1\x63\xf4\x4e\x2c\xfc\x8a\xed\xf0\x7a\xda\xba\x86\x0c\x2f\x21\xff\x3b\xce\x1c\x7f\x12\x55\x3d\xfd\x10\xed\x7a\x4c\x78\x22\x96\xa7\x63\x59\x4e\x7b\xc3\xe9\x9e\x2f\xfc\x13\x00\x00\xff\xff\xe0\x18\x7f\x11\xcf\x02\x00\x00")

func modelsTplBytes() ([]byte, error) {
	return bindataRead(
		_modelsTpl,
		"models.tpl",
	)
}

func modelsTpl() (*asset, error) {
	bytes, err := modelsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "models.tpl", size: 719, mode: os.FileMode(420), modTime: time.Unix(1563850859, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x96\xc1\x6e\xdb\x38\x10\x86\xcf\xe2\x53\x0c\x7c\x92\x16\x82\x7c\x59\xec\x61\x17\x3e\x64\x9d\xb4\x0d\x10\x14\x01\x9a\xf4\x62\x18\xc1\x58\x1a\xd9\xac\x29\x51\x25\xa9\x24\x86\xaa\x77\x2f\x48\x49\x76\x6c\xd3\x8e\x03\xf4\xa4\x83\x66\xfe\xf9\x66\xe6\x27\xa5\xf1\xf8\x33\x95\xa4\xd0\x50\x06\x8b\x0d\x68\x81\xe9\x9a\x14\xab\x30\x5d\xe3\x92\x40\x93\x7a\xe6\x29\x31\xc6\x8b\x4a\x2a\x03\x21\x0b\x46\x4b\x6e\x56\xf5\x22\x49\x65\x31\xfe\x51\x48\xae\x64\x39\xd6\x3f\xc5\xeb\x88\x05\xa3\xa6\x19\x2d\xa5\x56\xe9\xb8\x90\x19\x09\x3d\xfa\x05\xc9\xad\x4b\xbc\xe3\x0b\x85\x6a\xd3\xb6\xe3\xa6\x49\xbe\x62\x41\x6d\x3b\x62\x11\x63\x2c\xaf\xcb\x14\x42\x0d\x7f\x7d\xeb\x2a\x45\x0f\xb8\xa6\xa6\x49\xa6\x58\x90\x98\xa2\xa6\x2e\x38\xe4\x19\xf0\xd2\xfc\xf3\x77\x14\x36\x4d\x72\x27\x5f\x48\x75\x2f\x92\xe3\xd8\x98\x94\x92\x2a\x6a\x80\x05\x19\x1a\x8c\x81\x94\x82\x7f\x27\xa0\x93\x0c\x65\x72\x52\x3f\x02\x16\x28\x32\xb5\x2a\x61\x97\xc6\x5a\x0f\xe2\x1d\xd7\xc6\x23\x21\xf3\x5c\x93\x89\x05\x2f\xb8\x81\xda\xd1\xc6\x9a\x50\xa5\x2b\x78\x97\x39\x0a\x67\xf3\xf7\x1b\xe3\xa5\x39\x6c\xce\x48\x83\x22\xde\xeb\xf0\x02\xbc\x9e\xeb\xb0\xe5\x4e\xec\x74\xe3\x53\x45\x68\x7c\xd3\xdb\x47\xbf\xa4\xdd\x8f\x6c\xb1\x69\x78\x0e\xc9\xad\x7e\xd4\xa4\x1e\x70\x21\xa8\x6d\x59\x10\x1c\x2b\xd8\xf7\x25\x16\x34\x95\xa2\x2e\xca\x43\x41\x98\x80\x36\x8a\x97\x4b\x9d\x3c\x48\x97\xe9\x81\x38\x2f\x11\x79\xcb\xde\xa3\xd6\x2f\x52\x65\xa7\xcb\x26\x37\x65\xaa\x36\x95\x19\x22\x3d\x85\xcf\x8b\xd8\xc2\x3c\xef\xf7\x7b\x3c\xab\x5b\x7d\xf3\xca\xb5\xf9\x78\x3f\xd0\xb0\x20\x18\x2c\xb0\x9f\xed\x6c\x90\xca\x8c\x92\x2b\xa1\x08\xb3\x8d\x2b\xc1\x82\xa0\xb5\x0b\xa1\x32\xb3\x4b\xf0\x9c\xaf\x0b\x3d\x72\xf9\x69\x7b\xac\xb2\x3f\x64\x3a\xe7\x28\x6b\x28\x80\xbe\x74\x87\x7c\x61\x05\x8b\xec\x47\xbc\x47\x93\xae\xce\x5c\x5a\x71\xed\x2a\x40\x81\xd5\xac\xf3\xe0\x9c\x97\x86\x54\x8e\x29\x35\x6f\xb8\xfc\x46\xe7\x39\x3c\xdb\x63\x29\xd7\x76\xca\x9d\xd4\x6c\xe4\xf1\x8c\x7b\xf4\x97\xeb\xfc\x3f\x1b\xef\xd6\x5b\xf5\x61\x83\xc2\x33\x8a\x24\xec\x30\xac\xaf\xac\xfe\x10\xba\x8d\xf5\xba\x76\x78\xe9\xb2\x82\x4b\x41\x60\x02\x43\xa2\xcd\x6b\x0f\x2c\xb4\xbf\x8a\xd3\x93\xec\x67\x18\xf9\x37\x70\x4d\x82\xbc\x2b\xdc\x7e\x37\xb6\x43\xde\xab\x77\x26\x2f\x02\x57\xca\xb7\x93\xa3\xf2\xe0\xff\xaa\xfc\xbf\xb1\xcf\xb0\xee\x0f\x61\x7f\xff\x44\x70\xc1\xed\x07\xdd\xf5\x07\x6f\x88\x83\x73\x1f\xb0\x83\x52\x3d\x7c\x07\xfa\xb4\x03\x3d\xb5\xd2\x2d\x5a\xf7\xb4\x6e\x58\xa1\x5e\x65\x31\x3c\x59\xcb\x2c\x5c\x56\x32\xfc\x2a\x7c\x52\xb2\xd8\x4a\xcc\xe6\x8b\x8d\xa1\x9d\x39\xe2\x21\xfa\x9a\x72\xac\x85\x99\x4a\x6d\xa2\xdd\xd8\x9d\x7e\xe8\xc4\x23\x2f\xe2\x77\x14\x3c\x3b\x02\x8c\xa9\x23\xa7\xac\x7a\xd9\xd1\x2e\xa4\x14\x96\xb5\x17\x2f\xb9\x80\xc9\x96\x76\x2a\x8b\x0a\x15\x7d\x41\xbd\xba\x2a\xb3\x43\xde\xb7\x7a\x51\x0c\x87\x5d\x44\xac\x05\xd6\x9b\xf4\x77\x00\x00\x00\xff\xff\xeb\xd0\x85\x03\x24\x09\x00\x00")

func serviceTplBytes() ([]byte, error) {
	return bindataRead(
		_serviceTpl,
		"service.tpl",
	)
}

func serviceTpl() (*asset, error) {
	bytes, err := serviceTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service.tpl", size: 2340, mode: os.FileMode(420), modTime: time.Unix(1575006368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vueTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x6f\x1b\xc7\xf1\x7f\xaf\x4f\x31\x59\x38\x01\x99\xf0\x4e\x72\xfe\x08\xfe\xc8\x89\xc7\x1a\x51\xda\x22\x68\xd1\x06\x68\xf2\xca\x30\x82\xd5\xdd\x92\xdc\x7a\xef\xa1\xbb\x4b\x3d\x84\x20\x50\xb4\x49\x6c\xa7\x4d\xe4\xa2\xa9\x90\xe6\x01\xb6\x0b\xa7\x4f\x80\x15\xbf\x28\x5c\x3b\x56\xd2\x2f\x23\x52\xce\xab\x7e\x85\x62\x77\x8f\xbc\xbd\x07\x8a\x94\xa3\x04\x35\x50\x40\x20\x8f\xbb\xb3\x33\xb3\x33\xbf\x99\x9d\x9d\x13\x40\xfb\x29\xc7\x81\x1f\x92\x98\x70\x2c\x49\x08\x9b\xbb\x20\x18\x0e\x2e\x13\xee\x38\x1d\x58\x69\x4b\x12\xa5\x0c\x4b\xd2\x59\x01\x68\x13\xe6\x04\x98\x87\xea\x19\xa0\x1d\xd2\x2d\x10\x2c\x91\x3e\xea\x13\x1c\x12\x8e\xcc\xb8\xa1\xeb\x26\x3c\x02\x8f\xc6\x8c\xc6\xc4\x47\x92\x0f\x08\x82\x2d\x27\x4a\x42\xc2\x7c\x24\x08\xe6\x41\x5f\x91\x20\xb8\x20\x06\x9b\x11\x95\x6e\x8c\x25\xdd\x22\x6e\xca\xc9\x16\x89\xa5\x8f\xe2\x24\x26\x33\x8e\x39\x4f\x87\x4a\x12\xe5\xc3\x66\x82\xc6\xe9\x40\x42\xca\x49\x97\xee\x38\x34\x48\x62\x1f\xa9\xd1\x20\x89\x1d\x23\x0a\x41\xc0\x08\xe6\x78\x93\x91\xa9\x16\xae\xe4\x34\xb2\x55\x71\x69\x8a\x20\x65\x38\x20\xfd\x84\x85\x84\xfb\x68\x72\xe3\xb3\xc9\xb5\xaf\xc6\xef\xbc\x3d\x3e\x78\x80\x3a\xed\xd5\xa9\x24\x4b\xab\xd5\x82\x5a\xb0\x9c\xba\x9b\x03\x29\x93\x18\xe4\x6e\x4a\x7c\x94\x72\x1a\x61\xbe\x8b\xe0\x42\xc0\x68\x70\xd9\x47\x3f\xcb\x34\xae\xdd\x47\x67\x72\xe3\xb3\x47\x9f\xff\x49\xcb\x35\x6c\xe6\x30\x9f\x72\xe3\x44\x10\x69\xd9\xbb\x33\xb9\xff\xf6\xf1\xdf\xbe\x30\x6c\x26\x9f\xde\x3a\x7a\x78\xaf\x96\x59\x69\x67\x2b\xa5\xd1\xd9\x80\x42\x4f\x8d\x58\x1a\xa5\x09\x97\x5d\xca\x88\xbb\x45\x05\xdd\x64\xc4\x37\x18\xe0\xc9\x20\x0e\xcb\x5b\x0f\x18\x16\xc2\x47\x0a\x5b\x19\x23\xd4\x69\xd3\xe9\xf0\xd4\x04\x83\x94\x25\x38\x7c\x5e\x79\x82\x76\xc6\x9f\x1f\x8e\xdf\xfe\xec\xd1\xad\xbf\x4e\x6e\x1e\xda\x1b\x00\xc7\x59\xa4\xdb\xf7\x77\x94\x6e\xa8\xac\x84\xd1\x6c\x39\x55\xc2\x64\x3b\x56\xca\xe4\xba\x5c\xf9\xe2\x64\x5d\xaa\x6a\x04\x9c\x60\x39\x33\x0f\xf8\x60\x0c\xb4\xac\x56\x25\x7c\xa4\x6c\x20\x50\x67\xf2\xcf\x87\xe3\x77\x6f\xd6\x38\xd4\x04\xab\xdc\x65\xc4\x47\x3a\x14\xbc\xcd\x44\xf6\x95\xfa\x21\xdd\xca\xe2\xd9\x7a\x24\xcc\x91\x3a\x58\xbc\x10\x4b\xec\x23\xfd\xc3\x55\xcf\x68\xca\x65\x9b\x86\xb2\xef\xc1\xf9\xb5\xb5\xa7\x55\x10\x13\x46\x02\x49\x93\xd8\x09\xfa\x38\xee\x11\x05\xe3\x6c\x64\x43\x0f\xa8\xe8\x57\x16\xa3\x71\x6f\xca\x2e\xfb\x59\x48\x1b\x7a\xc6\x09\x12\x36\x88\xa6\x01\x32\x63\x8d\x40\xcb\xf4\xd1\x0b\x2f\xa0\x02\x20\xed\x45\x39\x82\x87\x43\xae\x04\xc3\x39\xda\x3a\x17\x24\xcc\xf3\xdd\x0d\x4d\x21\x46\xa3\x79\x02\x19\xde\x54\xe9\x69\x38\x54\x0b\xdc\x0d\x1c\x11\xb6\x81\x05\xf9\x09\x8e\xc8\x68\x64\x27\xa3\x69\x56\xd4\xf9\xcf\x11\x41\xa2\x15\x55\x5f\xa8\x10\x8f\x22\xc5\x71\x07\xda\xed\x36\xe8\x49\x97\x27\xdb\xee\x94\xbb\x16\x69\x58\x43\xa7\xd3\x81\xf6\xaa\xa6\xb6\x22\xd0\xce\xbd\x0b\x36\x0b\xc3\x21\x89\xc3\x85\x3b\x9b\xfc\xfe\xbd\xa3\x2f\x3f\x79\x9c\x9d\xe4\xf8\x15\xf4\x4d\x45\x12\x61\xc6\x2a\x68\x4d\x19\xa6\x39\xc2\x07\x69\xa8\x10\xae\x8f\x02\x1f\x7e\xba\xf9\x73\x12\x48\x17\x0b\x41\x7b\x71\x63\x38\x6a\xcd\x4c\xd2\x5c\xcf\x28\xcb\xb1\x50\x84\x38\x09\xa9\x44\x1d\x58\x9c\xfb\x6a\x34\x0c\x15\x14\x78\x9e\x64\x5f\x26\x8c\x48\xd2\xc8\x55\x28\x0b\x0b\x35\x41\x96\xf5\xab\xc9\x71\x49\xd7\xe4\xc3\xf6\x99\x69\x02\x28\xc2\xbc\x47\x63\x87\x91\xae\xf4\xe0\xf9\xb5\x74\x67\x3d\x1b\x91\x49\x6a\x06\x50\x4d\xf6\xd8\x72\x44\x3f\xd9\xf6\x51\x34\x60\x92\xa6\x8c\xcc\xc2\xcc\x65\x24\xee\xc9\x7e\xc5\x25\xd3\x1d\x6f\xa8\xaf\x97\xb0\x0c\xfa\xaf\xaa\x0f\xd4\x99\x5c\x7b\xf0\xf5\x95\xbd\xa3\x7f\x1d\x4c\x3e\x78\x50\x97\x31\x4e\x2f\xb3\x6c\xe4\x5c\xe4\xcb\x99\x35\x8d\xcc\xf1\xd5\x9b\x5f\xff\xf1\x76\x45\x66\x29\x01\xa5\xb8\x47\x55\x51\x90\xc4\xe0\xf5\x69\x48\x1c\x75\x0a\xd2\xb8\xc7\x88\x9a\x9a\x15\x15\x59\x6a\xcc\xa9\x11\x6c\xe2\xe0\x72\xcf\x24\x4e\x86\x77\x93\x81\xf4\x91\xc6\x84\x68\x81\x4c\x24\x66\x2d\x55\x2a\x6c\xb5\x40\xb1\xe1\x2d\x88\xc9\x8e\x44\xe0\xe9\xa9\x69\x6e\xd2\x3f\x10\x78\x8a\xc4\x31\x78\xca\x92\x16\x8d\xa8\xb4\x27\x84\x8f\x2e\x9e\x5f\x6b\xc1\x0b\x6b\x2d\x95\x0c\x5b\xf0\xe2\x8b\x2f\x5e\x52\x19\x91\xbe\x49\xf2\x64\x48\xdf\x24\xd3\x3c\x78\x21\x18\x70\x4e\x62\x39\x9b\x7c\x15\xf7\xa6\x93\x16\x6a\xf2\x0d\x75\x56\x66\x36\x09\x29\x66\x49\x0f\x24\x95\x0a\x41\x26\xdb\x23\xf0\xb2\xb8\x71\xc5\x6e\x1c\x94\x0f\x96\x3c\x6b\xae\x95\x21\x65\x6a\xb4\xac\x26\xcb\x56\x99\xa2\x4c\xa7\x0b\x27\x4d\x04\x55\x0a\xf8\x88\xd3\x5e\x5f\x4e\x87\x33\x7e\xe7\x0b\xfc\x96\xcb\xb8\x19\x19\xed\x42\x9c\x48\xd0\x79\xf0\x15\xf1\xaa\x81\xea\x8f\xc8\xae\x45\x57\x28\xa0\x96\x4e\xcc\x76\x39\x38\xad\xf3\xb4\xb8\x8d\x24\x96\x98\xc6\xc2\xc8\x7c\x6d\x37\x25\x80\x68\x2c\xd1\x68\x14\x0f\xa2\x4d\xc2\x87\x43\xc2\x04\x19\x8d\x54\x51\x98\xa5\xd2\x82\x49\xea\xb2\x36\x02\x3c\x90\x89\x13\x24\x51\xaa\xd0\xed\xa3\xa4\xdb\x5d\xaa\x4c\xb4\x8d\x51\x4a\xdc\x35\xa9\xbc\x52\x72\xe5\x75\x77\x37\x49\xa4\x0a\xb8\x2c\x06\x0c\x3a\x9c\x6c\xb4\x58\x3b\x2f\x2a\x3e\xba\x98\x09\x82\x3a\xe3\xbd\x7d\x98\xdc\xbb\x5a\x9f\xf5\x16\x96\xae\x1b\x9a\x2b\xea\x1c\xdf\x3a\x80\xf1\xc1\x47\x75\x59\xc5\xae\x37\x66\x80\x9e\x8b\xf0\xe3\xc3\xfd\x47\x5f\xfd\xae\x82\xf0\xe2\x71\xb1\x2c\xc2\xad\xe3\xe8\x71\x10\xbe\x1c\xba\x9f\x18\x70\x5b\xd6\xf8\xb6\xc0\x5d\x04\xf2\x77\x01\xeb\x4a\x1d\x71\x26\xb0\x7e\x5d\x73\x3d\x43\x58\xdb\x47\x6f\x05\xdc\x9b\xea\xc0\x4c\xd5\xc7\x69\x01\x6e\xad\x7c\xfc\x34\xbe\x64\x12\x7f\x72\x80\x5e\xb2\xca\x77\x03\xf6\xef\x06\xee\x55\xa8\x9c\x15\xe4\xed\x42\xf1\xf4\xb0\xcf\xfa\x20\x35\xc0\xdf\xbb\x7e\x7c\xfb\x0b\xef\xe8\xfe\xbb\x47\x87\x37\xc7\xd7\xdf\x1f\xdf\x7d\x67\xf2\xc1\x83\xf1\xde\x87\xe3\xf7\x6f\x4c\x3e\xb9\x36\xf9\xc3\xdd\xc9\x7b\x07\x95\x88\xa8\x36\x13\x66\x11\xf1\x7f\x6b\x4f\x17\xe2\xc1\xf4\x08\x80\x93\xae\x4a\x06\xfa\x8a\x0e\x9e\x75\x2b\xfd\x01\x65\xb3\x42\xcc\x53\x1c\x1d\x46\x85\x2c\x88\x50\x1f\x6a\x10\x81\xd7\x97\x32\x75\x38\xf9\xc5\x80\x28\x9a\x57\x22\xd3\x37\xf0\x34\x58\x0c\x77\x1f\x19\x73\x43\xc8\x71\x0f\x70\x60\xe2\xcc\xf6\xda\x9c\x36\x86\xe9\x1c\xe4\x64\x0a\x0e\x39\xa1\xa1\x79\xe3\x0d\xa9\x4a\xd3\x8e\xb2\xd2\xfe\x95\xa3\x87\xf7\x26\xbf\xd9\x1f\x5f\xbd\x3b\xb9\x73\x7b\x7c\xfb\xad\x7f\x1f\xfe\x76\x72\x75\xbf\x10\x33\x51\xe7\xf8\x57\x0f\xc6\x57\x1e\x1a\xf3\xb6\x57\x6d\x80\x5a\xae\x3a\x49\x1e\x4d\x51\x86\x4a\xf5\xd8\x19\xef\xfd\xfd\xd1\xaf\xbf\x34\xfc\xdc\x1d\x26\x76\x8c\x1e\x05\x66\xda\xf3\x86\xc1\x6c\x48\xdd\x64\xbf\x31\xba\xab\x6e\x3f\x2b\x74\x9b\x96\xe3\xeb\x99\x23\x4e\xc2\x77\x7e\x25\xb7\x01\x6e\xf0\xbd\x92\x0d\x9a\x96\xa8\x7d\x27\x5c\x69\x8b\x80\xd3\x54\xe7\x0d\xb3\x0b\x78\x16\xb0\x00\x9c\x52\xe8\xf2\x24\x02\x74\x61\x15\xa7\x74\x75\x38\x74\xb3\x04\xb4\xbe\x02\x40\x74\x5f\x0a\x42\xd2\xc5\x03\x26\x61\xa8\x85\x84\x58\xe2\x46\x33\xfb\x01\xc0\x89\x1c\xf0\x78\xf6\x13\xa0\x72\x27\xf3\xe0\xe2\xa5\xd6\x6c\x5a\x5f\x5a\x3c\x8b\x1e\x20\x6b\xbb\x78\xc6\x94\x2d\x6b\x46\xc9\x2a\x2e\x07\x73\x61\xf2\x60\xcd\x1e\x4b\xba\x5d\x41\x64\x69\x50\x5f\x8c\x3c\x38\xbf\x36\x1b\x1b\xe5\xd3\x79\x03\xd2\x83\xa1\x35\x6e\xca\xd0\xa2\x7e\x55\x2a\x80\xcc\xff\x99\xce\x75\x12\xcc\xc9\x7f\x16\x9c\xf2\xa4\x7a\x16\xdc\x72\x10\x97\xb8\x65\x59\xa6\x6c\xef\x79\x1c\xb3\xa7\xd1\xfa\x8a\x25\x20\x22\xb2\x9f\x84\x22\xe7\xdc\x23\xb2\x04\x18\x00\xd9\xa7\xc2\x2d\x74\xdc\xb2\xfe\xca\xfa\x8c\x04\xa7\xd4\x52\xc1\xfd\x31\x15\xb2\x51\x38\xec\x8b\xbd\x9b\xc2\x14\xc0\x70\x06\x08\x4b\x94\x19\x6a\x4d\x61\x61\x2b\xa1\x46\xa0\x60\xc6\x99\x9a\x39\x4e\x0a\xb3\xcd\x95\xfa\x67\x57\xf6\x49\xdc\xe0\x22\x05\xbf\x53\xb0\x6e\x61\xd7\x1a\xc2\xe0\x03\x17\xa9\x6e\x61\x9a\x81\xf5\x79\xe4\x8a\xc4\xa6\x56\x1f\x73\x89\x73\x8b\x6a\x7f\xd9\x74\xa3\x82\xa6\x81\x02\x54\x83\x70\xae\x55\x1d\x35\xa7\x94\x33\x3b\xe4\x5d\x80\xc6\x16\x66\x73\x1c\x68\xac\xaa\xfc\x57\xb6\xe7\xb3\xa0\x96\x81\x03\xe7\x9b\xeb\xc5\x95\x33\x4c\x54\x44\xe6\x5d\x89\x13\x44\x1a\xf6\x3e\x6c\xd9\x26\x5b\xc0\x58\xbf\x74\x30\xb1\xad\x7c\x59\x85\x63\xfd\xf5\x73\xbd\x96\x28\x6b\x1f\x0e\x47\xf5\x62\x72\xc8\x54\xc5\xe4\x73\x05\x06\xd9\xac\x79\xd1\x52\x67\x97\x6c\x62\x81\x0f\xd6\x96\xb6\x87\xb9\x17\x17\x18\x32\x22\xc1\x0a\x47\xb5\xfe\x5c\xf6\xbb\x51\xcc\xd6\xc1\x65\x4f\x87\x6b\x21\x2b\x93\x1d\xe9\x41\xd6\xce\x3d\xba\x7f\xc7\x75\x5d\x64\xcf\x8b\x94\xc6\x31\xe1\x1e\xcc\xaa\x8e\x69\xb3\xdd\xa6\xca\xfb\x64\x1e\x20\xde\xdb\xc4\x8d\xb5\x16\x64\x7f\xee\xff\x37\x51\x9e\x7d\x9a\x73\x73\x45\xb6\xb5\xb2\xc3\x4e\x13\xa5\x15\xb4\xd4\x44\x5b\xc5\xb6\xb0\x30\xc2\x2a\x1a\x34\x9a\x55\x05\x32\xb3\xb8\x01\x4b\x04\x29\x73\xaf\xf8\x31\xeb\x1a\xf3\x64\xbb\x82\x8d\x73\x41\x12\x77\x29\x8f\x1a\x68\x72\xe7\xb6\xf1\xcb\xf8\xee\x3b\xa6\xd3\xa9\x46\x3e\xbd\x65\x8a\xdb\x16\x4c\x3e\xfc\x7c\x7c\xfd\xcf\xc7\x0f\xff\x72\xfc\xf0\xce\xf7\x50\x0b\xb2\xa2\x18\xb5\x0a\xaa\x65\xec\x5e\xd2\xf5\xc8\x6b\xc6\xdd\xc7\xb7\x0e\xc6\x07\x1f\x15\x5c\x18\xe0\x38\x20\xac\x40\x35\xde\xdb\x9f\xdc\xbb\x5a\xa0\x52\x65\x90\x07\x68\x1b\xf3\x58\x61\x60\xa5\xde\x80\x73\x8d\x54\x74\xb9\xa6\xcd\x2d\xe1\x0e\x87\x6e\x7e\xf7\x33\xb7\xaa\xc2\xe5\xaa\x59\x5e\x3b\x1f\x0e\xb9\x35\xe3\x44\xd2\xee\xae\x2b\x06\x41\x40\x84\x68\xa0\xcc\x90\x57\xaf\x8f\xdf\xbd\x81\x4a\x00\x81\x13\x41\x52\xd9\x27\x9c\x94\x8e\xab\x56\x59\x98\xb8\x4d\x77\xa0\x10\xdc\xa5\x18\xc9\x28\xb4\x8e\xc5\xb6\xcb\xc9\x96\x6b\x41\x79\xc9\x69\xc2\xaa\xbe\x17\x52\x13\x5b\x15\x63\x4f\x3e\xfe\xc7\x64\xff\x6e\xbd\xb1\x1f\x37\x1a\x6b\x92\x6c\xe1\xfd\x60\xed\x09\x54\x29\x6e\x8b\xe7\x50\x9e\x5f\x4b\x2f\x1a\xaa\xa9\xdb\x0a\x4f\xeb\x15\xc4\xd7\xbf\xbc\x76\x74\xff\xce\xf1\x47\x6f\x4d\x3e\xbd\x75\xfc\xf1\x13\x19\x9b\x7a\x77\x85\xad\x2f\xf2\x49\xc6\xa5\xc6\x25\xf3\x2c\xf8\xc4\x9e\x55\x4a\x71\x1a\x0a\xf0\xe1\xe2\xa5\x7c\xb4\x9b\x70\x68\xe8\xa9\x38\x24\x3b\xfa\x20\xcf\x1e\xdb\x73\x60\x97\xbd\xe7\xca\xc8\x9e\x7b\xae\x59\x86\x83\x90\xa0\x3b\x5c\xfe\x1c\x06\x17\xf5\xc2\x4b\xb6\x6b\x68\x28\xdc\x74\x20\xfa\x0d\xb5\x70\x71\x12\x5d\xaf\x5c\x05\x2a\x69\xc6\x76\xdf\x10\x16\x71\xf4\x94\x61\x6a\x40\x36\x3f\xa1\x9c\x2a\x29\xff\x17\x9d\xda\xa5\x37\x9f\xd5\xe4\x50\xea\x10\xd6\xd5\x8a\xb5\x9d\x36\xfb\x12\x55\x0c\xa2\xaa\xa0\xff\xc5\xd0\x93\x13\x43\xc6\x7b\xb0\x6c\x0c\xb5\x6a\x51\xf4\x8d\x22\xcb\xbc\x1a\x38\x6d\x64\x9d\x84\xd5\x53\x5e\x4f\xbf\x85\x30\x34\xff\x76\x55\xae\x93\xdc\xe9\x70\x85\xde\xb4\x5b\xb5\x6b\xed\x35\x5b\x98\xeb\x33\x13\x7c\x4b\x1c\xc2\x69\xca\x68\xa0\x5f\x97\xaf\x6e\xc5\xa1\x9b\xa4\x24\xde\x89\x98\x72\x04\x96\xc2\x49\xba\x5d\x1a\x90\x30\x09\x06\x11\x89\xa5\x2b\x52\x4e\x70\x28\xfa\x84\xc8\x88\xb9\xfa\x1b\xe5\xda\xd3\x2e\xd8\x2d\x0e\x8d\x2d\xdd\x85\xd4\x62\x9f\xf2\x7d\x23\xff\x99\x67\x4e\x26\x2a\xe8\xb4\x9d\x4e\x95\xd0\x6d\xd4\x3c\xd4\x8a\x61\x60\xd0\x10\x11\x21\x70\x8f\xb8\x84\xf3\x84\x37\x90\xdd\x84\xd5\x3d\xd8\x9b\x87\xe3\xc3\xbd\x22\x2c\x4c\x5f\xb0\x0e\xe0\xcb\xa4\x9a\x42\xe0\xcf\x0b\x0d\xcb\x1f\x7a\xa7\xdf\xec\xe8\xd0\xff\xbe\x77\x02\xc0\xe7\x37\x7f\xcf\x18\xc4\x45\xfb\x34\xeb\xc0\x7c\xf2\x69\x56\x01\xae\xdd\x5d\xae\xa9\x44\x39\xe9\xaa\xe2\x5c\xcd\xba\x86\xb4\x06\xfc\xf9\x7b\x8a\x86\xb2\x41\x0b\x18\x15\xb2\xc2\xab\xe6\xad\x85\xca\xd3\xea\xdb\x4d\x93\xb4\xd1\xbc\x54\x61\x1c\x27\x31\x69\x34\x87\x06\x1f\xa3\x96\xe9\x64\x9b\xcb\xb7\xad\x6c\x69\xc3\x86\x4c\x2d\x1a\xad\xaf\xb4\x57\xa7\xdd\xed\x15\xf8\x4f\x00\x00\x00\xff\xff\xdc\x78\x49\x6f\x40\x2c\x00\x00")

func vueTplBytes() ([]byte, error) {
	return bindataRead(
		_vueTpl,
		"vue.tpl",
	)
}

func vueTpl() (*asset, error) {
	bytes, err := vueTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vue.tpl", size: 11328, mode: os.FileMode(420), modTime: time.Unix(1575006368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"component.tpl":   componentTpl,
	"controllers.tpl": controllersTpl,
	"dao.tpl":         daoTpl,
	"js.tpl":          jsTpl,
	"markdown.tpl":    markdownTpl,
	"models.tpl":      modelsTpl,
	"service.tpl":     serviceTpl,
	"vue.tpl":         vueTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"component.tpl":   &bintree{componentTpl, map[string]*bintree{}},
	"controllers.tpl": &bintree{controllersTpl, map[string]*bintree{}},
	"dao.tpl":         &bintree{daoTpl, map[string]*bintree{}},
	"js.tpl":          &bintree{jsTpl, map[string]*bintree{}},
	"markdown.tpl":    &bintree{markdownTpl, map[string]*bintree{}},
	"models.tpl":      &bintree{modelsTpl, map[string]*bintree{}},
	"service.tpl":     &bintree{serviceTpl, map[string]*bintree{}},
	"vue.tpl":         &bintree{vueTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
