// Code generated by go-bindata.
// sources:
// controllers.tpl
// js.tpl
// models.tpl
// sql.tpl
// vue.tpl
// DO NOT EDIT!

package mvctemplate

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _controllersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x5d\x4f\xdc\xba\x16\x7d\x8e\x7f\x85\xaf\xa5\x5e\x25\xdc\xd4\x09\xa8\xed\x03\xbd\xf3\x00\x53\xfa\x71\x8a\x80\xc3\x50\x9d\x07\x84\x90\x27\xd9\x19\xac\x26\xf6\x1c\xc7\x01\x46\x39\xf3\xdf\x8f\x6c\x87\x61\x18\x32\x9f\x1a\x41\xcb\x0b\x21\xb1\x97\x97\xd7\x5a\x7b\xc7\x24\x8a\xbe\x80\x00\xc5\x34\xa4\xb8\x3f\xc2\x9a\xf5\x73\xd8\x2b\xb5\xaa\x12\x8d\x51\x14\x0d\xb8\xc0\x4a\x56\x1a\x14\x8a\x76\x10\x1b\x72\xfa\xe5\xe8\xc2\x27\x51\x5d\xd3\x63\x79\x07\xea\x84\x15\x30\x1e\x47\xfb\x3c\x25\x61\x22\x85\x56\x32\xcf\x41\x95\xb4\xae\x69\x97\x15\x90\x77\x59\x09\x6e\x4c\x3d\xa6\x17\xec\x27\x04\x73\x41\x56\x00\x38\xe6\xa5\x76\x00\x67\xa7\xbd\x8d\x10\xba\x0a\x98\x6e\x48\x9c\xfd\xd8\x78\x27\x3f\x86\xe9\x23\xcc\xc1\x45\xf7\xeb\xa6\x40\x67\x4c\x27\x37\x0e\xe7\xd3\xd1\xf1\xd1\xc5\xd1\xa6\x40\x9f\x20\x07\x0d\x01\x5e\x40\x69\x05\x94\x43\x43\x67\x39\xa7\x55\x91\x1a\x52\x73\xd5\x5e\x15\xe7\x41\x6e\x5e\x0c\xa5\xd2\x29\xd3\x6c\x5e\x00\xf0\x52\xc0\x6f\x16\x23\x40\x70\x3f\xc1\x6a\x4f\xe3\x72\xa8\xa3\x7b\x07\xb5\x13\x21\x34\x64\xc9\x4f\x36\x80\xe9\x49\xa8\xe1\xeb\x23\x8c\x31\x26\x75\x4d\x06\xb2\x54\x49\x54\xc8\x14\xf2\x92\xfc\x83\x1b\x2e\xc7\xbc\xaf\x98\x1a\x8d\xc7\x04\x79\x64\xc0\xf5\x4d\xd5\xa7\x89\x2c\x4c\xed\xbd\x1d\x48\xc1\x13\x73\x65\x9e\x09\xd0\xd1\x8d\xd6\x43\x73\x5d\x6a\x95\x48\x71\x4b\x50\x80\x90\x1e\x0d\x01\x3f\x67\x88\x5d\x19\xd7\x18\x8d\x11\xca\x2a\x91\x60\xff\xba\x65\x58\x80\x4d\x59\xf9\x09\xde\x19\x70\x41\xbb\x52\x68\xb8\xd7\x01\xc6\xb5\xa5\x7d\xcb\x14\x7e\xaa\x0c\x76\xfc\x5b\x24\x41\x9e\xcc\xb2\x12\x74\x78\xbd\xdf\x69\xf8\xd1\x33\xa6\x4a\xf8\xc1\x85\xf6\x13\xfa\x09\x32\x56\xe5\xfa\xcf\x0a\xd4\xc8\x27\x6e\x2c\x09\x49\x4c\x82\x10\xef\xc6\x21\xfe\xf0\x2e\x40\xd8\xae\x9a\xf3\x82\xaf\x08\x63\x87\x36\x28\xbb\x71\x38\xc1\x30\xce\x86\x5a\x6a\x96\x87\xa0\xd4\x7e\x67\x66\x17\xb6\x97\xf8\x0d\x5f\x8b\x11\x98\x59\x1e\xcf\x30\x28\x85\xff\xd3\xc1\x82\xe7\xb8\x46\x9e\x97\xd0\x3f\x7a\xa7\x27\xbe\x11\x9e\xf6\x34\xd3\x55\x79\xfa\x3d\xc4\xe6\x1e\x3d\x52\x4a\x2a\x1f\x94\x0a\x02\xe4\x79\x0a\x74\xa5\x04\xf2\xc6\x68\xd1\x9c\xd3\xef\xbe\xd1\xf9\xab\x81\x26\x86\x24\xd9\x6f\xc8\x9a\x1b\x96\x30\xd9\xc7\x8e\x38\xf2\xc6\x41\xb0\xcc\x3d\xd3\x55\xb7\xe2\x9e\x99\xc0\xd3\xd0\xee\x7f\xbf\x83\x9f\x48\xff\xcd\x2a\x7f\xc6\x14\x2b\x7c\xc2\xd3\x47\xad\xd7\x13\xec\x90\xa5\xe7\xf0\x77\x05\xa5\xf6\x67\x24\x33\x8b\xcf\x38\x54\xd7\xf4\x4c\xf1\x82\xa9\xd1\x77\x18\x75\x65\x5e\x15\x62\x96\x73\x87\xa7\x2d\x33\xdd\x16\x9e\x39\x6e\x85\x5a\x97\xf1\x86\x16\x3f\x5d\x7a\xb9\x89\xee\xbd\xb4\x3d\x1b\xb3\x07\x17\x13\xda\xbb\x91\x55\x9e\x1e\x72\x91\x5a\xc2\xff\x9d\xa1\xf6\xf1\xa9\x18\xb8\xf9\x59\xd9\xc4\x87\x09\x8b\xac\x0c\x1b\x32\x33\x86\x34\x9b\xfe\x45\x2d\x71\x2f\x9d\x36\x4b\xbc\x57\xae\x93\xf5\x7a\xf2\xe6\x59\xd8\x90\xa2\xb7\x7e\x1d\xe3\x0e\xe6\x29\xf2\x5a\xcb\xb6\xf1\xe1\x85\x52\x22\x78\xbe\x3c\x1a\xf6\x84\xd4\x9a\x8c\x57\xcb\x85\x67\x42\x51\x59\xa9\x32\x0e\x79\x5a\xe2\x0e\x2e\x4c\xc3\x2b\xd8\xf0\xb2\xd4\x8a\x8b\xc1\x15\x17\x1a\x54\xc6\x12\xa8\xc7\xc1\xe2\x5c\x4c\x03\x6d\x2b\x15\xeb\xa5\x76\xbb\x19\x72\x86\x3d\xd9\xd5\x2f\x14\x27\x77\x4c\x9e\xd7\xfc\x7f\xa3\x56\xb3\x5d\xd3\x1a\x59\x5e\xda\xa9\x85\x56\x4d\xfd\x5b\xf3\xcc\x2f\x5b\xfe\x65\xe3\x13\x17\x83\x72\x8f\x0b\xfd\xe1\x5d\xe9\x27\xd4\x9e\x55\x0f\x94\x62\x23\x67\x55\xe0\x86\x76\x30\x1b\x0e\x41\xa4\x3e\x4f\xcb\x70\xd9\xac\xcb\x2b\x12\x04\x94\xd2\x60\xdd\x52\x6a\x7f\xf9\x4e\xef\x84\xbf\x7c\x3d\xac\x20\x73\x7b\x97\xad\x7f\x83\x56\xf7\xbb\xc5\xc0\x29\x6d\x57\xff\x55\x7b\xe4\xd4\x77\x80\xb6\x48\xac\xa5\x05\x7e\x8d\x43\xd1\x4b\x85\x62\x81\xcd\x8d\x7c\xaf\x50\xed\x8b\x9c\x75\x1f\x41\x5a\x4d\x8d\x76\x90\x97\xf1\x1c\xc2\x47\xb3\x3e\x4b\x55\x7c\xe6\x39\xf8\xc4\x3c\x20\x5b\xdb\x48\x36\x59\xc3\xe0\xd2\xd3\x21\x88\xed\xbd\x79\xfa\x13\x70\x2e\x2b\xcd\x73\x7a\x0e\x2c\x3d\xc8\x73\x3f\xdb\xda\x12\x51\x34\xf5\xe5\x48\x03\xcb\x61\x10\xdd\xe7\xe5\x3d\xf2\xe0\x1e\x92\x7c\x42\xc0\xdc\xb3\xbb\x3b\xe4\x82\xa9\x91\xdf\xdf\x1a\x83\xe7\x15\x38\x69\xcc\x97\x57\x73\x6b\x31\xc4\x71\x80\xbc\x4c\x2a\x7c\x1d\xe2\xf2\x06\x40\x1b\x96\x8a\x89\x01\x60\xcb\x9c\xf6\xcc\xcd\xd2\xd2\x6a\x86\x29\x79\xf7\x38\xc8\xce\xa1\xe7\xf2\xce\x0d\x31\x9b\xc9\x41\xf8\x4a\xde\xd1\x2e\xe4\x79\x19\xe0\xff\xe3\x5d\xf7\xc8\x4b\xa4\xd0\x5c\x54\x60\xfe\x30\x25\xb9\x66\x07\xc5\x66\x4a\x14\xa5\x12\x8f\x64\xa5\x70\x09\x79\x66\xee\xcc\x1e\x5b\x64\xc1\xb8\xc0\x93\x4a\xa7\x17\x8a\x17\xbd\x21\x4b\xe0\x91\xd4\x65\x7c\x45\x7b\xf6\xb1\xed\x13\xf8\x39\xcc\x54\x03\x98\x79\x10\xce\x30\x36\x36\x98\xcd\xf4\x15\xb0\x9f\xd6\x09\x77\x9a\x9a\xbb\x91\xc9\x47\xd0\x59\xe4\x17\xed\x0a\xde\x4e\xb4\xf4\xb4\xe5\x3e\xb0\xce\x6d\x0d\x6b\xf6\xfc\x67\x3a\x5e\x4f\xaa\xa2\xed\xdb\x60\xec\xa2\xd9\xa6\x48\x63\xdd\xfb\x38\x0e\x31\x79\x73\x4b\x2c\x4e\x23\x47\x5b\x59\x98\x96\x82\x9b\xda\x3b\x81\x3b\xdb\xbf\x02\xe4\xd9\xe8\x3e\xed\x3b\x07\x69\x6a\xf3\xee\x13\xfb\x70\x77\x5e\x83\x5b\x87\x41\x53\x35\x33\x4a\x4d\x0a\x68\x36\x77\x66\x81\xa6\xc2\x5c\x6d\x1d\xa4\xe9\xb9\xbc\x33\x84\x51\x4b\xfc\x4d\xa6\x0f\xd2\xd4\xc4\xda\x0f\x68\x0f\x74\x43\xad\xb5\x2a\x2c\xc6\xd8\x35\x75\xc1\x0a\xb0\xfb\x2e\x34\xed\x0d\x15\x17\x3a\xf3\x49\x5d\xd3\x66\xc2\x9b\x5b\x6a\xf4\x22\x21\xd6\xbc\x00\x7a\x62\x18\xd8\xee\xcf\xb4\x4f\xf6\xe2\xf8\x43\xbc\x1b\xef\xed\xbe\x8f\xdf\xc5\xef\xed\x3b\x33\xa1\x5f\x81\xa5\xa0\x7c\x62\x73\x22\xf4\xdb\x94\x97\x43\x59\x72\xcd\xa5\x20\x21\x26\x4c\x6b\x96\xdc\x14\x20\xf4\xc7\x87\xe5\x3b\xe4\x7f\x0f\x97\x81\x23\x45\xff\x52\xdc\x9c\x30\xdc\x6f\x65\x94\x34\x39\xfd\x37\x00\x00\xff\xff\xb9\x9a\xe8\xa9\x26\x1b\x00\x00")

func controllersTplBytes() ([]byte, error) {
	return bindataRead(
		_controllersTpl,
		"controllers.tpl",
	)
}

func controllersTpl() (*asset, error) {
	bytes, err := controllersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controllers.tpl", size: 6950, mode: os.FileMode(420), modTime: time.Unix(1540525552, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\xd1\x6b\xdb\x3e\x10\xc7\xdf\xfd\x57\x1c\xe6\x07\xb6\x7f\x75\x2d\xd8\x63\x86\x59\x69\xbb\x8d\x41\x19\x63\x6b\xd9\xe3\x72\xb1\xcf\x8b\x88\x6d\x69\xd2\xb9\x59\x09\xfe\xdf\x87\x64\xa7\xa1\x8d\x93\x90\xb1\x97\x16\xe9\xee\xbe\x9f\xaf\xee\x64\x45\x08\x80\x8f\xd4\x92\x41\xa6\x12\x16\x4f\xc0\xb8\xa8\xe9\x8d\x65\xd3\x15\x1c\xc8\x46\x2b\xc3\xb0\x64\xd6\x50\x19\xd5\x40\x98\x09\xb7\x08\xdf\x06\xdb\x98\x65\x65\x68\x0c\x5e\x09\xbf\x0a\x9f\x83\xff\x03\x5a\x28\x94\x5a\xc9\x31\x25\xba\x12\x1d\xcb\xda\x8a\x61\x33\x0a\x02\xfa\xed\x33\xab\xae\x2d\x58\xaa\x16\xee\x71\x45\xb1\x2c\x13\xd8\x04\x00\x86\xb8\x33\xad\xe7\x67\x3f\x89\xe3\xb9\x40\x2d\xc5\x66\x93\xdd\xa9\x35\x99\xcf\xd8\x50\xdf\x8b\xff\x36\xb2\xec\xe7\x49\xd0\xef\x8b\xdd\x49\xcb\xf1\xaf\x8e\xcc\xd3\xb4\x5e\x34\xa1\x17\xa5\x3e\x15\x40\xa3\xc1\xc6\xce\x7c\x79\x00\xd0\x7b\xc2\x1e\xe2\xc6\x10\x32\xc5\x0b\x55\x4e\x30\xb4\xb2\x87\x20\x1e\xe1\xaa\x02\x80\x49\xef\x0f\xba\x74\xc2\xb2\x4c\x0f\x68\x77\x47\xfb\x71\x1a\xf0\x05\xb9\x58\x1e\xd1\xf7\xe1\xb3\x08\x7b\x88\x5b\xaa\x89\xa7\xc7\x59\x0e\xa1\x73\x27\x7a\xed\x5c\x8d\xb2\x07\x06\x7b\x44\x79\x9e\xbe\x18\x2d\xbc\x9c\xed\x24\x6b\xe8\x92\x4f\x4c\xe1\xdc\x4e\xcd\x87\x92\x57\x37\x0a\x4e\x5c\x29\xcf\x1d\xc7\x7f\x1c\x7c\xe0\x0a\xfc\x1d\xf6\x93\xff\x66\xe3\x4a\xd6\x34\xa0\x1e\xd1\x40\xa5\x4c\x03\x39\xb4\xb4\x86\x0f\xca\x34\xb7\xc8\x18\x27\x01\xf8\xfd\x0c\xb5\xa6\xb6\x8c\x23\x57\x12\xa5\xe0\xfe\x0d\x7f\xb3\x16\x1b\x4a\xa6\x3e\x86\xc1\xee\xf0\x3c\xec\xbb\x76\xaa\x5b\xd7\x4b\xc2\x92\x8c\x9d\x8d\x4b\x80\xe8\x46\xb5\x4c\x2d\x5f\xde\x3f\x69\x8a\x66\x10\x35\x5d\xcd\x52\xa3\x61\xe1\xea\x2e\x4b\x64\x8c\x7c\x6e\x7f\xf8\x90\xef\xfd\x3a\xde\x1d\xb0\x33\x35\xe4\xa0\x8d\x2a\xc8\xda\x8c\xda\xc7\xec\x1a\x2d\x3d\x7c\xbd\x83\x0b\x08\xbd\xd9\x41\xe2\x95\xd9\x77\x58\xb8\x82\x1f\xac\x56\xd4\xe6\x21\x5c\x0c\x0f\x61\x66\x19\x99\x32\xbf\x1b\x00\xd4\xaa\x40\x87\xcd\x96\x86\x2a\xc8\x1d\x6c\xd2\xd5\x77\x5a\x7c\x53\xc5\x8a\xb6\xc6\x64\x05\xf1\x94\xa5\x3c\x87\x30\x4c\xc6\x8e\x8c\xbd\x0d\xd7\x76\x26\x84\x73\xb0\xa3\x29\xcb\xcf\xf6\xd7\xb4\xb0\x5e\xfb\xe4\x09\x86\x37\xd9\x3d\x8c\xf7\x6e\xcf\xcf\xb9\xdf\x0d\x71\xc2\x50\x66\x48\xd7\x58\x50\x1c\xfa\x5f\x85\xd4\x99\x09\x93\x7f\x82\xee\x83\x3f\x01\x00\x00\xff\xff\x58\x62\xa8\xf9\x9b\x06\x00\x00")

func jsTplBytes() ([]byte, error) {
	return bindataRead(
		_jsTpl,
		"js.tpl",
	)
}

func jsTpl() (*asset, error) {
	bytes, err := jsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js.tpl", size: 1691, mode: os.FileMode(420), modTime: time.Unix(1539662862, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdf\x6f\xdb\x36\x10\x7e\x16\xff\x8a\xab\x90\x16\x52\xab\xc9\xdd\x30\xec\x21\x80\x1a\xac\x69\x57\x64\xcd\xfa\x63\x4e\xb1\x87\x20\x08\x18\x89\x4e\x38\x4b\x94\x4d\xd2\x4b\x02\x41\xff\xfb\xc0\x1f\x96\x25\x59\x71\xa4\xc6\x69\x0a\x34\x79\x49\x68\x91\xba\xe3\xf1\xbb\xef\xbe\x33\x33\x1a\xbd\x23\x8c\x70\x2c\x49\x02\x67\xd7\x20\xf1\x59\x4a\x7e\x11\x92\x2f\x62\x89\x46\x23\x3d\x84\xa2\x08\x3f\xe0\x8c\x94\x25\x1a\x8d\xc6\x9f\x0f\xd1\x68\x54\x14\xe1\x58\x26\xe3\xcf\x87\xfa\x33\xf5\x50\x0d\xe0\xa7\x57\x70\x4e\xe5\xc5\xe2\x2c\x8c\xf3\x6c\xf4\x6f\x96\x53\x9e\xb3\x91\x98\xa7\x57\x66\xcd\x72\xa2\x5e\xb5\x9f\xa7\x8b\x8c\x09\xfb\xb6\xcf\x87\x76\x5c\x96\x68\x86\xe3\x29\x3e\x27\x90\xe5\x09\x49\x05\x42\x34\x9b\xe5\x5c\x82\x87\xc4\xdc\x71\x6b\x06\xfe\xc2\x42\x12\x9e\x51\x96\x88\x91\x98\x2f\x28\xe7\x24\x75\x91\x8f\x00\xc9\xeb\x99\x76\x7b\x1f\x67\x24\xdd\xc7\x82\x18\xff\xc1\x6c\xac\x40\x00\x00\x45\xc1\x31\x3b\x27\xb0\x43\x83\x9d\x38\x4f\x77\xa3\xb0\xf2\x00\x8a\x42\x7d\xb4\xb6\xdc\x7e\x7c\x74\x3d\xab\x8f\xf0\x79\x6d\x45\x9e\x65\x84\xc9\xb2\xb4\x26\x08\x4b\xca\x12\x95\x08\xa1\xc9\x82\xc5\xe0\x15\x45\x78\xc0\xa8\xa4\x38\x35\x66\xda\x26\x7c\x38\xa4\x42\x7a\xf9\x64\x22\x88\x0c\x52\x9a\x51\x09\x0b\xca\xe4\x6f\xbf\xfa\xe0\x1d\x9f\xac\x2f\x08\x28\x93\x01\xe1\x3c\xe7\x3e\x98\x7d\xfd\x87\x39\x24\x58\x62\x88\x32\x3c\x25\xdd\x8b\x5e\xfa\xd5\x54\x99\x4b\x9c\x02\x65\x12\x39\x6a\x78\x79\x41\x38\x01\x31\x0f\x7f\x67\x09\x72\x8a\x82\x4e\x60\x3f\x67\x12\x53\x26\x20\x1c\x5f\x52\x19\x5f\xa8\xf7\x80\x2b\x24\x96\xc4\x2d\x4b\xe4\x38\x66\x4d\x04\x78\x36\x23\x2c\xf1\xf4\x30\x50\xef\xf8\x90\xcb\xb7\xf3\xc2\x4e\xdd\x1d\xab\x5f\x6f\x48\x0a\xa5\xaf\xde\x6c\x42\xe3\xcc\x03\xc0\xfc\x5c\x04\x70\x0a\xbb\x91\x5a\x34\x26\x29\x89\xa5\xe7\xc6\xf9\x82\x49\x15\xb0\x4f\x9c\x66\x98\x5f\xbf\x27\xd7\xe6\x80\xec\x39\xd9\x80\xb9\x7e\xf8\x07\xcf\x33\xcf\xad\x50\xea\xfa\xe1\x3f\xca\x05\xe3\x88\x1f\x1e\xe5\xe3\x79\xea\x99\x1d\x13\xce\x77\xa3\xe4\x2c\x7c\x47\xa4\xf7\x4c\x6f\x3d\x98\x07\xca\x7e\x18\x86\x66\x06\x9d\xa8\x49\x4f\x22\x46\x53\x13\x4f\xf5\xc3\x89\x5c\x70\xa6\xc3\x1a\x98\x55\x84\x73\xfd\xb4\x44\xce\xd9\x82\xa6\x09\xe1\x4d\xef\x9f\xdf\xee\xd7\x47\x9e\x10\xfe\xfa\x5a\xcf\xd8\xb8\x47\x48\x88\x88\x5d\x1f\x39\x74\x02\x1a\x12\xaf\x5e\x16\x95\xd9\xc8\xfe\x0e\x0f\xd5\x13\x4f\x3f\xf7\x91\x53\xea\xd9\x06\x47\x9d\xd3\x3f\xea\x47\x16\x69\x66\x81\x89\x44\x70\x0a\x11\x2c\x67\xb5\x62\xa7\x42\x67\x77\xf8\x4c\x07\xa3\x15\xbc\xee\x38\x95\xbd\xd1\xff\x86\xa4\x44\x12\xcf\xd7\x80\x2e\x14\x4a\x6e\xcc\x51\xe4\x18\x74\x92\x39\x54\x49\x09\xae\x4e\x15\x83\xca\x16\x78\x6d\x7a\x2e\xa3\x0a\xae\xa4\x99\xc5\xaf\x9a\xba\x53\xf3\x2c\xec\x4e\xff\x48\xad\x08\x3f\xe4\x97\x9e\x1f\x7e\x61\xf4\xca\xf3\x8d\x15\x0b\xe4\x5b\x0d\x2e\x66\x49\x95\x32\x5b\x32\xd9\x36\xde\x0c\x86\x5e\x7c\xb4\xda\xe6\x50\x93\x75\x03\xcb\x3f\x36\x72\xc2\x62\x15\xd3\x56\x2c\xba\xa9\x03\xe0\x54\x01\x44\x25\x7e\x72\x16\xbe\xbd\x22\xb1\x67\xa3\xa4\xf8\x34\x5c\x92\x36\x91\xa0\x97\x44\x7b\x81\xb6\x10\xed\x59\x9a\x52\x93\x36\x66\x4e\xb4\xe7\x06\x4b\xda\x09\xd6\x62\x19\xac\x07\xa4\xe3\x75\x2d\x88\x9a\xa0\xa4\x82\xe8\x6d\x8e\x46\xeb\x3b\x48\x34\x88\x61\xc2\xf3\xac\xbe\x8d\xa5\xcb\xb7\x7b\xbc\xe6\x56\x2f\xaf\xfa\x07\xf3\x2b\x82\xb8\xcd\xd8\x55\x80\xb2\x41\x54\xc4\xf1\xbd\x44\x71\xe9\x5e\x8d\xcc\x86\x31\x18\x7c\xd1\x21\xf7\x7c\xd0\x1c\x06\x8f\x24\xf6\x1d\x92\x58\x1b\x71\x5a\x97\xb6\x32\xa6\x9e\x30\x0d\xe9\xda\x17\x82\xbb\xb7\xcd\x50\x10\xad\x6d\xc5\xbf\x03\xe8\x3e\x61\x19\x5f\x78\x60\x9d\xcf\xf0\xec\x58\x48\x4e\xd9\xf9\x09\x65\x92\xf0\x09\x8e\x49\x51\x3e\x00\x22\x8d\x3f\xc7\x6e\x25\x8e\x6b\x9b\x3f\xd9\x2e\x12\xef\x64\xca\xfe\x05\xa8\x7b\xf7\x6d\x08\xf6\xb5\xd5\x01\x3d\x30\x2a\x9b\x29\x34\xc1\xf1\x89\x39\x25\xe4\x4c\x72\x0e\x53\x05\x46\x73\x2e\x4b\x10\x22\xc7\x11\xba\x6e\xc2\x54\x0d\x00\x20\x56\x05\x54\xf5\x4b\x55\x39\x2d\xcb\x5d\xe5\x93\x79\x63\xa5\xc1\xf5\x30\x80\x49\x26\xc3\xf1\x8c\x53\x26\x27\x9e\xfb\x54\x44\xbb\x4f\x85\x1b\xc0\x34\x80\xa9\xaf\xbc\x2b\x97\x3a\x31\x25\xcc\x2c\xf1\x21\x8a\xe0\xa5\xb6\x6c\x91\xc8\x68\xaa\x67\x4d\x28\x49\x13\xa1\x35\xba\x76\x5a\x84\x7f\xe6\x94\x2d\x0d\xb9\x81\xd2\xa7\xab\xc0\xdc\x82\xfc\x13\x88\xa0\x81\xea\x3e\xf4\x8c\x9c\xd3\x00\xfa\x27\xad\xfb\x02\xac\xcf\x2f\xdc\x2d\xe6\xac\x3d\x1c\x1f\x39\xcd\x54\xed\x9d\xab\x47\xaa\x2b\xf3\xf5\xcc\x76\x5b\x56\xf5\x71\xfd\x1a\xaf\x66\x37\xd3\xb0\x1c\xb8\x42\xcb\x74\x78\xbe\xac\xa0\x43\x0b\x28\x60\x96\x18\xd9\xf5\x24\xda\x33\x6d\x07\xfc\xdc\xa2\xac\x3e\xa7\x56\xe9\x2f\xbf\x56\xf3\xd7\x5a\xb1\x6d\x3b\xff\xf5\xfe\x76\x8b\x80\xa6\x7f\x03\xd9\x79\x9f\x13\x2d\x09\xba\x8e\xdc\x92\xb2\xff\xa8\x13\x06\xe8\x84\x46\x2c\xea\x56\x6b\x5f\x4a\xf4\xb4\xa9\xd1\xf9\xf1\xfd\xcd\xaf\xbf\x37\x15\x02\x16\x5f\x62\x91\xca\x6e\x2d\x42\x99\x20\x5c\x02\x65\x32\xdf\x24\x48\xd6\x74\x84\xd3\xf8\x0e\xa3\x62\xf2\x75\x0c\x3b\xda\x9b\xa1\x09\x4d\x38\x8f\x8c\xdb\xe1\x21\x16\xf2\x40\x7b\x79\x90\x78\xfe\xcd\x09\x33\x54\xcf\xbc\x56\x7a\xc6\x2a\x69\x9a\x08\x38\x3e\xb1\xdf\x81\x59\x09\x03\xc8\x91\x57\xf5\x62\xf0\x9a\x9c\x53\xa6\x11\x63\xf6\x0e\x4f\x22\x55\xb9\x74\x21\x93\x57\xe1\xdf\x79\x9a\x9e\xe1\x78\xaa\x0f\xa2\xc6\xdb\x26\x00\x8f\x69\xd7\x4b\x1c\x7d\xbb\xc4\xd0\x7a\xe8\x34\x00\x9a\xac\x34\x91\x82\x41\x61\x9c\x18\x08\xd8\x88\x26\xc8\xa9\x69\x07\x79\xf5\xbd\x08\x7e\xa7\x03\xad\x6b\x70\x6d\xe0\xd5\x4a\x36\xb5\x46\x6f\x64\x3f\xcf\x32\x2a\x7b\xe1\xbe\x6c\x2b\x16\x93\x8c\xa7\x37\x27\xa0\xe9\x2a\x6a\xf9\x17\x3c\x76\x18\x77\xeb\x30\xb6\xdb\x5f\xac\x2c\xfd\x58\x6d\xc6\xd6\xa8\xff\x26\x9a\x41\xce\xb0\x56\x66\x38\xc1\xdc\x7b\x73\xf2\xa0\xcc\x82\x7a\x90\x8b\x15\xc5\x45\x11\x1e\xe6\x97\x84\x9b\x67\x8a\x69\xba\x56\x54\xbc\xb2\xb5\xa3\x17\x32\x93\xf5\x03\xfb\xc4\xc9\x0c\x73\x6d\x30\xe9\xaf\xbc\x86\x5b\x06\xe4\x24\x64\x42\x38\x28\x07\xc2\xfd\x34\x17\x44\x4d\xb2\x48\x6c\x46\x63\x85\xca\x76\x94\x54\x21\x5c\xa3\xd8\x9d\x7b\x14\x2e\x35\xeb\xdf\x4c\xb9\xdc\xdd\xe6\x60\x49\x3f\xc8\x64\x37\xef\xd6\x78\x40\x1f\xb1\x26\x81\xe6\xf9\x3d\x74\x7a\xc2\xc6\xf4\xd4\xd9\x69\x2f\xe2\xea\xda\xdb\xde\xc9\x29\x8d\xff\x0d\x08\x78\x8b\xb7\x4c\x2d\x6a\xde\xc0\xca\x37\xdd\x32\xdd\xe9\x92\x89\x26\xad\x3b\xa3\xbe\xde\x0c\xf7\x62\x83\xf1\xf6\xa5\x4b\x87\x13\xcd\x1b\x97\xe1\x17\x2e\xda\xd6\x2a\xe5\x1e\xb4\x00\x6d\x2a\x3f\x07\xfa\xdf\x49\x1e\x2b\x8f\xae\x3c\x15\x12\x6a\x40\x90\x7c\xc1\x62\x85\xc7\xd6\xbf\xff\x7c\x95\x51\xf4\x58\xdc\xee\xb5\xb8\xf5\xec\xcb\x7f\x98\xf2\xf6\x7f\x00\x00\x00\xff\xff\x68\x3e\xd6\x8c\xd1\x26\x00\x00")

func modelsTplBytes() ([]byte, error) {
	return bindataRead(
		_modelsTpl,
		"models.tpl",
	)
}

func modelsTpl() (*asset, error) {
	bytes, err := modelsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "models.tpl", size: 9937, mode: os.FileMode(420), modTime: time.Unix(1540523739, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\x73\x2e\x4a\x4d\x2c\x49\x0d\x49\x4c\xca\x49\x0d\x0e\xf4\xa9\xad\x05\x04\x00\x00\xff\xff\x4d\x9a\x10\x9b\x13\x00\x00\x00")

func sqlTplBytes() ([]byte, error) {
	return bindataRead(
		_sqlTpl,
		"sql.tpl",
	)
}

func sqlTpl() (*asset, error) {
	bytes, err := sqlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql.tpl", size: 19, mode: os.FileMode(420), modTime: time.Unix(1540527348, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vueTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdd\x6f\x1b\xc7\x11\x7f\xe7\x5f\x31\x59\x38\x01\x99\x90\x27\x39\x45\x50\xe4\xc4\x63\x8d\x28\x6d\x51\xb4\x68\x03\x34\x79\x32\x8c\x60\x75\xb7\x24\xb7\xb9\xaf\xee\x2e\x29\x29\x04\x81\xa2\x4d\x62\x39\x6d\x22\x17\x4d\x85\x34\x1f\xb0\x55\x38\xfd\x02\xac\xf8\xa1\x70\xed\x48\x49\xff\x19\xf1\x64\x3f\xf5\x5f\x28\x76\xf7\xc8\xdb\xfb\xa0\x48\xd9\x0a\x50\x01\x05\x04\x92\xb7\x3b\x3b\x33\x3b\xf3\x9b\xd9\xd9\x39\x01\xb4\x9f\x69\xb5\xe0\x87\x24\x24\x0c\x0b\xe2\xc1\xc6\x36\x08\xbc\xe1\x93\x17\xb9\x60\x03\x57\xb4\x5a\x1d\xa8\xb5\x05\x09\x62\x1f\x0b\xd2\xa9\x01\xb4\x89\xdf\x72\x31\xf3\xe4\x6f\x80\xb6\x47\x87\xc0\xfd\x48\x38\xa8\x4f\xb0\x47\x18\xd2\xe3\x9a\xae\x1b\xb1\x00\x6c\x1a\xfa\x34\x24\x0e\x12\x6c\x40\x10\x0c\x5b\x41\xe4\x11\xdf\x41\x9c\x60\xe6\xf6\x25\x09\x82\x2b\x7c\xb0\x11\x50\x61\x85\x58\xd0\x21\xb1\x62\x46\x86\x24\x14\x0e\x0a\xa3\x90\xcc\x38\x66\x3c\x5b\x54\x90\x20\x1b\xd6\x13\x34\x8c\x07\x02\x62\x46\xba\x74\xab\x45\xdd\x28\x74\x90\x1c\x75\xa3\xb0\xa5\x45\x21\x70\x7d\x82\x99\xdc\xdd\x54\x0b\x4b\x30\x1a\x98\xaa\x58\x34\x46\x10\xfb\xd8\x25\xfd\xc8\xf7\x08\x73\x50\x72\xeb\x8b\xe4\xc6\x37\x93\xf7\xde\x9d\x1c\x3c\x44\x9d\xf6\xca\x54\x92\xa1\xd5\x4a\x4e\x2d\x58\x4e\xdd\x8d\x81\x10\x51\x08\x62\x3b\x26\x0e\x8a\x19\x0d\x30\xdb\x46\x70\xc5\xf5\xa9\xfb\x96\x83\x7e\x9e\x6a\x5c\xb9\x8f\x4e\x72\xeb\x8b\x47\x5f\xfe\x59\xc9\xd5\x6c\xe6\x30\x9f\x72\x63\x84\x13\x61\xd8\xbb\x93\x3c\x78\xf7\xe4\xef\x5f\x69\x36\xc9\xe7\xfb\xc7\x87\xf7\x2b\x99\x15\x76\x56\x2b\x8c\x9a\xae\x2e\x48\xa4\x41\x1c\x31\xd1\xa5\x3e\xb1\x86\x94\xd3\x0d\x9f\x38\xda\xfd\x2c\x1a\x84\x5e\x71\xd7\xae\x8f\x39\x77\x90\x84\x55\xca\x08\x75\xda\x74\x3a\x3c\xdd\xfd\x20\xf6\x23\xec\xbd\x28\x9d\x40\x3b\x93\x2f\x8f\x26\xef\x7e\xf1\x68\xff\x6f\xc9\xed\xa3\x0a\xdd\x2b\x54\xfa\xfe\x96\x54\x09\x15\x65\x6b\x85\x96\xd3\xc0\x8b\x36\x43\xa9\x43\xa6\xc2\xf5\xaf\xce\xa2\x82\xcb\x08\x16\x33\x8b\x80\x03\xda\x26\xcb\x6a\x54\x40\x43\xec\x0f\x38\xea\x24\xff\x3a\x9c\xbc\x7f\xbb\x24\xbf\xbd\xe2\xd1\x61\xfa\x93\xf8\x2d\x15\xd3\x60\x7b\x58\x60\x07\xa9\x07\x4b\xfe\x46\xc0\xc5\xb6\x4f\x1c\xb4\x49\x3d\xd1\xb7\xe1\xf2\xea\xea\xb3\x32\x1a\x89\x4f\x5c\x41\xa3\xb0\xe5\xf6\x71\xd8\x23\x12\x8f\xe9\xc8\xba\x1a\x90\x61\x2c\x0d\x41\xc3\xde\x94\x5d\xfa\x98\x8b\x7f\x35\xd3\x72\x23\x7f\x10\x4c\x91\x3e\x63\x8d\x40\xc9\x74\xd0\x4b\x2f\xa1\x1c\xb2\xcc\x45\x19\x14\x47\x23\x26\x05\xc3\x25\xda\xbc\xe4\x46\xbe\xed\x58\xeb\x8a\x82\x8f\xc7\xf3\x04\xfa\x78\x43\xe6\x99\xd1\x48\x2e\xb0\xd6\x71\x40\xfc\x75\xcc\xc9\x4f\x71\x40\xc6\x63\x33\xab\x4c\xd3\x9b\x4a\x64\x2d\xee\x46\x4a\x51\xf9\x85\x72\x81\xc5\x63\x1c\x76\xa0\xdd\x6e\x83\x9a\xb4\x58\xb4\x69\x4d\xb9\x2b\x91\x9a\x35\x74\x3a\x1d\x68\xaf\x28\x6a\x23\x94\xcc\x24\xba\x60\xb3\x30\x1a\x91\xd0\x5b\xb8\xb3\xe4\x0f\x1f\x1c\x7f\xfd\xd9\x93\xec\x24\x83\x26\xa7\x6f\x4b\x92\x00\xfb\x7e\x09\x88\xb1\x8f\x69\x06\xde\x41\xec\x49\xf0\xaa\x9c\xee\xc0\xcf\x36\x7e\x41\x5c\x61\x61\xce\x69\x2f\xac\x8f\xc6\xcd\x99\x49\x1a\x6b\x29\x65\x11\xe6\x79\xf4\x12\x8f\x0a\xd4\x81\xc5\x49\xac\x42\x43\x4f\x42\x81\x65\xd9\xf2\x55\xe2\x13\x41\xea\x99\x0a\x45\x61\x9e\x22\x48\xd3\x77\x39\xcb\x2d\xe9\x9a\x6c\xd8\x3c\xfc\x74\x00\x05\x98\xf5\x68\xd8\xf2\x49\x57\xd8\xf0\xe2\x6a\xbc\xb5\x96\x8e\x88\x28\xd6\x03\xa8\x22\x31\x0c\x5b\xbc\x1f\x6d\x3a\x28\x18\xf8\x82\xc6\x3e\x99\x85\x99\xe5\x93\xb0\x27\xfa\x25\x97\x4c\x77\xbc\x2e\xbf\x5e\xc1\xc2\xed\xbf\x26\x3f\x50\x27\xb9\xf1\xf0\xf1\xf5\xdd\xe3\x7f\x1f\x24\x1f\x3d\x3c\x3d\x19\x2d\x2b\xb3\x68\xe4\x4c\xe4\xab\xa9\x35\xb5\xcc\xc9\xce\xed\xc7\x7f\xba\xb3\x28\x01\xc5\xb8\x47\xe5\xe9\x1e\x85\xd3\xcc\x96\x8d\x20\xd8\xc0\xee\x5b\x3d\x9d\xf7\x7c\xbc\x1d\x0d\x84\x83\x94\xdf\x79\x13\x44\x24\xb0\xdf\x94\xe7\xfa\xb0\x09\x31\xee\x11\xd6\x84\x90\x6c\x09\x04\xb6\x9a\x9a\xe6\x1f\xf5\x80\xc0\x96\x24\x2d\x8d\x99\x34\x31\xd1\x80\x0a\x73\x82\x3b\xe8\xea\xe5\xd5\x26\xbc\xb4\xda\x94\x09\xaf\x09\x2f\xbf\xfc\xf2\x35\x99\xf5\xe8\xdb\x24\x4b\x78\xf4\x6d\x32\xcd\x75\x57\xdc\x01\x63\x24\x14\xb3\xc9\xd7\x70\x6f\x3a\x69\x20\x23\xdb\x50\xa7\x36\xdb\xb7\x47\xb1\x1f\xf5\x40\x50\x21\x51\xa2\x93\x35\x02\x3b\x8d\x0d\x8b\x6f\x87\x6e\xf1\x5c\xc8\x32\xe3\x6a\x11\x36\xba\xa0\x4a\x0b\xa8\x74\x95\xae\xa0\x54\x4a\x68\xc5\x11\xa7\x52\x01\x07\x31\xda\xeb\x8b\xe9\x70\xca\xef\x72\x8e\xdf\x92\x69\xb5\x50\xc6\x2c\x9d\x55\x2b\xab\xb3\x69\xd9\x35\x1a\xd1\x2e\xac\x47\xa1\xc0\x34\xe4\xa0\x38\xbd\xbe\x1d\x13\x40\x34\x14\x68\x3c\x0e\x07\xc1\x06\x61\xa3\x11\xf1\x39\x19\x8f\x65\x8d\x96\x26\xc4\xdc\xa6\xab\x72\x2f\x02\x3c\x10\x51\xcb\x8d\x82\x58\x62\xd4\x41\x51\xb7\xbb\x54\xd5\x56\x83\x79\xc9\xb7\x54\xed\x64\x25\x6f\x37\x8a\x84\x0c\x91\x14\xd1\xda\xd7\xad\x74\x34\x5f\xb6\x2e\xaa\x04\xba\xd8\xe7\x04\x75\x26\xbb\x7b\x90\xdc\xdf\xa9\xce\x53\x0b\xab\xc6\x75\xc5\x15\x75\x4e\xf6\x0f\x60\x72\xf0\x49\x55\x1e\x30\xa2\x72\x65\x06\xcf\xb9\x78\x3d\x39\xda\x7b\xf4\xcd\xef\x4b\x78\xcd\x27\xf8\x65\xf1\x6a\x1c\x20\x4f\x82\xd7\x6f\x0f\xaa\xe7\x8b\x50\x63\x9b\x17\x19\xa1\xa5\x43\xfc\x5c\x10\xfa\x86\xe2\x7a\x8e\x08\x35\xcf\xbd\x12\x4e\x37\xe4\x69\x15\xcb\x8f\xb3\x62\xd5\x58\xf9\x54\xf9\xf5\xc2\xa0\xb6\xb0\xe1\x8b\x8c\xdc\xb2\xd7\xcf\x0b\xbd\x66\xc1\xf5\x84\x08\xae\x82\xf0\xee\xcd\x93\x3b\x5f\xd9\xc7\x0f\xde\x3f\x3e\xba\x3d\xb9\xf9\xe1\xe4\xde\x7b\xc9\x47\x0f\x27\xbb\x1f\x4f\x3e\xbc\x95\x7c\x76\x23\xf9\xe3\xbd\xe4\x83\x83\x12\xb6\xcb\x37\xec\x19\xb6\xbf\xb3\xfa\x6c\x0e\xd9\xfa\xe2\x0c\x8c\x74\x65\x58\xab\x0b\x2c\xd8\xc6\xe5\xee\x07\xd4\x9f\xd5\x3a\xb6\xe4\xd8\xf2\x29\x17\x39\x11\xf2\x43\x0e\x22\xb0\xfb\x42\xc4\x2d\x46\x7e\x39\x20\x92\xe6\x47\x81\xbe\x55\xdb\x0a\x1b\x9a\xbb\x83\xb4\xb5\xc1\x63\xb8\x07\xd8\xd5\x11\x63\x3a\x6d\xce\xdd\x5e\xdf\xab\x33\x32\x89\x86\x8c\x50\xd3\xbc\xf9\xa6\x90\xd5\x5f\x47\x5a\x69\xef\xfa\xf1\xe1\xfd\xe4\xb7\x7b\x93\x9d\x7b\xc9\xdd\x3b\x93\x3b\xef\xfc\xe7\xe8\x77\xc9\xce\x5e\x2e\x44\x82\xce\xc9\xaf\x1f\x4e\xae\x1f\x6a\xf3\xb6\x57\x4c\x3c\x1a\x9e\x3a\x4d\x1e\x8d\x51\x0a\x4a\xf9\xb3\x33\xd9\xfd\xc7\xa3\xdf\x7c\xad\xf9\x59\x5b\x3e\xdf\xd2\x7a\xe4\x98\x29\xc7\x6b\x06\xb3\x21\x79\x21\x7c\x6a\x70\x97\xdd\x7e\x5e\xe0\xd6\x2d\xb8\x37\x52\x47\x9c\x06\xef\xec\x66\x9b\xc3\x77\xfa\xa8\x9b\x83\xe6\xa5\xaa\xd6\xe6\x2e\xa3\xb1\x4a\x10\x5a\x7f\x78\x1e\x30\x07\x1c\x53\xe8\xb2\x28\x00\x74\x65\x05\xc7\x74\x65\x34\xb2\xd2\x4c\xb3\x56\x03\x20\xaa\x5f\x03\x1e\xe9\xe2\x81\x2f\x60\xa4\x04\x7a\x58\xe0\x7a\x23\x7d\x00\x60\x44\x0c\x58\x38\x7b\x04\x28\x5d\x6a\x6c\xb8\x7a\xad\x39\x9b\x56\x37\x02\xdb\xa0\x07\x48\xfb\x16\xb6\x36\x62\xd3\x98\x91\xb2\xf2\xcb\x41\xdf\x46\x6c\x58\x35\xc7\xa2\x6e\x97\x13\x51\x18\x54\xb7\x0e\x1b\x2e\xaf\xce\xc6\xc6\xd9\x74\xd6\x8a\xb3\x61\x64\x8c\xeb\xaa\x30\xaf\x5f\x99\x0a\x20\xf5\x7c\xaa\x73\x95\x04\x7d\x7a\x9f\x07\xa7\x2c\x9b\x9e\x07\xb7\x0c\xbe\x05\x6e\x69\x7e\x29\xda\x7b\x1e\xc7\xf4\xd7\x78\xad\x66\x08\x08\x88\xe8\x47\x1e\xcf\x38\xf7\x88\x28\x00\x06\x40\xf4\x29\xb7\x72\x2d\xab\xb4\x41\xb1\x36\x23\xc1\x31\x35\x54\xb0\x7e\x42\xb9\xa8\xe7\x0e\xf5\x7c\xf3\x23\x37\x05\x30\x9a\x01\xc2\x10\xa5\x87\x9a\x53\x58\x98\x4a\xc8\x11\xc8\x99\x71\xa6\x66\x86\x93\xdc\x6c\xa3\x56\xfd\xdb\x12\x7d\x12\xd6\x19\x8f\xc1\xe9\xe4\xac\x9b\xdb\xb5\x82\x30\x38\xc0\x78\xac\x7a\x80\x7a\x60\x6d\x1e\xb9\x24\x31\xa9\xe5\xc7\x5c\xe2\xcc\xa2\xca\x5f\x26\xdd\x38\xa7\xa9\x2b\x01\x55\x27\x8c\x29\x55\xc7\x8d\x29\xe5\xcc\x0e\xd9\x15\xbb\x3e\xc4\xfe\x1c\x07\x6a\xab\x4a\xff\x15\xed\xf9\x3c\xc8\x65\xd0\x82\xcb\x8d\xb5\xfc\xca\x19\x26\x4a\x22\xb3\x2b\xff\x29\x22\x35\x7b\x07\x86\xa6\xc9\x16\x30\x56\xed\x77\x1d\xdb\xd2\x97\x65\x38\x56\xdf\x06\xd7\x2a\x89\xd2\xfe\xdb\x68\x5c\x2d\x26\x83\x4c\x59\x4c\x36\x97\x63\x90\xce\xea\x57\x0e\x55\x76\x49\x27\x16\xf8\x60\x75\x69\x7b\xe8\x6b\x6a\x8e\xa1\x4f\x04\x18\xe1\x28\xd7\x5f\x4a\x9f\xeb\xf9\x6c\xed\xbe\x65\xab\x70\xcd\x65\x65\xb2\x25\x6c\x48\xfb\xa1\xc7\x0f\xee\x5a\x96\x85\xcc\x79\x1e\xd3\x30\x24\xcc\x86\x59\xbd\x31\xed\x56\x9b\x54\x59\x13\xca\x06\xc4\x7a\x1b\xb8\xbe\xda\x84\xf4\xcf\xfa\x6e\x03\x65\xd9\xa7\x31\x37\x57\xa4\x5b\x2b\x3a\xec\x2c\x51\x5a\x42\x4b\x45\xb4\x95\x6c\x0b\x0b\x23\xac\xa4\x41\xbd\x51\x56\x20\x35\x8b\xe5\xfa\x11\x27\x45\xee\x25\x3f\xa6\x6d\x57\x16\x6d\x96\xb0\x71\xc9\x8d\xc2\x2e\x65\x41\x1d\x25\x77\xef\x68\xbf\x4c\xee\xbd\xa7\x5b\x85\x72\xe4\xf3\x7d\x5d\xd6\x36\x21\xf9\xf8\xcb\xc9\xcd\xbf\x9c\x1c\xfe\xf5\xe4\xf0\xee\xf7\x50\x13\xd2\x72\x18\x35\x73\xaa\xa5\xec\x5e\x51\x95\xc8\xeb\xda\xdd\x27\xfb\x07\x93\x83\x4f\x72\x2e\x74\x71\xe8\x12\x3f\x47\x35\xd9\xdd\x4b\xee\xef\xe4\xa8\x64\x01\x64\x03\xda\xc4\x2c\x94\x18\xa8\x55\x1b\x70\xae\x91\xf2\x2e\x57\xb4\x99\x25\xac\xd1\xc8\x7a\x4d\x97\x56\x3f\x26\xdb\xfa\xfa\x94\xbb\x45\x35\x8a\x6b\xe7\xc3\x21\xb3\x66\x18\x09\xda\xdd\xb6\xf8\xc0\x75\x09\xe7\x75\x94\x1a\x72\xe7\xe6\xe4\xfd\x5b\xa8\x00\x10\x38\x15\x24\xa5\x7d\xc2\x69\xe9\xb8\x6c\x95\x85\x89\x5b\xdf\xf0\x73\xc1\x5d\x88\x91\x94\x42\xe9\x98\x6f\x96\x9c\x6e\xb9\x26\x14\x97\x9c\x25\xac\xaa\xfb\x19\x15\xb1\x55\x32\x76\xf2\xe9\x3f\x93\xbd\x7b\xd5\xc6\x7e\xd2\x68\xac\x48\xb2\xb9\x17\x6c\x95\x27\x50\xa9\xb8\xcd\x9f\x43\x59\x7e\x2d\x74\xea\xcb\xa9\xdb\x08\x4f\xa3\x87\xff\xf8\x57\x37\x8e\x1f\xdc\x3d\xf9\xe4\x9d\xe4\xf3\xfd\x93\x4f\x2f\x64\x6c\xaa\xdd\xe5\xb6\xbe\xc8\x27\x29\x97\x0a\x97\xcc\xb3\xe0\x85\x3d\xab\xa4\xe2\xd4\xe3\xe0\xc0\xd5\x6b\xd9\x68\x37\x62\x50\x57\x53\xa1\x47\xb6\xd4\x41\x9e\xfe\x6c\xcf\x81\x5d\xfa\xa2\x28\x25\x7b\xe1\x85\x46\x11\x0e\x5c\x80\x6a\x65\x39\x73\x18\x5c\x55\x0b\xaf\x99\xae\xa1\x1e\xb7\xe2\x01\xef\xd7\xe5\xc2\xc5\x49\x74\xad\x74\x15\x28\xa5\x19\xd3\x7d\x23\x58\xc4\xd1\x96\x86\xa9\x00\xd9\xfc\x84\x72\xa6\xa4\xfc\x3f\x74\x6a\x17\x5e\x1d\x96\x93\x43\xa1\x15\x58\x55\x2b\x56\xb6\xd8\xcc\x4b\x54\x3e\x88\xca\x82\xfe\x1f\x43\x17\x27\x86\xb4\xf7\x60\xd9\x18\x6a\x56\xa2\xe8\xa9\x22\x4b\xb7\xf7\xcf\x1a\x59\xa7\x61\xf5\x8c\xd7\xd3\x6f\x21\x0c\xf5\xbf\x23\x15\xeb\x24\x6b\x3a\x5c\xa2\xd7\x8d\x56\xe5\x5a\x73\xcd\x10\x33\x75\x66\x82\x63\x88\x43\x38\x8e\x7d\xea\xaa\x77\xd1\x2b\xc3\xd0\xb3\xa2\x98\x84\x5b\x81\x2f\x1d\x81\x05\x6f\x45\xdd\x2e\x75\x89\x17\xb9\x83\x80\x84\xc2\xe2\x31\x23\xd8\xe3\x7d\x42\x44\xe0\x5b\xea\x1b\x65\xda\xd3\x2e\x98\x2d\x0e\x85\x2d\xd5\x7f\x54\x62\x9f\x71\x1c\x2d\xff\xb9\xe7\x4e\x27\xca\xe9\xb4\x19\x4f\x95\x50\x0d\xd4\x2c\xd4\xf2\x61\xa0\xd1\x10\x10\xce\x71\x8f\x58\x84\xb1\x88\xd5\x91\xd9\x7e\x55\xdd\xd7\xdb\x47\x93\xa3\xdd\x3c\x2c\x74\x5f\xb0\x0a\xe0\xcb\xa4\x9a\x5c\xe0\xcf\x0b\x0d\xc3\x1f\x6a\xa7\x4f\x77\x74\xa8\xff\x66\x3b\x05\xe0\xf3\xdb\xbe\xe7\x0c\xe2\xbc\x7d\x1a\x55\x60\x3e\xfd\x34\x2b\x01\xd7\xec\x2b\x57\x54\xa2\x8c\x74\x65\x71\x2e\x67\x2d\x4d\x5a\x01\xfe\xec\x0d\x45\x5d\xda\xa0\x09\x3e\xe5\xa2\xc4\xab\xe2\x7d\x85\xcc\xd3\xf2\xdb\x8a\xa3\xb8\xde\xb8\x56\x62\x1c\x46\x21\xa9\x37\x46\x1a\x1f\xe3\xa6\xfe\xaf\x05\x7d\xf9\x36\x95\x2d\x6c\x58\x93\xc9\x45\xe3\xb5\x5a\x7b\x65\xda\xdd\xae\xc1\x7f\x03\x00\x00\xff\xff\xff\x2b\xc6\x36\x4f\x2b\x00\x00")

func vueTplBytes() ([]byte, error) {
	return bindataRead(
		_vueTpl,
		"vue.tpl",
	)
}

func vueTpl() (*asset, error) {
	bytes, err := vueTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vue.tpl", size: 11087, mode: os.FileMode(420), modTime: time.Unix(1540524521, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"controllers.tpl": controllersTpl,
	"js.tpl": jsTpl,
	"models.tpl": modelsTpl,
	"sql.tpl": sqlTpl,
	"vue.tpl": vueTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"controllers.tpl": &bintree{controllersTpl, map[string]*bintree{}},
	"js.tpl": &bintree{jsTpl, map[string]*bintree{}},
	"models.tpl": &bintree{modelsTpl, map[string]*bintree{}},
	"sql.tpl": &bintree{sqlTpl, map[string]*bintree{}},
	"vue.tpl": &bintree{vueTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

