// Code generated by go-bindata.
// sources:
// controllers.tpl
// js.tpl
// models.tpl
// sql.tpl
// vue.tpl
// DO NOT EDIT!

package mvctemplate

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _controllersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x5d\x4f\xdc\x38\x14\x7d\x8e\x7f\x85\xd7\x52\x57\x09\x9b\x3a\xa1\x6a\xfb\x40\x77\x1e\x60\x4a\x3f\xb6\x08\x58\x86\x6a\x1f\x10\x42\x26\xb9\x19\x2c\x1c\x7b\xd6\x71\x80\x51\x76\xfe\xfb\xca\x4e\x18\x86\x21\xf3\xa9\x11\x14\x5e\x08\x89\x7d\x7c\x7c\xce\xb9\x37\x26\x51\xf4\x15\x24\x68\x66\x20\xc5\x97\x43\x5c\x08\x96\x5c\x83\xc6\x28\x8a\xfa\x5c\x62\xad\x4a\x03\x1a\x45\x5b\x88\x0d\x38\xfd\xba\x7f\xea\x93\xa8\xaa\xe8\x81\xba\x05\x7d\xc8\x72\x18\x8d\xa2\x1d\x9e\x92\x30\x51\xd2\x68\x25\x04\xe8\x82\x56\x15\xed\xb2\x1c\x44\x97\x15\x50\x8f\xa9\x46\xf4\x94\x5d\x43\x30\x13\x64\x09\x80\x03\x5e\x98\x1a\xe0\xf8\xa8\xb7\x16\x42\x57\x03\x33\x0d\x89\xe3\x9f\x6b\xef\xe4\xe7\x20\x7d\x80\xd9\x3d\xed\x7e\x5b\x17\xe8\x98\x99\xe4\xaa\xc6\xf9\xbc\x7f\xb0\x7f\xba\xbf\x2e\xd0\x67\x10\x60\x20\xc0\x73\x28\x2d\x81\xb2\x67\xe9\x2c\xe6\xb4\x2c\x52\x43\x6a\xa6\xda\xcb\xe2\xdc\xcb\xcd\xf3\x81\xd2\x26\x65\x86\xcd\x0a\x00\x5e\x08\xf8\xdd\x61\x04\x08\xee\xc6\x58\xed\x69\x5c\x0c\xb5\x7f\x57\x43\x6d\x45\x08\x0d\x58\x72\xcd\xfa\x30\x39\x09\x35\x7c\x7d\x84\x31\xc6\xa4\xaa\x48\x5f\x15\x3a\x89\x72\x95\x82\x28\xc8\x7f\xb8\xe1\x72\xc0\x2f\x35\xd3\xc3\xd1\x88\x20\x8f\xf4\xb9\xb9\x2a\x2f\x69\xa2\x72\x5b\x7b\x6f\xfb\x4a\xf2\xc4\x5e\xd9\x67\x12\x4c\x74\x65\xcc\xc0\x5e\x17\x46\x27\x4a\xde\x10\x14\x20\x64\x86\x03\xc0\x4f\x19\xe2\xc2\xe8\x32\x31\x15\x46\x23\x84\xb2\x52\x26\xd8\xbf\x68\x19\x16\x60\x5b\x56\x7e\x82\xb7\xfa\x5c\xd2\xae\x92\x06\xee\x4c\x80\x71\xe5\x68\xdf\x30\x8d\x1f\x2b\x83\x6b\xfe\x2d\x92\x20\x4f\x65\x59\x01\x26\xbc\xd8\xe9\x34\xfc\xe8\x31\xd3\x05\xfc\xe4\xd2\xf8\x09\xfd\x0c\x19\x2b\x85\xf9\xbb\x04\x3d\xf4\x49\x3d\x96\x84\x24\x26\x41\x88\xb7\xe3\x10\x7f\x7c\x1f\x20\xec\x56\x15\x3c\xe7\x4b\xc2\xb8\xa1\x0d\xca\x76\x1c\x8e\x31\xac\xb3\xa1\x51\x86\x89\x10\xb4\xde\xe9\x4c\xed\xc2\xf5\x12\xbf\xe1\xeb\x30\x02\x3b\xcb\xe3\x19\x06\xad\xf1\x6f\x1d\x2c\xb9\xc0\x15\xf2\xbc\x84\xfe\xd5\x3b\x3a\xf4\xad\xf0\xb4\x67\x98\x29\x8b\xa3\x1f\x21\xb6\xf7\xe8\xbe\xd6\x4a\xfb\xa0\x75\x10\x20\xcf\xd3\x60\x4a\x2d\x91\x37\x42\xf3\xe6\x1c\xfd\xf0\xad\xce\xdf\x2c\x34\xb1\x24\xc9\x4e\x43\xd6\xde\x70\x84\xc9\x0e\xae\x89\x23\x6f\x14\x04\x8b\xdc\xb3\x5d\x75\x23\xee\xd9\x09\x3c\x0d\xdd\xfe\x77\x3a\xf8\x91\xf4\xdf\x9d\xf2\xc7\x4c\xb3\xdc\x27\x3c\x7d\xd0\x7a\x35\xc1\xf6\x58\x7a\x02\xff\x96\x50\x18\x7f\x4a\x32\xbb\xf8\x94\x43\x55\x45\x8f\x35\xcf\x99\x1e\xfe\x80\x61\x57\x89\x32\x97\xd3\x9c\x3b\x3c\x6d\x99\x59\x6f\xe1\x89\xe3\x4e\xa8\x55\x19\xaf\x69\xf1\xe3\xa5\x17\x9b\x58\xbf\x97\x36\x67\x63\x76\xef\x62\x42\x7b\x57\xaa\x14\xe9\x1e\x97\xa9\x23\xfc\xfb\x14\xb5\x4f\x8f\xc5\xc0\xcd\xcf\xd2\x26\xde\x4f\x98\x67\x65\xd8\x90\x99\x32\xa4\xd9\xf4\x2f\x6a\x49\xfd\xd2\x69\xb3\xc4\x7b\xe1\x3a\x59\xad\x27\xaf\x9f\x85\x35\x29\x7a\xab\xd7\x31\xee\x60\x9e\x22\xaf\xb5\x6c\x1b\x1f\x9e\x29\x25\x92\x8b\xc5\xd1\x70\x27\xa4\xd6\x64\xbc\x58\x2e\x3c\x1b\x8a\xd2\x49\x95\x71\x10\x69\x81\x3b\x38\xb7\x0d\x2f\x67\x83\xb3\xc2\x68\x2e\xfb\xe7\x5c\x1a\xd0\x19\x4b\xa0\x1a\x05\xf3\x73\x31\x09\xb4\xa9\x54\xac\x96\xda\xcd\x66\xa8\x36\xec\xd1\xae\x7e\xa1\x38\xd5\xc7\xe4\x59\xcd\xff\x15\xb5\x9a\xcd\x9a\xd6\xc8\xf2\xdc\x4e\xcd\xb5\x6a\xe2\xdf\x9a\x27\x7e\xb9\xf2\x2f\x1a\x9f\xb8\xec\x17\xef\xb8\x34\x1f\xdf\x17\x7e\x42\xdd\x59\x75\x57\x6b\x36\xac\xad\x0a\xea\xa1\x1d\xcc\x06\x03\x90\xa9\xcf\xd3\x22\x5c\x34\xeb\xec\x9c\x04\x01\xa5\x34\x58\xb5\x94\xda\x5f\xbe\x93\x3b\xe1\xcf\x5f\x0f\x4b\xc8\xdc\xde\x65\xab\x57\xd0\xea\x5e\x5b\x0c\x6a\xa5\xdd\xea\xbf\x6a\x8f\x9c\xf8\x0e\xd0\x16\x89\x95\xb4\xc0\x2f\x71\x28\x7a\xae\x50\xcc\xb1\xb9\x91\xef\x05\xaa\x7d\x9e\xb3\xf5\x47\x90\x56\x53\xa3\x2d\xe4\x65\x5c\x40\xf8\x60\xd6\x17\xa5\xf3\x2f\x5c\x80\x4f\xec\x03\xb2\xb1\x8d\x64\xe3\x35\x2c\x2e\x3d\x1a\x80\xdc\xdc\x9b\xe7\x72\x0c\xce\x55\x69\xb8\xa0\x27\xc0\xd2\x5d\x21\xfc\x6c\x63\x4b\x44\xd1\xc4\x97\x23\x03\x4c\x40\x3f\xba\x13\xc5\x1d\xf2\xe0\x0e\x12\x31\x26\x60\xef\xb9\xdd\xed\x71\xc9\xf4\xd0\xbf\xdc\x18\x83\xa7\x15\x38\x6e\xcc\x67\xe7\x33\x6b\x31\xc4\x71\x80\xbc\x4c\x69\x7c\x11\xe2\xe2\x0a\xc0\x58\x96\x9a\xc9\x3e\x60\xc7\x9c\xf6\xec\xcd\xc2\xd1\x6a\x86\x69\x75\xfb\x30\xc8\xcd\xa1\x27\xea\xb6\x1e\x62\x37\x23\x40\xfa\x5a\xdd\xd2\x2e\x08\x51\x04\xf8\x4f\xbc\x5d\x3f\xf2\x12\x25\x0d\x97\x25\xd8\x3f\x6c\x49\xae\xd8\x41\xb1\x9d\x12\x45\xa9\xc2\x43\x55\x6a\x5c\x80\xc8\xec\x9d\xe9\x63\x8b\xca\x19\x97\x78\x5c\xe9\xf4\x54\xf3\xbc\x37\x60\x09\x3c\x90\x3a\x8b\xcf\x69\xcf\x3d\x76\x7d\x02\x3f\x85\x99\x68\x00\x53\x0f\xc2\x29\xc6\xd6\x06\xbb\x99\x4b\x0d\xec\xda\x39\x51\x9f\xa6\x66\x6e\x64\xfc\x11\x74\x1a\xf9\x59\xbb\x82\xb7\x15\x2d\x3c\x6d\xd5\x1f\x58\x67\xb6\x86\x15\x7b\xfe\x13\x1d\x2f\xc6\x55\xd1\xf6\x6d\x30\xae\xa3\xd9\xa6\x48\x63\xdd\x87\x38\x0e\x31\x79\x73\x43\x1c\x4e\x23\x47\x5b\x59\xd8\x96\x82\x9b\xda\x3b\x84\x5b\xd7\xbf\x02\xe4\xb9\xe8\x3e\xee\x3b\xbb\x69\xea\xf2\xee\x13\xf7\x70\x7b\x56\x83\x5b\x85\x41\x53\x35\x53\x4a\x8d\x0b\x68\x3a\x77\x76\x81\xa6\xc2\xea\xda\xda\x4d\xd3\x13\x75\x6b\x09\xa3\x96\xf8\xdb\x4c\xef\xa6\xa9\x8d\xb5\x1f\xd0\x1e\x98\x86\x5a\x6b\x55\x38\x8c\x51\xdd\xd4\x25\xcb\xc1\xed\x3b\x37\xb4\x37\xd0\x5c\x9a\xcc\x27\x55\x45\x9b\x09\x6f\x6e\xa8\xd5\x8b\x84\xd8\xf0\x1c\xe8\xa1\x65\xe0\xba\x3f\x33\x3e\x79\x17\xc7\x1f\xe3\xed\xf8\xdd\xf6\x87\xf8\x7d\xfc\xc1\xbd\x33\x13\xfa\x0d\x58\x0a\xda\x27\x2e\x27\xd2\xbc\x4d\x79\x31\x50\x05\x37\x5c\x49\x12\x62\xc2\x8c\x61\xc9\x55\x0e\xd2\x7c\xba\x5f\xbe\x43\xfe\xb8\xbf\x0c\x6a\x52\xf4\x1f\xcd\xed\x09\xa3\xfe\xad\xad\x92\x36\xa7\xff\x07\x00\x00\xff\xff\xa3\x29\x84\x5f\x21\x1b\x00\x00")

func controllersTplBytes() ([]byte, error) {
	return bindataRead(
		_controllersTpl,
		"controllers.tpl",
	)
}

func controllersTpl() (*asset, error) {
	bytes, err := controllersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controllers.tpl", size: 6945, mode: os.FileMode(420), modTime: time.Unix(1541486502, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\x51\x6b\xdb\x30\x10\xc7\xdf\xfd\x29\x0e\x33\xb0\xbd\xba\xd6\x7b\x86\x59\x69\xbb\x8d\x41\x19\x63\x6b\xd9\xe3\x72\xb1\xcf\x8b\x88\x6d\x69\xd2\xb9\x59\x09\xfe\xee\x43\xb2\xd3\xd0\xc6\x49\xc8\xd8\x4b\x8b\x74\x77\xff\xdf\x5f\x77\xb2\x22\x04\xc0\x27\x6a\xc9\x20\x53\x09\x8b\x27\xb0\x35\x16\x2b\x32\x81\x6c\xb4\x32\x0c\x4b\x66\x0d\x95\x51\x0d\x84\x99\x70\x8b\xf0\x5d\xb0\x8d\x59\x56\x86\xc6\xe0\x95\xf0\xab\xf0\x39\xf8\x16\xd0\x42\xa1\xd4\x4a\x8e\x29\xd1\x95\xe8\x58\xd6\x56\x0c\x9b\x51\x10\xd0\x1f\x9f\x59\x75\x6d\xc1\x52\xb5\x70\x8f\x2b\x8a\x65\x99\xc0\x26\x00\x30\xc4\x9d\x69\x3d\x3f\xfb\x45\x1c\xcf\x05\x6a\x29\x36\x9b\xec\x4e\xad\xc9\x7c\xc1\x86\xfa\x5e\xbc\xd9\xc8\xb2\x9f\x27\x41\xbf\x2f\x76\x27\x2d\xc7\xbf\x3b\x32\x4f\xd3\x7a\xd1\x84\x5e\x94\xfa\x54\x00\x8d\x06\x1b\x3b\xf3\xe5\x01\x40\xef\x09\x7b\x88\x1b\x43\xc8\x14\x2f\x54\x39\xc1\xd0\xca\x1e\x82\x78\x84\xab\x0a\x00\x26\xbd\x3f\xe8\xd2\x09\xcb\x32\x3d\xa0\xdd\x1d\xed\xc7\x69\xc0\x57\xe4\x62\x79\x44\xdf\x87\xcf\x22\xec\x21\x6e\xa9\x26\x9e\x1e\x67\x39\x84\xce\x9d\xe8\xb5\x73\x35\xca\x1e\x18\xec\x11\xe5\x79\xfa\x62\xb4\xf0\x72\xb6\x93\xac\xa1\x4b\x3e\x31\x85\x73\x3b\x35\x1f\x4a\x5e\xdd\x28\x38\x71\xa5\x3c\x77\x1c\xff\x71\xf0\x81\x2b\xf0\x6f\xd8\xcf\xfe\x9b\x8d\x2b\x59\xd3\x80\x7a\x44\x03\x95\x32\x0d\xe4\xd0\xd2\x1a\x3e\x2a\xd3\xdc\x22\x63\x9c\x04\xe0\xf7\x33\xd4\x9a\xda\x32\x8e\x5c\x49\x94\x82\xfb\x37\xfc\xcd\x5a\x6c\x28\x99\xfa\x18\x06\xbb\xc3\xf3\xb0\xef\xda\xa9\x6e\x5d\x2f\x09\x4b\x32\x76\x36\x2e\x01\xa2\x1b\xd5\x32\xb5\x7c\x79\xff\xa4\x29\x9a\x41\xd4\x74\x35\x4b\x8d\x86\x85\xab\xbb\x2c\x91\x31\xf2\xb9\xfd\xe1\x43\x7e\xf0\xeb\x78\x77\xc0\xce\xd4\x90\x83\x36\xaa\x20\x6b\x33\x6a\x1f\xb3\x6b\xb4\xf4\xf0\xed\x0e\x2e\x20\xf4\x66\x07\x89\x57\x66\xdf\x63\xe1\x0a\x7e\xb2\x5a\x51\x9b\x87\x70\x31\x3c\x84\x99\x65\x64\xca\xfc\x6e\x00\x50\xab\x02\x1d\x36\x5b\x1a\xaa\x20\x77\xb0\x49\x57\x3f\x68\xf1\x5d\x15\x2b\xda\x1a\x93\x15\xc4\x53\x96\xf2\x1c\xc2\x30\x19\x3b\x32\xf6\x36\x5c\xdb\x99\x10\xce\xc1\x8e\xa6\x2c\x3f\xdb\x5f\xd3\xc2\x7a\xed\x93\x27\x18\xde\x64\xf7\x30\xde\xbb\x3d\x3f\xe7\x7e\x37\xc4\x09\x43\x99\x21\x5d\x63\x41\x71\xe8\x7f\x15\x52\x67\x26\x4c\xfe\x0b\xba\x0f\xfe\x06\x00\x00\xff\xff\x69\x64\x92\x51\x96\x06\x00\x00")

func jsTplBytes() ([]byte, error) {
	return bindataRead(
		_jsTpl,
		"js.tpl",
	)
}

func jsTpl() (*asset, error) {
	bytes, err := jsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js.tpl", size: 1686, mode: os.FileMode(420), modTime: time.Unix(1541486502, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xdf\x6f\xdb\x36\x10\x7e\x26\xff\x8a\xab\xd0\x16\xd2\xaa\xc9\x7d\x18\xf6\x60\x40\x2d\xda\xb4\x2b\xb2\xb9\xbf\xe6\x16\x7b\x08\x82\x94\x96\x4e\x0e\x67\x89\xb4\x49\x6a\x71\xa0\xe9\x7f\x1f\x48\x2a\x8e\xe5\x38\x8e\x3d\xb4\xcb\x1e\x9a\x17\x43\xd2\x1d\xef\xe3\xc7\xef\xbe\x8b\x34\x18\xbc\x41\x81\x8a\x19\xcc\x61\x72\x09\xba\x64\xd9\x0c\x15\x1d\x0c\x0c\x9b\x94\x08\x4d\x93\xbc\x63\x15\xb6\x2d\x1d\x0c\xc6\x1f\x47\x74\x30\x68\x9a\x64\x6c\xf2\xf1\xc7\x91\xbb\x67\x1f\xda\x0b\xf8\xf1\x19\x4c\xb9\x39\xaf\x27\x49\x26\xab\xc1\x9f\x95\xe4\x4a\x8a\x81\x5e\x94\x4b\x9f\x73\x15\xe8\xb2\x8e\x64\x59\x57\x42\x77\xab\x7d\x1c\x75\xd7\x6d\x4b\xe7\x2c\x9b\xb1\x29\x42\x25\x73\x2c\x35\xa5\xbc\x9a\x4b\x65\x20\xa4\x7a\x41\x82\xb5\x02\x6f\x99\x36\xa8\x2a\x2e\x72\x3d\xd0\x8b\x9a\x2b\x85\x65\x40\x23\x0a\xd4\x5c\xce\x1d\xec\x23\x56\x61\x79\xc4\x34\x7a\xfc\xa0\x8d\xaa\x33\xd3\x50\x00\x80\xa6\x51\x4c\x4c\x11\x1e\xf2\xf8\x61\x26\xcb\x61\x9a\xac\x10\x40\xd3\xd8\x5b\x37\xd2\xbb\xdb\x9f\x2e\xe7\xeb\x57\x6c\xba\x96\x21\xab\x0a\x85\x69\xdb\xae\x04\x8a\xbc\x6d\x69\x4b\x29\x2d\x6a\x91\x41\xd8\x34\xc9\xb1\xe0\x86\xb3\xd2\x97\xd9\x2c\x11\xc1\x88\x6b\x13\xca\xa2\xd0\x68\xe2\x92\x57\xdc\x40\xcd\x85\xf9\xf9\xa7\x08\xc2\x93\xd3\x9b\x09\x31\x17\x26\x46\xa5\xa4\x8a\xc0\xef\xeb\x2f\xa6\x20\x67\x86\x41\x5a\xb1\x19\x6e\x4f\x7a\x1a\xad\x42\x8d\x34\xac\x04\x2e\x0c\x25\xf6\xf2\xe2\x1c\x15\x82\x5e\x24\x2f\x44\x4e\x49\xd3\xf0\x02\x8e\xa4\x30\x8c\x0b\x0d\xc9\xf8\x82\x9b\xec\xdc\xae\x03\x81\x36\xcc\x60\xd0\xb6\x94\x10\x9f\x93\x02\x9b\xcf\x51\xe4\xa1\xbb\x8c\xed\x1a\xef\xa4\x79\xbd\x68\xba\xd0\xe1\xd8\xfe\xbc\xc2\x12\xda\xc8\xae\xec\xa9\x21\x8b\x18\x98\x9a\xea\x18\xce\x60\x98\xda\xa4\x31\x96\x98\x99\x30\xc8\x64\x2d\x8c\x25\xec\x83\xe2\x15\x53\x97\xbf\xe1\xa5\x3f\xa0\xee\x9c\x3a\xc2\x82\x28\xf9\x45\xc9\x2a\x0c\x56\x2a\x0d\xa2\xe4\x0f\x0b\xc1\x03\x89\x92\x4f\x72\xbc\x28\x43\xbf\x63\x54\x6a\x98\xe6\x93\xe4\x0d\x9a\xf0\xb1\xdb\x7a\xbc\x88\x6d\xfd\x24\x49\x7c\x04\x2f\x6c\xd0\x83\x54\xf0\xd2\xf3\x69\xff\x14\x9a\x5a\x09\x47\x6b\xec\xb3\x50\x29\xf7\xb4\xa5\x64\x52\xf3\x32\x47\xd5\x47\xff\xc3\xdd\xb8\xde\xab\x1c\xd5\xcb\x4b\x17\xb1\x73\x8f\x90\xa3\xce\x82\x88\x12\x5e\x80\x93\xc4\xb3\xa7\xcd\xaa\x6c\xda\xfd\x26\x23\xfb\x24\x74\xcf\x23\x4a\x5a\x17\xed\x75\xb4\x35\xfc\xbd\x7b\xd4\x29\xcd\x27\x78\x26\xe2\x33\x48\xe1\x2a\x6a\x83\x3b\x4b\x5d\xb7\xc3\xc7\x8e\x8c\x0d\xf2\xb6\xf3\xd4\x52\xda\x34\xc9\x5b\x34\xe7\x32\x7f\x85\x25\x1a\x6b\x25\x7b\x37\xc4\xe7\x79\xce\x0c\x86\x11\x38\x95\x43\x43\x09\xac\x25\xc1\xdf\x90\xbc\xa8\x8d\xac\x98\xe1\x99\x0f\x7d\xbd\x9c\x2b\xd4\x9a\x4b\x61\xcb\x58\x58\x67\x16\x86\x95\x57\x3e\xf1\x1e\xf4\x7a\x89\x59\x18\xd4\x2e\xfc\xda\xde\x40\xa3\x81\x9e\x4d\x75\xed\x70\xd7\x01\xa5\xc3\xbb\x22\x82\xb8\xb7\xd1\x1e\x5b\x1d\x45\xfb\xf2\xf1\x81\x99\xec\x3c\x84\x0e\x7c\xc5\xe6\x27\xda\x28\x2e\xa6\xa7\x5c\x18\x54\x05\xcb\xb0\x69\xaf\xc9\xb2\x26\xb4\x49\xd0\x5b\x36\xef\x73\xe4\x3a\x5f\xd8\x5d\xc3\xc9\xa9\x5f\x8d\x92\x42\x2a\x98\x59\xd2\xbc\x4d\x5e\x91\x45\x09\xd1\xce\x06\x60\xe6\xce\x02\x20\xb3\x7e\x60\x3d\x7c\xe5\x0e\x6d\x3b\xa4\x84\x10\xbf\xe2\xca\x17\xdc\x65\x0c\x45\x65\x92\xf1\x5c\x71\x61\x8a\x30\xf8\xf2\x48\x7f\x49\x87\x8f\x74\x10\xc3\x2c\x86\x59\x14\x51\x62\x95\xe8\xd5\x5b\xa2\xf0\x49\x11\xa4\x29\x3c\x75\xb5\x3b\xce\x04\x2f\x5d\x54\xc1\xb1\xcc\xb5\x73\x0e\x07\x5b\x27\xbf\x4a\x2e\xae\x4a\x05\xb1\xed\x1a\x8f\xfc\xe4\xce\x36\x0b\x4e\x21\x85\x1e\xff\xc9\xd6\x94\xfe\x81\x50\x72\x16\xc3\xfe\xf2\x0a\x9e\x40\x87\xf9\x49\xf0\x15\xd5\xd5\x1d\x4f\x44\x49\x5f\x54\xd6\x68\xbb\xce\xfb\xc4\x66\x16\x2e\xec\x2d\xb4\x23\x85\xae\xf1\xc2\x2d\x03\xa4\xd3\x57\xd4\x50\x20\xb7\x75\xa3\xcf\xdf\xd2\x93\x5e\xfb\xba\x2e\xcd\xf6\xbe\xe4\x42\xa3\x32\x76\x26\xc9\x5d\xcd\x79\xa3\xa7\x48\xcf\xbb\x57\x5a\xe9\x45\x39\x43\xb2\xca\x39\xf8\xa0\x6d\x66\xea\x61\x27\x23\xa6\xcd\xb1\x43\x79\x9c\x87\xbd\x66\xee\x17\x3b\xb4\xb7\x5f\xda\xde\xee\x0c\x8f\xe7\x1a\x4e\x4e\xbb\xd9\xdf\xb5\x33\x50\x62\x96\xeb\x72\x7b\x89\x53\x2e\x96\xe1\x6a\xef\xf0\x20\xb5\xbd\xe1\x5a\xc5\x2c\x93\xdf\x65\x59\x4e\x58\x36\xb3\x01\xeb\xca\xf0\x04\xc0\xde\x2e\xea\xcc\xe0\x2c\x06\x9e\x5f\x1b\x82\xc5\x67\x01\x1d\xce\x64\xca\x73\x4a\xd6\xda\xc6\x2c\xff\x2f\xae\x4c\xb6\xd0\x78\x83\xc7\x1e\x91\x9d\x5b\xd9\x1c\xb7\x11\xfb\x0f\x20\x37\x7b\x1d\x48\xbb\xd9\xac\x5e\x25\x67\xb7\x2b\xc3\x5b\xff\x9a\x30\xe2\x7d\xc7\x00\xb9\x7b\x0a\xdc\xdf\x10\x78\xa4\xbf\xf5\x08\xf8\x6a\x4d\x73\x5b\x1f\x50\x72\xd8\x98\x39\xbc\x03\xbe\xf9\xe0\xb8\x57\xe9\xd3\x3d\xd4\xdf\xcd\xa3\xa6\x49\x46\xf2\x02\x95\x7f\x66\x5b\x61\x5b\xc6\x4a\xf8\x5f\xed\xe8\xb5\xa9\xcc\xfa\x81\x7d\x50\x38\x67\xca\x15\xcc\xf7\x9f\x59\x87\x57\x06\x4a\x72\x2c\x50\x81\x05\x90\x1c\x95\x52\xa3\x0d\xea\x94\xd8\x67\xe3\x5a\x95\x9b\x2c\x35\xe0\x27\xf5\xea\xe6\x7e\xa3\x7a\x5d\xa4\xae\xbe\x53\x68\x7f\xf1\xfb\xd6\x0e\xec\xd4\x8e\x93\x8e\x7f\xeb\xe8\x8d\x54\x27\x10\xff\x86\xf7\x1f\xb8\xc3\x8e\x17\xe9\xda\xf0\xaa\x7b\x91\xee\x47\x3d\xbc\xed\x7d\xbb\xe7\x1b\x3b\x2c\xc3\xa5\xa4\xcf\x63\x57\x21\x7d\xbe\xaf\x6b\x3c\x0f\xe2\xab\x57\xf5\xd8\x66\x26\xef\xe4\x45\x18\x25\x9f\x05\x5f\x86\x51\xcc\xf3\xc8\x21\xc5\x52\xe3\x41\x68\x0e\x47\xb1\xa3\xb8\xff\x76\x70\x8d\x62\x0b\x88\xdc\x9d\x39\x14\x4a\x56\x6b\x48\xf6\xaf\xee\x6a\xad\x4a\xdd\xaf\x3b\xee\xf2\xc6\x63\xf7\x75\xec\xbb\x2d\x3a\x5b\x5c\x29\x61\x4d\x08\x46\xd5\x22\xb3\x7a\xdc\xf8\x9a\xf9\xaf\x8a\xd2\xef\xce\x7b\xa5\xcb\x7f\x02\x00\x00\xff\xff\x19\x1b\x9a\x8b\x36\x16\x00\x00")

func modelsTplBytes() ([]byte, error) {
	return bindataRead(
		_modelsTpl,
		"models.tpl",
	)
}

func modelsTpl() (*asset, error) {
	bytes, err := modelsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "models.tpl", size: 5686, mode: os.FileMode(420), modTime: time.Unix(1542080849, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sqlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\x73\x2e\x4a\x4d\x2c\x49\x0d\x49\x4c\xca\x49\x0d\x0e\xf4\xa9\xad\x05\x04\x00\x00\xff\xff\x4d\x9a\x10\x9b\x13\x00\x00\x00")

func sqlTplBytes() ([]byte, error) {
	return bindataRead(
		_sqlTpl,
		"sql.tpl",
	)
}

func sqlTpl() (*asset, error) {
	bytes, err := sqlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql.tpl", size: 19, mode: os.FileMode(420), modTime: time.Unix(1540527348, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vueTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xeb\x6f\x1b\xc7\x11\xff\xae\xbf\x62\xb2\x70\x02\x32\x21\x4f\x72\x8a\xa0\xc8\x89\xc7\x1a\x51\xda\xa2\x68\xd1\x06\x68\xf2\xc9\x30\x82\xd5\xdd\x92\xdc\x7a\xef\xd1\xdd\xa5\x1e\x21\x08\x14\x6d\x12\xdb\x69\x13\xb9\x68\x2a\xa4\x79\xc0\x76\xe1\xf4\x05\x58\xf1\x87\xc2\xb5\x63\x25\xfd\x67\xc4\x93\xf3\xa9\xff\x42\xb1\xbb\x47\xde\xde\x83\x22\x65\x2b\x40\x0d\x14\x10\x48\xde\xee\xec\xcc\xec\xcc\x6f\x66\x67\xe7\x04\xd0\x79\xa6\xdd\x86\x1f\x92\x88\x70\x2c\x49\x00\x9b\xbb\x20\x18\xf6\x2f\x13\xde\x6e\x77\x61\xa5\x23\x49\x98\x30\x2c\x49\x77\x05\xa0\x43\x58\xdb\xc7\x3c\x50\xbf\x01\x3a\x01\xdd\x02\xc1\x62\xe9\xa1\x01\xc1\x01\xe1\xc8\x8c\x1b\xba\x5e\xcc\x43\x70\x69\xc4\x68\x44\x3c\x24\xf9\x90\x20\xd8\x6a\x87\x71\x40\x98\x87\x04\xc1\xdc\x1f\x28\x12\x04\x17\xc4\x70\x33\xa4\xd2\x89\xb0\xa4\x5b\xc4\x49\x38\xd9\x22\x91\xf4\x50\x14\x47\x64\xc6\x31\xe7\xd9\xa6\x92\x84\xf9\xb0\x99\xa0\x51\x32\x94\x90\x70\xd2\xa3\x3b\x6d\xea\xc7\x91\x87\xd4\xa8\x1f\x47\x6d\x23\x0a\x81\xcf\x08\xe6\x78\x93\x91\xa9\x16\x8e\xe4\x34\xb4\x55\x71\x68\x82\x20\x61\xd8\x27\x83\x98\x05\x84\x7b\x28\xbd\xf1\x79\x7a\xed\xeb\xc9\xbb\xef\x4c\x0e\x1e\xa0\x6e\x67\x75\x2a\xc9\xd2\x6a\xb5\xa0\x16\x2c\xa7\xee\xe6\x50\xca\x38\x02\xb9\x9b\x10\x0f\x25\x9c\x86\x98\xef\x22\xb8\xe0\x33\xea\x5f\xf6\xd0\xcf\x33\x8d\x6b\xf7\xd1\x4d\x6f\x7c\xfe\xe8\x8b\x3f\x6b\xb9\x86\xcd\x1c\xe6\x53\x6e\x9c\x08\x22\x2d\x7b\x77\xd3\xfb\xef\x1c\xff\xfd\x4b\xc3\x26\xfd\xec\xd6\xd1\xc3\x7b\xb5\xcc\x4a\x3b\x5b\x29\x8d\xda\xae\x2e\x49\xa4\x61\x12\x73\xd9\xa3\x8c\x38\x5b\x54\xd0\x4d\x46\x3c\xe3\x7e\x1e\x0f\xa3\xa0\xbc\x6b\x9f\x61\x21\x3c\xa4\x60\x95\x31\x42\xdd\x0e\x9d\x0e\x4f\x77\x3f\x4c\x58\x8c\x83\x17\x95\x13\x68\x77\xf2\xc5\xe1\xe4\x9d\xcf\x1f\xdd\xfa\x5b\x7a\xf3\xb0\x46\xf7\x1a\x95\xbe\xbf\xa3\x54\x42\x65\xd9\x46\xa1\xe5\x34\x08\xe2\xed\x48\xe9\x90\xab\x70\xe5\xcb\xd3\xa8\xe0\x73\x82\xe5\xcc\x22\xe0\x81\xb1\xc9\xb2\x1a\x95\xd0\x90\xb0\xa1\x40\xdd\xf4\x5f\x0f\x27\xef\xdd\xac\x93\xaf\x43\x53\xee\x32\xe2\x21\x0d\x7c\x77\x33\x96\x03\xa5\x7a\x40\xb7\xb2\xe8\xb5\x7e\x12\xd6\x96\x3a\x34\xdc\x00\x4b\xec\x21\xfd\xe0\xa8\xdf\x68\xca\x65\x9b\x06\x72\xe0\xc2\xf9\xb5\xb5\x67\x55\xc8\x12\x46\x7c\x49\xe3\xa8\xed\x0f\x70\xd4\x27\x0a\xb4\xd9\xc8\x86\x1e\x50\xb1\xae\xac\x45\xa3\xfe\x94\x5d\xf6\x58\x48\x12\x7a\xa6\xed\xc7\x6c\x18\x4e\xc3\x61\xc6\x1a\x81\x96\xe9\xa1\x97\x5e\x42\x05\xf8\xd9\x8b\x72\xbc\x8e\x46\x5c\x09\x86\x73\xb4\x75\xce\x8f\x99\xeb\x39\x1b\x9a\x42\x8c\xc7\xf3\x04\x32\xbc\xa9\x92\xd1\x68\xa4\x16\x38\x1b\x38\x24\x6c\x03\x0b\xf2\x53\x1c\x92\xf1\xd8\x4e\x3d\xd3\x1c\xa8\xb3\x5d\x5b\xf8\xb1\x56\x54\x7d\xa1\x42\xf4\x89\x04\x47\x5d\xe8\x74\x3a\xa0\x27\x1d\x1e\x6f\x3b\x53\xee\x5a\xa4\x61\x0d\xdd\x6e\x17\x3a\xab\x9a\xda\x8a\x37\x3b\xd3\x2e\xd8\x2c\x8c\x46\x24\x0a\x16\xee\x2c\xfd\xc3\xfb\x47\x5f\x7d\xfa\x38\x3b\xc9\xf1\x2b\xe8\x5b\x8a\x24\xc4\x8c\x55\xd0\x9a\x30\x4c\x73\x84\x0f\x93\x40\x21\x5c\x27\x7e\x0f\x7e\xb6\xf9\x0b\xe2\x4b\x07\x0b\x41\xfb\x51\x63\x34\x6e\xcd\x4c\xd2\x5c\xcf\x28\xcb\xb1\x50\x84\x38\x09\xa8\x44\x5d\x58\x9c\xe9\x6a\x34\x0c\x14\x14\x78\x9e\x52\x5f\x25\x8c\x48\xd2\xc8\x55\x28\x0b\x0b\x34\x41\x96\xe3\xab\xa9\x70\x49\xd7\xe4\xc3\xf6\x09\x69\x02\x28\xc4\xbc\x4f\xa3\x36\x23\x3d\xe9\xc2\x8b\x6b\xc9\xce\x7a\x36\x22\xe3\xc4\x0c\xa0\x9a\xec\xb1\xd5\x16\x83\x78\xdb\x43\xe1\x90\x49\x9a\x30\x32\x0b\x33\x87\x91\xa8\x2f\x07\x15\x97\x4c\x77\xbc\xa1\xbe\x5e\xc1\xd2\x1f\xbc\xa6\x3e\x50\x37\xbd\xf6\xe0\x9b\x2b\x7b\x47\xff\x3e\x48\x3f\x7c\x70\x72\xc6\x5a\x56\x66\xd9\xc8\xb9\xc8\x57\x33\x6b\x1a\x99\x93\xab\x37\xbf\xf9\xd3\xed\x8a\xcc\x52\x02\x4a\x70\x9f\xaa\x12\x20\x8e\xa6\xe9\x2f\x1f\x41\xb0\x89\xfd\xcb\x7d\x93\x1c\x19\xde\x8d\x87\xd2\x43\xda\xef\xa2\x05\x32\x96\x98\xb5\xd4\xe1\xbf\xd5\x82\x04\xf7\x09\x6f\x41\x44\x76\x24\x02\x57\x4f\x4d\xf3\x8f\x7e\x40\xe0\x2a\x92\xb6\xc1\x4c\x96\x98\x68\x48\xa5\x3d\x21\x3c\x74\xf1\xfc\x5a\x0b\x5e\x5a\x6b\xa9\x84\xd7\x82\x97\x5f\x7e\xf9\x92\xca\x7a\xf4\x2d\x92\x27\x3c\xfa\x16\x99\xe6\xba\x0b\xfe\x90\x73\x12\xc9\xd9\xe4\x6b\xb8\x3f\x9d\xb4\x90\x91\x6f\xa8\xbb\x32\xdb\x77\x40\x31\x8b\xfb\x20\xa9\x54\x28\x31\x19\x1d\x81\x9b\xc5\x86\x23\x76\x23\xbf\x7c\x78\xe4\x99\x71\xad\x0c\x1b\x53\x75\x65\x55\x56\xb6\xca\x94\x59\x3a\x25\xb4\x93\x58\x50\xa5\x80\x87\x38\xed\x0f\xe4\x74\x38\xe3\x77\xbe\xc0\x6f\xc9\xb4\x5a\xaa\x75\x96\xce\xaa\xb5\x25\xdc\xb4\x36\x1b\x8d\x68\x0f\x36\xe2\x48\x62\x1a\x09\xd0\x9c\x5e\xdf\x4d\x08\x20\x1a\x49\x34\x1e\x47\xc3\x70\x93\xf0\xd1\x88\x30\x41\xc6\x63\x55\xc8\x65\x09\xb1\xb0\xe9\xba\xdc\x8b\x00\x0f\x65\xdc\xf6\xe3\x30\x51\x18\xf5\x50\xdc\xeb\x2d\x55\xda\xad\xc0\xbc\xe4\x5b\x29\x89\xf2\xba\xb8\x17\xc7\x52\x85\x48\x86\x68\xe3\xeb\x76\x36\x5a\xac\x6d\x17\x95\x0b\x3d\xcc\x04\x41\xdd\xc9\xde\x3e\xa4\xf7\xae\xd6\xe7\xa9\x85\xa5\xe5\x86\xe6\x8a\xba\xc7\xb7\x0e\x60\x72\xf0\x71\x5d\x1e\xb0\x2b\x84\x19\x3c\xe7\xe2\xf5\xf8\x70\xff\xd1\xd7\xbf\xaf\xe0\xb5\x98\xe0\x97\xc5\xab\x75\x80\x3c\x0e\x5e\xbf\x3d\xa8\x9e\x2d\x42\xad\x6d\x3e\xcd\x08\xad\x1c\xe2\x67\x82\xd0\x37\x34\xd7\x33\x44\xa8\x7d\xee\x55\x70\xba\xa9\x4e\xab\x44\x7d\x9c\x16\xab\xd6\xca\x27\xca\xaf\x4f\x0d\x6a\x4b\x1b\x7e\x9a\x91\x5b\xf5\xfa\x59\xa1\xd7\x2e\xb8\x1e\x13\xc1\x75\x10\xde\xbb\x7e\x7c\xfb\x4b\xf7\xe8\xfe\x7b\x47\x87\x37\x27\xd7\x3f\x98\xdc\x7d\x37\xfd\xf0\xc1\x64\xef\xa3\xc9\x07\x37\xd2\x4f\xaf\xa5\x7f\xbc\x9b\xbe\x7f\x50\xc1\x76\xf5\x1a\x3e\xc3\xf6\x77\xd6\x9e\x2d\x20\xdb\xdc\xae\x81\x93\x9e\x0a\x6b\x7d\xcb\x05\xd7\xba\xdc\xfd\x80\xb2\x59\xad\xe3\x2a\x8e\x6d\x46\x85\x2c\x88\x50\x1f\x6a\x10\x81\x3b\x90\x32\x69\x73\xf2\xcb\x21\x51\x34\x3f\x0a\xcd\xd5\xdb\xd5\xd8\x30\xdc\x3d\x64\xac\x0d\x01\xc7\x7d\xc0\xbe\x89\x18\xdb\x69\x73\x1a\x00\xe6\xf2\x9d\x93\x29\x34\xe4\x84\x86\xe6\xcd\x37\xa5\xaa\xfe\xba\xca\x4a\xfb\x57\x8e\x1e\xde\x4b\x7f\xbb\x3f\xb9\x7a\x37\xbd\x73\x7b\x72\xfb\xed\xff\x1c\xfe\x2e\xbd\xba\x5f\x08\x91\xb0\x7b\xfc\xeb\x07\x93\x2b\x0f\x8d\x79\x3b\xab\x36\x1e\x2d\x4f\x9d\x24\x8f\x26\x28\x03\xa5\xfa\xd9\x9d\xec\xfd\xe3\xd1\x6f\xbe\x32\xfc\x9c\x1d\x26\x76\x8c\x1e\x05\x66\xda\xf1\x86\xc1\x6c\x48\x5d\x08\x9f\x18\xdc\x55\xb7\x9f\x15\xb8\x4d\x9f\xee\x8d\xcc\x11\x27\xc1\x3b\xbf\xd9\x16\xf0\x9d\x3d\x9a\x0e\xa2\x7d\xa9\x5a\xe9\x08\x9f\xd3\x44\x27\x08\xa3\x3f\x3c\x0f\x58\x00\x4e\x28\xf4\x78\x1c\x02\xba\xb0\x8a\x13\xba\x3a\x1a\x39\x59\xa6\x59\x5f\x01\x20\xba\xa9\x03\x01\xe9\xe1\x21\x93\x30\xd2\x02\x03\x2c\x71\xa3\x99\x3d\x00\x70\x22\x87\x3c\x9a\x3d\x02\x54\x2e\x35\x2e\x5c\xbc\xd4\x9a\x4d\xeb\x1b\x81\x6b\xd1\x03\x64\x7d\x0b\xd7\x18\xb1\x65\xcd\x28\x59\xc5\xe5\x60\x6e\x23\x2e\xac\xd9\x63\x71\xaf\x27\x88\x2c\x0d\xea\x5b\x87\x0b\xe7\xd7\x66\x63\xe3\x7c\x3a\xef\xd7\xb9\x30\xb2\xc6\x4d\x55\x58\xd4\xaf\x4a\x05\x90\x79\x3e\xd3\xb9\x4e\x82\x39\xbd\xcf\x82\x53\x9e\x4d\xcf\x82\x5b\x0e\xdf\x12\xb7\x2c\xbf\x94\xed\x3d\x8f\x63\xf6\x6b\xbc\xbe\x62\x09\x08\x89\x1c\xc4\x81\xc8\x39\xf7\x89\x2c\x01\x06\x40\x0e\xa8\x70\x0a\x2d\xab\xac\x41\xb1\x3e\x23\xc1\x09\xb5\x54\x70\x7e\x42\x85\x6c\x14\x0e\xf5\x62\xf3\xa3\x30\x05\x30\x9a\x01\xc2\x12\x65\x86\x5a\x53\x58\xd8\x4a\xa8\x11\x28\x98\x71\xa6\x66\x8e\x93\xc2\x6c\x73\xa5\xfe\xb7\x23\x07\x24\x6a\x70\x91\x80\xd7\x2d\x58\xb7\xb0\x6b\x0d\x61\xf0\x80\x8b\x44\xf7\x00\xcd\xc0\xfa\x3c\x72\x45\x62\x53\xab\x8f\xb9\xc4\xb9\x45\xb5\xbf\x6c\xba\x71\x41\x53\x5f\x01\xaa\x41\x38\xd7\xaa\x8e\x9b\x53\xca\x99\x1d\xf2\x2b\x76\x63\x0b\xb3\x39\x0e\x34\x56\x55\xfe\x2b\xdb\xf3\x79\x50\xcb\xa0\x0d\xe7\x9b\xeb\xc5\x95\x33\x4c\x54\x44\xe6\x57\xfe\x13\x44\x1a\xf6\x1e\x6c\xd9\x26\x5b\xc0\x58\xf7\xe8\x4d\x6c\x2b\x5f\x56\xe1\x58\x7f\x1b\x5c\xaf\x25\xca\xfa\x6f\xa3\x71\xbd\x98\x1c\x32\x55\x31\xf9\x5c\x81\x41\x36\x6b\xde\x4b\xd4\xd9\x25\x9b\x58\xe0\x83\xb5\xa5\xed\x61\xae\xa9\x05\x86\x8c\x48\xb0\xc2\x51\xad\x3f\x97\x3d\x37\x8a\xd9\xda\xbf\xec\xea\x70\x2d\x64\x65\xb2\x23\x5d\xc8\xfa\xa1\x47\xf7\xef\x38\x8e\x83\xec\x79\x91\xd0\x28\x22\xdc\x85\x59\xbd\x31\xed\x56\xdb\x54\x79\x13\xca\x05\xc4\xfb\x9b\xb8\xb1\xd6\x82\xec\xcf\xf9\x6e\x13\xe5\xd9\xa7\x39\x37\x57\x64\x5b\x2b\x3b\xec\x34\x51\x5a\x41\x4b\x4d\xb4\x55\x6c\x0b\x0b\x23\xac\xa2\x41\xa3\x59\x55\x20\x33\x8b\xe3\xb3\x58\x90\x32\xf7\x8a\x1f\xb3\xb6\x2b\x8f\xb7\x2b\xd8\x38\xe7\xc7\x51\x8f\xf2\xb0\x81\xd2\x3b\xb7\x8d\x5f\x26\x77\xdf\x35\xad\x42\x35\xf2\xd9\x2d\x53\xd6\xb6\x20\xfd\xe8\x8b\xc9\xf5\xbf\x1c\x3f\xfc\xeb\xf1\xc3\x3b\xdf\x43\x2d\xc8\xca\x61\xd4\x2a\xa8\x96\xb1\x7b\x45\x57\x22\xaf\x1b\x77\x1f\xdf\x3a\x98\x1c\x7c\x5c\x70\xa1\x8f\x23\x9f\xb0\x02\xd5\x64\x6f\x3f\xbd\x77\xb5\x40\xa5\x0a\x20\x17\xd0\x36\xe6\x91\xc2\xc0\x4a\xbd\x01\xe7\x1a\xa9\xe8\x72\x4d\x9b\x5b\xc2\x19\x8d\x9c\xd7\x4c\x69\xf5\x63\xb2\x6b\xae\x4f\x85\x5b\x54\xb3\xbc\x76\x3e\x1c\x72\x6b\x46\xb1\xa4\xbd\x5d\x47\x0c\x7d\x9f\x08\xd1\x40\x99\x21\xaf\x5e\x9f\xbc\x77\x03\x95\x00\x02\x27\x82\xa4\xb2\x4f\x38\x29\x1d\x57\xad\xb2\x30\x71\x9b\x1b\x7e\x21\xb8\x4b\x31\x92\x51\x68\x1d\x8b\xcd\x92\x93\x2d\xd7\x82\xf2\x92\xd3\x84\x55\x7d\x3f\xa3\x26\xb6\x2a\xc6\x4e\x3f\xf9\x67\xba\x7f\xb7\xde\xd8\x8f\x1b\x8d\x35\x49\xb6\xf0\x82\xad\xf6\x04\xaa\x14\xb7\xc5\x73\x28\xcf\xaf\xa5\x4e\x7d\x35\x75\x5b\xe1\x69\xf5\xf0\xbf\xf9\xd5\xb5\xa3\xfb\x77\x8e\x3f\x7e\x3b\xfd\xec\xd6\xf1\x27\x4f\x65\x6c\xea\xdd\x15\xb6\xbe\xc8\x27\x19\x97\x1a\x97\xcc\xb3\xe0\x53\x7b\x56\x29\xc5\x69\x20\xc0\x83\x8b\x97\xf2\xd1\x5e\xcc\xa1\xa1\xa7\xa2\x80\xec\xe8\x83\x3c\xfb\xd9\x99\x03\xbb\xec\x45\x51\x46\xf6\xc2\x0b\xcd\x32\x1c\x84\x04\xdd\xca\xf2\xe6\x30\xb8\xa8\x17\x5e\xb2\x5d\x43\x03\xe1\x24\x43\x31\x68\xa8\x85\x8b\x93\xe8\x7a\xe5\x2a\x50\x49\x33\xb6\xfb\x46\xb0\x88\xa3\xab\x0c\x53\x03\xb2\xf9\x09\xe5\x54\x49\xf9\x7f\xe8\xd4\x2e\xbd\x3a\xac\x26\x87\x52\x2b\xb0\xae\x56\xac\x6d\xb1\xd9\x97\xa8\x62\x10\x55\x05\xfd\x3f\x86\x9e\x9e\x18\x32\xde\x83\x65\x63\xa8\x55\x8b\xa2\x27\x8a\x2c\xd3\xde\x3f\x6d\x64\x9d\x84\xd5\x53\x5e\x4f\xbf\x85\x30\x34\xff\xb3\x54\xae\x93\x9c\xe9\x70\x85\xde\x34\x5a\xb5\x6b\xed\x35\x5b\x98\xeb\x33\x13\x3c\x4b\x1c\xc2\x49\xc2\xa8\xaf\xdf\x45\xaf\x6e\x45\x81\x13\x27\x24\xda\x09\x99\x72\x04\x96\xa2\x1d\xf7\x7a\xd4\x27\x41\xec\x0f\x43\x12\x49\x47\x24\x9c\xe0\x40\x0c\x08\x91\x21\x73\xf4\x37\xca\xb5\xa7\x3d\xb0\x5b\x1c\x1a\x5b\xba\xff\xa8\xc5\x3e\xe3\x79\x46\xfe\x73\xcf\x9d\x4c\x54\xd0\x69\x3b\x99\x2a\xa1\x1b\xa8\x79\xa8\x15\xc3\xc0\xa0\x21\x24\x42\xe0\x3e\x71\x08\xe7\x31\x6f\x20\xbb\xfd\xaa\xbb\xaf\x37\x0f\x27\x87\x7b\x45\x58\x98\xbe\x60\x1d\xc0\x97\x49\x35\x85\xc0\x9f\x17\x1a\x96\x3f\xf4\x4e\x9f\xec\xe8\xd0\xff\xf2\x76\x02\xc0\xe7\xb7\x7d\xcf\x18\xc4\x45\xfb\x34\xeb\xc0\x7c\xf2\x69\x56\x01\xae\xdd\x57\xae\xa9\x44\x39\xe9\xa9\xe2\x5c\xcd\x3a\x86\xb4\x06\xfc\xf9\x1b\x8a\x86\xb2\x41\x0b\x18\x15\xb2\xc2\xab\xe6\x7d\x85\xca\xd3\xea\xdb\x49\xe2\xa4\xd1\xbc\x54\x61\x1c\xc5\x11\x69\x34\x47\x06\x1f\xe3\x96\xf9\xaf\x05\x73\xf9\xb6\x95\x2d\x6d\xd8\x90\xa9\x45\xe3\xf5\x95\xce\xea\xb4\xbb\xbd\x02\xff\x0d\x00\x00\xff\xff\xd7\xe8\x34\x8e\x6f\x2b\x00\x00")

func vueTplBytes() ([]byte, error) {
	return bindataRead(
		_vueTpl,
		"vue.tpl",
	)
}

func vueTpl() (*asset, error) {
	bytes, err := vueTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vue.tpl", size: 11119, mode: os.FileMode(420), modTime: time.Unix(1541647962, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"controllers.tpl": controllersTpl,
	"js.tpl": jsTpl,
	"models.tpl": modelsTpl,
	"sql.tpl": sqlTpl,
	"vue.tpl": vueTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"controllers.tpl": &bintree{controllersTpl, map[string]*bintree{}},
	"js.tpl": &bintree{jsTpl, map[string]*bintree{}},
	"models.tpl": &bintree{modelsTpl, map[string]*bintree{}},
	"sql.tpl": &bintree{sqlTpl, map[string]*bintree{}},
	"vue.tpl": &bintree{vueTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

