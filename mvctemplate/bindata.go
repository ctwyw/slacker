// Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// component.tpl
// controllers.tpl
// dao.tpl
// js.tpl
// markdown.tpl
// models.tpl
// service.tpl
// vue.tpl
package mvctemplate

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _componentTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xcb\x6a\xdc\x4a\x10\xdd\xeb\x2b\x8a\xe6\x2e\x34\x17\x5b\xe3\xb5\x34\x1a\x4c\xb2\x4c\x30\x81\x2c\x8d\x17\x6d\xa9\x64\x35\xe9\x17\xdd\xa5\x49\x86\x41\x90\x6d\xc8\x97\x64\x95\x65\xfe\x28\x24\x7f\x11\xba\xf5\x18\x8d\x3d\xc6\x78\x23\x75\x55\x9f\x3a\xf5\x3a\xbd\x21\x54\x56\x72\xc2\x6d\x02\xb0\x41\x79\xe9\x51\x62\x45\x09\x00\xc0\xee\x52\x99\x1a\x65\x46\x4e\xa8\x92\x09\x6d\x3b\x62\xf1\xa2\x11\x92\xd0\xf1\x7b\x89\xd1\x74\xa8\x0c\x0d\x47\x2b\x79\x85\xad\x91\x35\xba\x92\xfd\xf9\xf9\xeb\xef\xd7\x6f\xbf\xbf\xff\x18\xa2\xae\x1b\x53\x75\xbe\x64\x0f\x48\x52\xf8\x91\x2a\x97\x86\xd7\x42\x3f\x94\x6c\x3c\x8c\xd8\xaa\xe5\xfa\x01\x4b\xd6\x72\x5d\x4b\xfc\x18\x8b\x1a\xae\x2a\x89\xfc\x98\x3b\xaf\x85\x0f\x46\x5d\xb2\xe9\x14\x60\xdb\x78\x19\xfa\x31\x96\x84\xd1\xd1\x0c\x1d\x35\xc6\x95\x4c\x10\x2a\x10\x1a\x8e\x65\x00\xe4\x9f\x70\x3f\xdc\x64\x87\x43\xf6\xc1\x09\xc5\xdd\xfe\x1d\xee\xdf\x1a\xd9\x29\x9d\x0d\xbf\x1b\xae\xb0\xef\xe7\x10\xc9\xef\x51\xbe\x36\x68\xc7\x65\x87\xaf\x0a\xda\x6e\xd6\x73\x23\x71\x4d\xeb\x79\x4f\xdb\x64\xb3\x3e\x6e\x30\xd9\xf8\xca\x09\x4b\x01\x24\x94\x35\x8e\xe0\x7f\xe0\x1e\xb8\x15\xd0\x38\xa3\x80\x5d\xaf\xb9\x15\xeb\xc3\x21\x1b\xf9\x8b\x04\x00\xbf\x44\x64\x8d\x0d\xef\x24\xc1\x21\xe6\xac\x39\xf1\x74\x35\x1a\x61\xc5\xd4\x39\x3d\x9b\x00\xe3\xb6\x72\x68\xb8\xf4\x78\x31\xfb\xa3\x4a\x72\x60\xec\xe8\x0a\x53\xce\xe1\xf6\x6e\x74\xf4\x45\x3c\xf4\x03\xc0\x3a\x63\x7d\x0e\x07\x88\x63\xc9\xe1\xa6\x53\xf7\xe8\x2e\x60\x5a\x66\x0e\x6f\x8c\x91\xc8\xf5\x14\xa0\x90\x5a\x53\x87\x90\x91\x6f\xa9\x90\x74\xb7\x5a\xd4\x28\x1a\x48\x69\x6f\xd1\x34\xb0\x83\xb2\x04\xa6\x23\x39\x5b\x62\x00\xa8\x15\x3e\xfb\x0f\x95\xa0\x74\xd4\xf8\x05\xec\x56\xc5\x33\x88\x41\x97\x8f\x20\x3d\xa0\xf4\xf8\x22\xeb\xd5\xcb\xac\x4b\x48\x3f\x0d\x6c\x1a\xe5\xf8\x70\xd2\x65\xfd\x91\x65\x5c\x06\x94\x40\xae\xc3\x23\x03\xb7\x62\x91\x30\x7b\x1f\x83\x97\x1e\x6a\x51\xa7\xce\x5b\x28\xb7\x27\xd5\x4f\xbc\xc2\x13\x94\xe0\xbc\xcd\x82\x1e\xe2\x67\xd9\x42\x7f\x42\x56\x71\xaa\xda\x14\x9d\x8b\x6c\xfd\xd3\x44\xe9\xea\xb9\x3c\x73\xfd\x51\x4d\xa7\x29\x8a\xc7\x63\x10\x5a\x9c\x9b\xc1\x50\xeb\xed\x5d\x71\xea\x8f\xc3\x0f\x93\x09\x46\x14\x59\x71\x2a\x90\xd9\x0f\x5b\xb8\x3a\x23\x8d\x79\xea\x67\x36\xb3\x54\xf2\xe7\xd0\xfe\x51\x96\xa3\x9e\x9b\x4e\x57\xe1\xdd\x3e\x2d\x78\x68\xa3\x38\x47\xa5\x4c\xa7\x09\xeb\x45\xcc\x93\x88\x80\xef\x8b\x64\xb3\x9e\x5e\x7c\xf2\x2f\x00\x00\xff\xff\x50\xb4\x2e\x04\xca\x05\x00\x00")

func componentTplBytes() ([]byte, error) {
	return bindataRead(
		_componentTpl,
		"component.tpl",
	)
}

func componentTpl() (*asset, error) {
	bytes, err := componentTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "component.tpl", size: 1482, mode: os.FileMode(420), modTime: time.Unix(1569292443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\xdf\x6f\xdb\xb6\x13\x7f\x16\xff\x8a\xfb\xea\xe1\x0b\x29\xd0\xa4\x74\x28\xfa\xe0\xc2\x0f\x8d\x13\xb4\xdd\x82\xd4\x5b\x92\xa7\xa2\x18\x18\xf2\xec\x10\x91\x28\x8f\xa4\xd2\x19\x9a\xfe\xf7\x81\x94\xd2\x5a\xb6\x28\x7b\x75\xb0\xf8\x49\xb1\x79\x77\x9f\x1f\x77\x47\x25\xcb\xde\xa3\x44\x45\x0d\x72\xb8\x5b\x83\xce\x29\x7b\x40\x05\x24\xcb\x96\x42\x82\x2a\x2b\x83\x8a\x64\x27\x84\xae\x44\xfa\xfe\xe2\x26\x0a\xb3\xba\x4e\x2f\xcb\xaf\xa8\xae\x68\x81\x4d\x93\x4d\x04\x0f\x13\x56\x4a\xa3\xca\x3c\x47\xa5\xd3\x1b\xfa\x80\x75\x9d\xce\x68\x81\xf9\x8c\x6a\x6c\xcf\xc5\xde\x0c\xfd\xe8\x4b\xa1\x8d\x2f\x7a\xfe\xe9\x7a\x5f\xf8\x4c\x21\x35\xde\xf2\xf3\xdb\x43\x08\xdc\xae\xf8\x58\x8e\x77\x37\xb3\x0f\x07\x64\x99\x53\xc3\xee\x7d\x49\xce\x2f\x2e\x2f\x6e\x2e\x0e\xc8\x72\x8e\x39\x0e\x62\x81\x11\x30\xfd\x14\x67\x16\xc8\x8f\xa0\x19\x48\xe3\x85\xe3\x95\x77\x20\x89\x57\x5f\x20\x27\x19\x21\x2b\xca\x1e\xe8\x12\x61\x23\x8e\x10\x51\xac\x4a\x65\x22\x12\x40\x58\xd7\xe1\xb2\xd4\x8a\x65\x45\xc9\x31\xd7\xe1\xdf\x90\x7e\x74\xbf\x5e\x8a\x3b\x45\xd5\xba\x69\x2c\x84\xae\x7a\x2f\x00\x95\x62\x25\xc7\x81\x88\x90\x04\xe1\x52\x98\xfb\xea\x2e\x65\x65\x61\x5b\xff\xa7\x65\x29\x05\xb3\x4f\xf6\x37\x89\x26\xbb\x37\x66\x65\x9f\xb5\x51\xac\x94\x8f\x21\x89\x09\x59\x54\x92\x01\xc0\x70\xd3\x46\x0c\x4e\x96\x42\xa6\xb3\x52\x1a\xfc\xcb\xc4\x00\x35\x01\x00\x78\xa4\x0a\xfa\x22\x6d\xfd\x99\xee\xe6\x22\x41\xb9\x58\x68\x34\xc9\x1f\x93\x69\x07\x20\x9d\x53\xa5\xf1\x56\x48\x13\xb1\xf4\x1c\x17\xb4\xca\xcd\x6f\x15\xaa\x75\x14\xb6\x67\xc3\x24\x3c\x0d\xe3\x04\x5e\x9d\x26\xf0\xe6\x75\x4c\xc0\x55\xcf\x45\x21\x0e\x4c\xe3\x8e\x76\x59\x5e\x9d\x26\x2e\x47\xc0\xd2\xeb\xfb\xb2\xca\xf9\x99\x90\xbc\x3d\xf7\xff\x3e\xfa\xd8\x96\xe1\xd4\xd0\xc4\x94\x86\xe6\x09\x2a\x35\x99\xc2\x35\xaa\x47\xc1\xd0\x33\xdf\x51\xc7\xae\x05\xb7\x9d\x2f\x08\x82\x5f\xae\x3f\x5d\x45\x2c\x01\xab\xe7\x87\x9a\x04\x41\x68\x2b\x84\x93\xae\x92\xfd\xc2\x55\x0b\x27\xd0\x56\x25\x41\x63\x2b\xc7\xa4\xf9\xe6\xd2\xf0\x62\x1a\x73\xc9\xe6\x3e\xc4\x9b\x21\x51\x6c\xac\x93\x02\x04\x4f\x00\x95\x82\xc9\x14\x7a\x9a\x7f\x74\x92\xcf\xa9\xa2\x45\x14\x0a\xfe\x5d\xe4\x40\x2c\x5c\xc0\xff\xa6\x20\x45\x0e\x96\xee\x13\x7f\x29\x9c\xa0\xb6\x8d\xd3\x2b\xfc\x1a\x3d\x3d\x9f\x51\xfe\x3b\xfe\x59\xa1\x36\x8e\xb5\xd5\x4c\xa1\xa9\x94\x24\x41\x03\x24\xb0\x60\x2c\xf2\xb9\x12\x05\x55\xeb\x5f\x71\x3d\x2b\xf3\xaa\x90\xdb\x54\xa6\x82\x5b\xc8\xb6\xf8\x77\xcb\x3c\xba\xb5\x0c\x61\xd3\x1d\xe7\x45\x5f\x75\xdf\x42\x7e\x06\xd9\x9d\xb6\x8b\x27\x69\x37\x2d\x70\x78\x5a\x7c\x6f\xfb\x4a\x82\xfb\xfc\x80\x9e\xd0\x7d\xbe\xa9\xea\xbe\xe9\x6a\x3f\x29\xe5\x25\xdb\x75\xc3\x98\x52\xbe\xad\x38\x24\x54\xf0\x2c\x4d\x75\x4c\x4f\x1d\xb1\xc8\xc6\x2c\xdb\x9a\xfc\xb7\xcf\x39\x06\x24\xd8\x05\xb7\x6f\x1e\x60\x0a\x82\x93\xa0\x3f\x0f\x5e\xa7\x76\xf7\xd6\x16\xde\x8d\xb9\xf0\x5c\xc8\x83\x6e\xbf\xb4\xd7\x81\x35\xba\x72\xac\x17\x02\x73\xae\x61\x0a\x05\x7d\xc0\xa8\xa0\xab\xcf\xda\x28\x21\x97\x5f\x84\x34\xa8\x16\x94\x61\xdd\xc4\xe3\x1e\x6f\x26\xda\x71\xf8\xc8\x3d\xd7\x37\xca\xa7\xb1\xe0\x49\x0f\xc4\x4e\xd9\x0d\x9f\x7c\x6f\x3c\xbe\xfd\x75\xb4\x57\x70\xfc\xb6\xef\xab\xe0\x65\x20\xb8\xaf\x45\xb3\x93\x8e\xfd\xe8\x4b\xdf\x8e\x04\xae\x55\x75\x47\x5d\xc8\xa5\xfe\x59\x48\xf3\xe6\xb5\x8e\x58\xea\x2e\xc5\x77\x4a\xd1\x75\xcb\x3e\x6e\x8f\x4e\x81\xae\x56\x28\x79\x24\xb8\x4e\xf6\x45\x7d\xfe\x12\xc6\x71\x9a\xa6\x71\x47\x71\x63\xf1\x8e\xe3\x14\x7b\x3c\x1e\x7b\x43\x1e\x22\xf9\xdf\x8d\xc3\xb1\x1b\xef\x25\xed\xf0\x4f\x9f\x4e\x60\x6b\xfe\xf6\x99\x73\xf0\xe5\xd8\xb9\xf3\x6f\x6f\x25\x78\xd6\x6b\xe9\x25\x4c\x18\xf6\xc0\xab\x9b\x1d\x89\x81\x4d\x13\x93\xc6\xfe\x13\xf6\x4f\x00\x00\x00\xff\xff\x2e\x18\xbb\xc9\x15\x10\x00\x00")

func controllersTplBytes() ([]byte, error) {
	return bindataRead(
		_controllersTpl,
		"controllers.tpl",
	)
}

func controllersTpl() (*asset, error) {
	bytes, err := controllersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controllers.tpl", size: 4117, mode: os.FileMode(420), modTime: time.Unix(1575619965, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _daoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\x51\x6f\xfa\x36\x14\xc5\x9f\xf1\xa7\xb8\xcb\x03\x72\xaa\xc8\xec\x2f\x4d\x7b\xa8\x84\x26\x95\xb6\x53\x35\x5a\x95\xd2\x6a\x0f\x55\x35\x99\xf8\x42\x2d\x92\x98\xd9\x4e\x29\xf2\xfc\xdd\x27\x3b\x24\x83\x42\x05\x7b\x0a\x21\xd7\xf7\x9e\xf3\xf3\xb1\x07\x83\xdf\xb1\x42\xcd\x2d\x0a\x98\x6d\xc0\x14\x3c\x5f\xa2\x26\x2b\x9e\x2f\xf9\x02\x41\x70\x45\x88\x2c\x57\x4a\x5b\xa0\x40\x12\xe7\x92\x85\x32\x3a\x1f\x94\x4a\x60\x61\x92\x7f\x80\xdd\xc5\xaf\x63\x39\xd3\x5c\x6f\xbc\x1f\x38\xc7\x1e\x78\x89\xde\x27\x40\x52\x42\xe6\x75\x95\x03\x15\x70\x71\xcd\x55\x0a\x63\x69\xac\x73\x6c\xc4\x4b\x2c\x46\xdc\x60\x53\x49\xd7\xef\xa8\x11\x80\x31\x16\xca\xe9\xc5\x42\xe9\x92\x5d\x5f\xa5\xdd\x0f\xa0\xaf\x6f\xce\xb1\xb1\x5a\xa3\x6e\xd6\xb0\xc3\x36\x99\xac\x6c\x86\x5a\x2b\x9d\x82\x23\x00\x00\x1f\x5c\x83\xe0\x96\xc3\xb0\xe4\x4b\x3c\xab\xc7\xcf\x69\xb7\xd2\x2a\xcb\x0b\x90\x95\x25\x3d\xd4\x1a\x2e\x87\x82\x45\x3d\xf7\xc1\x3b\x3d\xd9\xca\xf9\x94\x4d\x73\xb5\x42\xd3\xf8\x63\x8c\xa5\x6c\xa4\xea\xca\xd2\x7e\x6c\x9d\xb2\x5b\x59\x09\xda\x0f\x0a\x53\x76\x13\x84\xc7\xd9\x1a\x6d\xad\xab\x28\x3c\x8b\x85\xc1\x14\xf1\x84\x38\xc7\xee\xd1\xbe\x2b\xf1\xcc\x97\xe8\xfd\x57\xb8\x23\x8d\xdc\xe2\x11\xbc\x11\xc1\xc5\x49\xc1\x29\x44\x78\x8e\x40\x6f\x4f\x47\xe3\xba\xe9\x4e\x77\xc5\x1e\x28\x78\x59\x89\xe3\x0a\xf6\x67\xc3\xb9\x52\xc0\x91\xa0\x64\x30\x80\xbf\xb2\x66\x0b\x40\x30\x31\x8b\x01\x13\x37\x9f\x98\xd3\xa4\x8e\x23\xa1\x4b\x1d\x18\xb4\xed\x9b\x98\x4e\xc6\xde\x43\x93\x2e\xe7\xd8\xa3\x96\x25\xd7\x9b\x3f\x70\x33\x52\x45\x5d\x56\xac\x79\x34\x0b\x87\x97\xa7\x2a\x92\x6c\x5f\x77\x0a\xbb\x98\x5a\x4e\x53\xfe\x81\xb4\xff\xa5\xf2\x3b\x60\x8f\xdc\xe6\xef\x47\x78\x49\x11\x72\xf7\xeb\x2f\xd9\xd6\x5e\xc9\x57\xaf\xc6\x6a\x59\x2d\xde\x64\x65\x51\xcf\x79\x8e\x6e\x87\x12\x04\x29\xbd\x2e\xee\x27\xf9\x86\xea\x50\xc9\x8e\x7a\xde\xaf\x1d\x4a\x01\xa4\xb7\x1f\x86\xe6\x08\x34\x59\x68\x36\xdd\xd0\x46\xea\x8e\xd5\xff\xf2\x7a\x8d\x05\xda\x98\xd8\xf0\xa7\x9c\x03\xbb\x33\x2f\x06\xf5\x33\x9f\x15\x61\xcf\xbe\x62\x09\xf9\x3e\x14\x7d\xb5\x09\xcf\xff\x99\x66\x70\x40\x3a\xab\x61\x66\xc5\x4b\x3c\x66\x14\xbc\x87\x21\x34\x90\x0d\x7b\x56\xb1\x3b\x3d\x73\x65\x0a\xd0\x5e\x12\x2d\xa2\x3f\x43\xea\x68\x72\x64\x6d\x17\x29\xf0\x7e\xf8\x5b\x92\x9d\x3b\x83\xdd\x4a\x6d\xec\xde\x09\x6c\xb7\x05\xb6\x37\xc4\x3e\xc6\x43\x28\x77\xe6\xe6\x53\x1a\x4b\xeb\xed\xa8\xad\xdf\x14\x66\x4a\x15\xe0\x48\x6f\x3a\x19\x07\x0f\x89\xc1\x02\x73\x0b\x3f\x60\xae\x55\xb9\x73\xba\xba\xb3\xf4\xad\xa9\xe0\x09\x0a\x59\x4a\x0b\x3f\x12\x12\x33\x89\x61\x66\x1c\xb1\x03\x49\xcc\xd8\xa4\x46\xbd\x79\x52\x6b\x3a\x9d\x8c\xb3\x56\x52\xb8\x34\x79\x45\xfb\x71\x51\x4a\x7a\x72\x1e\xcc\xc1\x4f\x43\xa8\x64\x01\xfd\x7e\xfb\x66\xfe\x2e\x02\x84\x07\xf5\xa4\xd6\x26\x48\x6f\x59\x58\x5d\x23\xe9\xf9\x8e\x4d\x6c\xd4\x5c\x9f\x58\x09\xef\xff\x0d\x00\x00\xff\xff\xfb\x9a\x70\x7d\xf3\x06\x00\x00")

func daoTplBytes() ([]byte, error) {
	return bindataRead(
		_daoTpl,
		"dao.tpl",
	)
}

func daoTpl() (*asset, error) {
	bytes, err := daoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dao.tpl", size: 1779, mode: os.FileMode(420), modTime: time.Unix(1577775832, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\x16\x84\x0f\xf2\xf7\x25\xd2\xdd\x81\xd0\x36\x3f\x2d\x0a\x04\x45\xd0\x26\xed\x31\x5e\x4b\xeb\x5a\xb0\x44\xaa\xe4\x2a\x6e\x20\xe8\xdd\x0b\x2e\x65\xb8\xa9\x65\x01\xc9\x25\x02\xb9\xb3\x33\xc3\xd9\x90\x4e\x53\x80\x4f\xa4\xc9\x22\x53\x01\xab\x67\x70\x15\xe6\x5b\xb2\x51\x59\x37\xc6\x32\x6c\x98\x1b\x58\x5b\x53\x83\x4a\x52\xbf\x50\x17\xd1\xbe\xe6\xd8\x58\x1a\x8a\xef\x53\x59\xfd\x55\xfd\x0f\xd0\x41\x6e\xcc\xb6\x3c\x60\x5a\x2e\x2b\x97\x86\x4d\x0f\xa5\xdf\x02\x5d\xb7\x3a\xe7\xd2\x68\xb8\xc7\x2d\xc5\x65\x31\x87\x2e\x02\xb0\xc4\xad\xd5\xe2\x20\xf9\x49\x1c\x2f\x53\x6c\xca\xb4\xeb\x92\x5b\xb3\x23\xfb\x05\x6b\xea\xfb\x74\xd6\x95\x45\xbf\x9c\x5f\x44\xfd\x31\xdb\x6d\xe9\x38\xfe\xd5\x92\x7d\x1e\x27\x54\x23\x84\xea\x4c\xa0\x00\x0d\x5a\xac\xdd\x02\xa4\x3f\x02\xe8\xc7\x35\xae\x2c\x21\x53\xbc\x32\xc5\x88\x48\x63\xdc\x49\x15\xe9\x18\xa5\x7c\x68\x0a\x4f\x59\x16\x03\xe8\x98\xb6\x9d\x0c\x63\x8a\xfb\x0e\x39\xdf\x4c\x51\x4b\xfd\x8d\xe4\xd7\x54\x11\x8f\xcf\xaf\x08\xa5\x57\x8f\xf0\xd2\xfb\x19\x78\x4f\x4c\x72\x82\x7a\xf9\xca\x61\x8a\x5a\x88\x48\x90\xaf\x4f\x69\xc8\xe7\x2d\xba\xc3\xd8\xa7\x85\x4f\x4c\xfe\x6d\xb2\x9f\xe5\xa2\xc6\xeb\xb2\xa2\x20\xf5\x84\x16\xd6\xc6\xd6\x90\x81\xa6\x1d\x7c\x34\xb6\xbe\x46\xc6\x78\x7e\x11\x81\x14\x12\x6c\x1a\xd2\x45\xac\x7c\x8f\x3a\x03\xff\x09\x7f\x13\x8d\x35\x09\xee\xe8\x02\x04\xc3\xe1\x55\x38\xf6\xed\x69\xf7\xbe\x37\x84\x05\x59\xb7\x18\x96\x00\xea\xca\x68\x26\xcd\xe7\xf7\xcf\x0d\xa9\x05\xa8\xba\xad\xb8\x6c\xd0\x72\xea\xfb\xce\x0b\x64\x54\x82\xed\x4f\x1f\xf3\x46\xd6\xf1\xe1\x88\xad\xad\x20\x0b\x41\x59\x93\x93\x73\x09\xe9\xa7\xe4\xfb\xc3\xcd\xe3\x87\xbb\xbb\xc7\x4b\x74\xf4\xf0\xf5\x16\xfe\x17\x44\xb8\xbd\x81\xf2\x1f\xf3\xef\x30\xf7\xcd\x8f\x6c\xb6\xa4\x33\x35\x34\xc8\x33\x98\x38\x46\xa6\x44\x2a\x3e\x93\xca\xe4\xe8\xbd\x24\x1b\x4b\x6b\xc8\xbc\x83\x51\xab\x3f\x68\xf5\xcd\xe4\x5b\xda\xbb\xcd\x8d\x76\x0c\x42\x03\xd9\xf0\x98\xfa\xa7\xeb\xde\xef\x84\xb1\x54\xc4\xb0\x31\x8e\x21\x03\xa5\xfc\x46\xb9\x86\x78\xea\x5c\x99\x07\xce\xf7\x89\x87\xce\xe5\xce\x2d\xd2\x74\xd6\x1d\x7c\x1a\xc7\xfd\xd2\xd3\xf5\x40\x95\xa3\x97\xf0\x09\xfa\xc4\x52\x53\x61\x4e\xb1\x92\x1f\x8b\x33\x50\x3b\xa7\xc4\x68\x7f\xf8\xdf\x58\xce\x3a\x11\x90\x6c\x77\xb4\x72\x72\xe6\xd4\xb9\xcd\xcb\x4c\x67\x9d\x7c\xbd\x91\x3e\xfa\x13\x00\x00\xff\xff\x20\xa0\x60\x3e\xaa\x06\x00\x00")

func jsTplBytes() ([]byte, error) {
	return bindataRead(
		_jsTpl,
		"js.tpl",
	)
}

func jsTpl() (*asset, error) {
	bytes, err := jsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js.tpl", size: 1706, mode: os.FileMode(420), modTime: time.Unix(1576224034, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _markdownTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x52\xcd\x6e\xd3\x4c\x14\xdd\xcf\x53\x5c\xb9\xd5\xb7\x4a\xeb\xae\x2d\xd5\xdf\xa2\x0b\x36\x88\x15\x62\x01\x42\xaa\x89\xa7\x25\xd4\x3f\xc5\x76\x84\xa2\xc9\x48\xa1\x0a\x10\x14\x9a\x54\x22\x2d\x25\x25\x85\x40\x52\x75\x43\x1a\x24\x0a\x6d\x1c\xda\x97\xf1\x8c\x9d\xb7\x40\xf6\x38\x28\x81\x12\x58\x30\xab\xb9\x47\xe7\x9e\x73\xee\xcc\x95\xe5\x6b\xd8\xc2\x8e\xe6\x61\x1d\xee\x15\xc0\x35\xb4\xec\x06\x76\xd0\x1c\x10\xb2\x78\x43\x33\x31\xa5\x88\x7d\x7c\xc5\x7b\xa7\x6c\x67\x1b\x8a\xc0\x4a\xc3\xf0\x93\xcf\x0e\xab\x50\x84\xe8\xe4\x33\xdf\xaf\xa1\x85\xf1\x29\x2e\x5c\x75\x45\x84\x38\x9a\xb5\x8e\x61\x3e\x97\x99\xcf\xda\x86\xb2\xbc\xb8\x62\x1b\x79\xd3\x72\x29\x05\x42\x62\x28\x05\x84\x1d\x14\xc7\xe8\xcd\xc2\xe6\x54\xbd\x62\x9b\x26\xb6\x3c\x4a\x11\x21\xd8\xd2\x29\x45\x68\x6e\x0e\x1e\xb8\xb6\x15\x76\x06\xc1\x45\x15\xad\xae\xae\xc6\x15\x22\x33\x3d\x01\x40\xba\xc2\x57\x52\x52\xf0\x36\x76\xec\x5b\x9a\x91\xc7\x94\x66\x7e\x38\xd1\x58\x3c\xf1\xe3\xb5\x2e\xab\x7f\x88\x2e\x1b\xec\xe0\xf0\x17\xdf\x44\x3c\x6b\xeb\x58\x52\x96\x32\xa2\x32\xb1\xeb\x6a\xeb\x58\x52\x24\x7b\x43\x4a\x31\x5d\xf3\x34\x49\x11\xf4\x7f\x16\x55\x88\x89\xb8\xf1\x7d\x32\x34\xab\x1c\x30\x7f\x00\x48\x85\x4d\xdb\xf5\x92\x37\x03\x56\xe9\x83\xac\x6d\xe6\x64\x42\x16\xaf\xdb\x8f\xb0\x93\x7e\x77\xc2\x7f\x72\x2c\x7e\x3d\xb8\xec\xf1\xc6\x79\xdc\x97\x9f\xdd\x26\x2b\x39\x1d\xc4\x03\xbd\x78\xc6\x7a\xcd\xc9\xf6\xc4\x57\xf3\xb2\xf7\xff\x42\x41\x55\x21\xb8\xa8\xb2\xa3\x2d\x48\x5b\x88\x34\x7a\x53\x8a\x8e\x1e\x0b\xa9\xb0\x59\x16\xca\x92\xc2\x4a\x43\xfa\x87\x34\x62\xf4\x77\xa3\xd7\x1d\xa4\x82\x8e\x0d\xec\xe1\xdf\xb3\x21\x66\x47\xb5\xaf\xac\xbe\x17\x9c\x95\x78\xab\x8d\x54\x58\xc7\xde\xec\x61\x05\x9f\x75\x9a\x33\xf9\x48\x05\xfe\xb6\x1b\x9d\xbc\xe7\xad\x76\xe0\x7f\x09\xfc\xee\xc3\x3c\x76\x0a\xac\xbe\xc5\x77\xfb\x7c\xef\x9c\x0d\xeb\xa1\x5f\x66\x3b\x95\xcc\xc8\xdf\x8f\x7a\x9d\xff\xed\xb5\x35\x17\x7b\xcb\x4b\xff\x19\x39\x33\xe7\x2d\x2f\x21\x15\xa9\x20\x76\x0e\xa9\x30\xde\x37\x15\x08\x52\x61\x7a\xe7\xd2\xfa\xa7\xad\x4b\xd1\xf1\xde\x89\x32\x81\x3c\xdb\xd3\x8c\xb8\x13\x64\x99\x7d\x7b\xc9\x9e\x6f\x4f\x25\x3d\xab\x86\xcd\x32\x2f\xf9\xbc\xd5\xe6\xbb\xfd\x4c\xd8\x38\x0e\x06\x35\x56\x79\x3a\x6a\x9f\x4e\xaa\x08\xe1\x3b\x77\x53\x2c\x1e\x98\x8a\xa0\xdf\x03\x00\x00\xff\xff\x2c\x19\x42\x29\x60\x04\x00\x00")

func markdownTplBytes() ([]byte, error) {
	return bindataRead(
		_markdownTpl,
		"markdown.tpl",
	)
}

func markdownTpl() (*asset, error) {
	bytes, err := markdownTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "markdown.tpl", size: 1120, mode: os.FileMode(420), modTime: time.Unix(1563850859, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6f\xd3\x40\x10\xc5\xcf\x99\x4f\x31\x8a\x7a\xb0\xa5\xb2\x0b\x57\xa4\x70\x09\x12\x2a\x84\x96\xc8\xe5\x84\x38\x6c\x9c\xa9\xeb\x76\xff\x98\xdd\xb1\x4a\x34\xda\xef\x8e\xd6\x71\xa3\x96\x70\x40\xf6\xc1\x6f\xbc\x6f\x7e\xfb\x66\x57\xeb\x4f\xe4\x29\x1a\xa6\x3d\xee\x0e\x98\xac\x69\x1f\x29\x82\xd6\x6c\x76\x96\x50\x44\x5d\x1b\x47\x39\x83\xd6\xcd\x76\x03\x5a\x8b\xa8\x86\xf7\xcd\x76\x33\xd5\xca\xcf\x22\xf0\xcd\x07\xec\x7a\xbe\x1f\x77\xaa\x0d\x4e\x3f\xb8\xd0\xc7\xe0\x75\xfa\x65\x7f\x1f\x3d\xcf\x0b\x27\xd7\x3a\xd8\xd1\xf9\x34\x77\xdb\x6e\x66\x9d\x33\x0c\xa6\x7d\x34\xdd\xc4\xdd\x84\x27\x8a\x33\x1c\xda\xe0\x13\x57\xb0\x68\xd8\x30\xdd\x7c\x59\xbd\x9d\x3f\x3f\x92\x5d\xbd\x83\x1a\x10\xf8\x30\x4c\xb6\xb5\x71\x64\xd7\x26\xd1\xd1\x8a\x89\xe3\xd8\xb2\x00\x22\xa2\x48\x34\xbe\x23\xbc\xe8\x2f\x2f\xda\x60\xdf\xaf\xd4\x89\x8c\x22\xa5\x74\x66\x9f\xcb\xb7\x87\xe1\xa5\x32\xdd\x0b\x47\x70\x8e\x3c\xe7\x3c\x23\xc8\xef\x73\x86\x0c\x20\xd2\xdf\xa1\xba\x4a\xdf\x13\xc5\xdb\x32\xcd\x9c\xe1\x6e\xf4\x2d\x56\x22\xea\xca\xf7\xdc\x1b\x7b\x24\xff\x4d\xad\xf1\xab\x89\xe9\xde\xd8\xcf\xcd\xcd\x75\x55\x63\xf5\xe3\xe7\xee\xc0\x74\x89\x14\x63\x88\x35\x0a\x2c\xa6\xb8\xec\x86\x7f\xb8\x61\xf1\xaa\xbf\x12\x51\xdf\x4c\x4a\x4f\x21\xee\x8f\x71\xcf\x42\xae\x70\xb9\x84\x45\x24\x1e\xa3\xc7\x87\x14\xbc\x9a\xf9\x15\xbb\xe1\xf5\x6e\xeb\x1a\x32\x3c\x87\xfc\xef\x38\x53\xfc\x22\xaa\xba\x1c\x48\xef\x3b\x14\x3c\x11\x97\xa7\x5b\xb6\x2c\x73\xc3\xf2\x4e\x0f\xfe\x09\x00\x00\xff\xff\x53\xf9\x88\xe7\x9e\x02\x00\x00")

func modelsTplBytes() ([]byte, error) {
	return bindataRead(
		_modelsTpl,
		"models.tpl",
	)
}

func modelsTpl() (*asset, error) {
	bytes, err := modelsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "models.tpl", size: 670, mode: os.FileMode(420), modTime: time.Unix(1575619807, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xd1\x6e\xab\x46\x10\x7d\x66\xbf\x62\xca\x13\x5c\xa1\xf5\x4b\xd5\x87\x56\x56\x95\x3a\x69\x1b\x35\x6d\x23\x25\xb7\x7d\x88\xa2\xab\x31\x8c\xe3\x6d\x80\xa5\xb3\xeb\x38\x16\x97\x7f\xbf\x5a\x16\x62\x6c\x63\xc7\x79\xc2\x86\x99\x73\xce\xec\x39\xbb\x30\x99\xfc\x46\x25\x31\x5a\xca\x60\xbe\x01\x93\x63\xfa\x4c\x2c\x2a\x4c\x9f\xf1\x89\xc0\x10\xbf\xa8\x94\x84\x50\x45\xa5\xd9\x42\x24\x82\xf0\x49\xd9\xe5\x6a\x2e\x53\x5d\x4c\xfe\x2b\xb4\x62\x5d\x4e\xcc\xff\xf9\x6b\x28\x82\xb0\xae\xc3\x27\x6d\x38\x9d\x14\x3a\xa3\xdc\x84\x5f\x41\x5e\xb7\x8d\x37\x6a\xce\xc8\x9b\xa6\x99\xd4\xb5\xfc\x0b\x0b\x6a\x9a\x9d\x7a\x93\xea\x8a\x46\xca\x43\x11\xd4\xb5\x5a\x80\xbc\x36\x9f\x0d\xf1\x3d\xce\x73\x6a\x9a\x61\x27\x31\xa7\x3a\x3b\xda\x4b\x65\xd6\x34\x22\x16\x42\x2c\x56\x65\x0a\x91\x81\x4f\x77\x7e\xa6\xf8\x1e\x9f\xa9\xae\xe5\x0c\x0b\xca\x67\x68\xc8\xcb\x8a\x32\xb4\x08\x9f\xea\x5a\xde\xe8\x35\xb1\xbf\x29\x0f\xeb\x62\x62\xd6\x5c\x83\x00\x20\x66\xf8\x71\x0a\x46\x66\xa8\xe5\x09\xd4\x18\x44\xc0\x64\x57\x5c\x82\x6f\x12\xcd\x88\xac\x1b\x65\xec\x08\x80\x5e\x2c\x0c\xd9\x24\x57\x85\xb2\xb0\x52\xa5\xfd\xe1\xfb\xc4\x10\x72\xba\x84\xf7\xb5\x46\x0f\x8f\xef\x16\x25\xaa\xb4\x49\x3b\x54\x5c\x83\x08\x5e\x90\x61\xbd\x24\x26\x68\xbd\x91\xff\xba\xdf\x46\x04\xed\xbd\x29\x56\x15\x95\x59\xd4\xfe\x49\x7c\xc1\xdf\xad\xc0\x1b\xa7\x6f\x47\x6c\x1c\x77\x1e\xce\x74\x69\x51\x95\x06\xe4\xdd\x5a\xd9\x74\xe9\xa8\x21\x34\x16\x2d\x85\x4d\x03\x22\x38\x8e\xdd\x92\x47\xbe\xf6\xbb\xe9\xcf\x61\xb2\x37\xcd\x9d\x7b\x70\x49\x79\xec\x96\xb8\x37\xfd\x84\x54\xce\x88\xa3\xb0\xae\xe5\x2d\xab\x02\x79\xf3\x07\x6d\x66\x3a\x5f\x15\xa5\xf4\x17\x0f\x0b\x19\x99\x34\x6c\x31\x9d\x7d\x89\xd5\x16\xf3\x64\xc7\xed\x23\x66\xb5\x64\x52\xca\x81\xe3\x03\x84\xe3\xde\xcf\x98\xd0\x8e\xc5\x67\x77\xde\x8f\xc4\x73\x7c\xff\x04\x87\x00\xee\x79\x89\x05\xf5\x0b\xb1\x8b\x07\x53\x30\x96\x55\xf9\x64\xe4\xbd\x6e\x3b\xa3\x8f\x42\xc4\xa3\xb4\xb7\x68\xcc\x5a\x73\x76\x9c\x56\x5e\x95\x29\x6f\x2a\xdb\x57\x8e\x10\x9f\x06\x71\xc4\x6a\xd1\x39\x76\xb8\x54\xd7\xe6\xea\x55\x19\xfb\xf1\x79\xa0\x16\x41\xb0\xb3\xa3\xdd\x49\x24\x2f\x72\x26\xcc\x36\x2d\xa8\x08\x82\x66\x90\xc8\x21\x05\x7c\x05\x79\xb1\xb2\xba\x40\xab\x52\x6f\xfc\xe7\x2a\x43\x4b\x57\xaf\x15\x93\x31\x4a\x97\x6e\x57\xec\x1d\x2f\x67\x26\xe4\xbc\xa3\xc6\xf3\xbd\x1f\xb7\x0f\xa4\x2d\x80\xa3\x33\x1e\x4e\x27\x02\x80\x4e\xa5\x9f\xee\x4c\x41\x6e\xba\xf1\x89\x6e\xd1\xa6\xcb\x91\x7e\x95\x81\x3f\x32\x57\x2d\x03\x14\x58\x3d\xf8\x3c\x3f\xaa\xd2\x12\x2f\x30\xa5\xfa\xdd\x4d\xa3\x16\xf0\xe2\xf6\xaf\x7e\x76\x86\x78\xa8\x87\x70\x24\x7f\x83\x43\x24\x7c\xfc\xc9\xd5\xb7\x51\xa9\xba\xb2\x1e\xe1\x05\x73\x19\x79\x19\x2e\xa3\x0e\xbf\x2f\x7d\xab\x1d\xdd\x01\xfd\xc3\xb6\x2b\x38\x57\x08\x4c\xa1\x6f\x74\x7d\xcd\x5e\x38\x5d\x3a\xf7\xcc\xfa\x13\xab\x3d\xbf\x76\xec\x3a\xbe\xda\xdd\x3a\xc7\xe3\x2e\x5d\x52\x4e\xa3\x36\xf7\x36\x6d\x8d\xd8\xe1\x3b\xd1\x17\x43\x4b\x35\xe6\xdb\x01\x3d\x8c\xbf\xa3\x7f\xd9\xb8\xeb\xd9\xef\x7f\xbf\xb1\x34\x03\x0c\x74\x06\xa7\x3e\x02\x06\x04\x9d\x5c\x2f\xed\xcb\x56\xda\x31\xa3\xbb\xc3\x37\xee\xae\x2e\x23\x4b\x34\xcb\x2c\x81\x2f\x2e\x48\xf3\xb6\x4b\xf6\x9f\x72\xbf\xb2\x2e\xde\x20\x1e\x1e\xe7\x1b\x4b\xdb\xc8\x24\x7d\xf5\x25\x2d\x70\x95\xdb\x99\x36\x36\xde\x2e\x74\x8b\x1f\xb5\xe0\xf1\xa8\xc4\x7f\x30\x57\xd9\x81\xc0\x84\xbc\x72\xca\xaa\xf5\x56\xed\x5c\xeb\xdc\x69\xed\xc0\x4b\x95\xc3\xf4\x4d\xed\x4c\x17\x15\x32\xfd\x8e\x66\x79\x51\x66\xfb\x7a\x87\x78\x71\x02\xfb\x53\xc4\xa2\x01\xd1\x45\xf7\x5b\x00\x00\x00\xff\xff\x3e\x81\xb0\x50\xc4\x0a\x00\x00")

func serviceTplBytes() ([]byte, error) {
	return bindataRead(
		_serviceTpl,
		"service.tpl",
	)
}

func serviceTpl() (*asset, error) {
	bytes, err := serviceTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service.tpl", size: 2756, mode: os.FileMode(420), modTime: time.Unix(1575620055, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vueTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x6f\x1c\xb7\xf1\x7f\xaf\x4f\x31\x21\x9c\xe0\x2e\xb9\x5d\xc9\xf9\x23\xf8\x23\xab\xdb\x6b\x10\x25\x2d\x82\x16\x4d\x80\x26\xaf\x0c\x23\xa0\x76\x79\x77\xac\xb9\x0f\x25\x79\x27\x29\x87\x03\x8a\x36\x89\xed\xb4\x89\x5c\x34\x15\xd2\x3c\xc0\x76\xe1\xf4\x09\xb0\xe2\x17\x85\x6b\xc7\x4a\xfa\x65\x74\x27\xe7\x55\xbf\x42\x41\x72\xef\x96\xfb\x70\x27\xc9\x51\x82\x1a\x28\x60\x9c\x76\xc9\xe1\x70\x38\xfc\xcd\x8f\xc3\x59\x03\xb4\x9f\x70\x1c\xf8\x11\x89\x09\xc7\x92\x84\xb0\xb9\x03\x82\xe1\xe0\x12\xe1\x8e\xd3\x81\x95\xb6\x24\x51\xca\xb0\x24\x9d\x15\x80\x36\x61\x4e\x80\x79\xa8\x9e\x01\xda\x21\x1d\x82\x60\x89\xf4\x51\x9f\xe0\x90\x70\x64\xda\x8d\x5c\x37\xe1\x11\x78\x34\x66\x34\x26\x3e\x92\x7c\x40\x10\x0c\x9d\x28\x09\x09\xf3\x91\x20\x98\x07\x7d\x25\x82\xe0\x05\x31\xd8\x8c\xa8\x74\x63\x2c\xe9\x90\xb8\x29\x27\x43\x12\x4b\x1f\xc5\x49\x4c\xe6\x1a\x73\x9d\x0e\x95\x24\xca\x9b\x4d\x07\x8d\xd3\x81\x84\x94\x93\x2e\xdd\x76\x68\x90\xc4\x3e\x52\xad\x41\x12\x3b\x66\x2a\x04\x01\x23\x98\xe3\x4d\x46\x66\x56\xb8\x92\xd3\xc8\x36\xc5\xa5\x29\x82\x94\xe1\x80\xf4\x13\x16\x12\xee\xa3\xe9\xf5\xcf\xa7\x57\xbf\x9e\xbc\xfb\xce\x64\xff\x3e\xea\xb4\x57\x67\x33\x59\x56\xad\x16\xcc\x82\x93\x99\xbb\x39\x90\x32\x89\x41\xee\xa4\xc4\x47\x29\xa7\x11\xe6\x3b\x08\x5e\x08\x18\x0d\x2e\xf9\xe8\x67\x99\xc5\xb5\xeb\xe8\x4c\xaf\x7f\xfe\xf0\x8b\x3f\xe9\x79\x8d\x9a\x05\xca\x67\xda\x38\x11\x44\x5a\xfe\xee\x4c\xef\xbd\x73\xf4\xb7\x2f\x8d\x9a\xe9\x67\x37\x0f\x1f\xdc\xad\x55\x56\x5a\xd9\x4a\xa9\x75\xde\xa0\xd0\x53\x33\x2d\x8d\xd2\x84\xcb\x2e\x65\xc4\x1d\x52\x41\x37\x19\xf1\x0d\x06\x78\x32\x88\xc3\xf2\xd2\x03\x86\x85\xf0\x91\xc2\x56\xa6\x08\x75\xda\x74\xd6\x3c\x73\xc1\x20\x65\x09\x0e\x9f\x55\x3b\x41\x3b\x93\x2f\x0e\x26\xef\x7c\xfe\xf0\xe6\x5f\xa7\x37\x0e\xec\x05\x80\xe3\x1c\x67\xdb\xcb\xdb\xca\x36\x54\x36\xc2\x58\x76\x32\x53\xc2\x64\x2b\x56\xc6\xe4\xb6\x5c\xfe\x72\xb9\x2d\x55\x33\x02\x4e\xb0\x9c\xbb\x07\x7c\x30\x0e\x3a\xa9\x55\x25\x7c\xa4\x6c\x20\x50\x67\xfa\xcf\x07\x93\xf7\x6e\xd4\x6c\xa8\x09\x56\xb9\xc3\x88\x8f\x74\x28\x78\x9b\x89\xec\x2b\xf3\x43\x3a\xcc\xe2\xd9\x7a\x24\xcc\x91\x3a\x58\xbc\x10\x4b\xec\x23\xfd\xe2\xaa\x67\x34\xd3\xb2\x45\x43\xd9\xf7\xe0\xfc\xda\xda\x93\x2a\x88\x09\x23\x81\xa4\x49\xec\x04\x7d\x1c\xf7\x88\x82\x71\xd6\xb2\xa1\x1b\x54\xf4\x2b\x8f\xd1\xb8\x37\x53\x97\xbd\x16\x68\x43\xf7\x38\x41\xc2\x06\xd1\x2c\x40\xe6\xaa\x11\xe8\x39\x7d\xf4\xdc\x73\xa8\x00\x48\x7b\x50\x8e\xe0\xd1\x88\xab\x89\xe1\x1c\x6d\x9d\x0b\x12\xe6\xf9\xee\x86\x96\x10\xe3\xf1\xa2\x09\x19\xde\x54\xf4\x34\x1a\xa9\x01\xee\x06\x8e\x08\xdb\xc0\x82\xfc\x14\x47\x64\x3c\xb6\xc9\x68\xc6\x8a\x9a\xff\x1c\x11\x24\xda\x50\xf5\x07\x15\xe2\x51\xa4\x38\xee\x40\xbb\xdd\x06\xdd\xe9\xf2\x64\xcb\x9d\x69\xd7\x53\x1a\xd5\xd0\xe9\x74\xa0\xbd\xaa\xa5\xad\x08\xb4\xb9\xf7\x98\xc5\xc2\x68\x44\xe2\xf0\xd8\x95\x4d\x7f\xff\xfe\xe1\x57\x9f\x3e\xca\x4a\x72\xfc\x0a\xfa\x96\x12\x89\x30\x63\x15\xb4\xa6\x0c\xd3\x1c\xe1\xaf\xc6\x1b\xea\xe1\xe5\x90\xca\xc6\x7c\xfd\xcd\x32\x72\x49\x48\x25\xea\xc0\xf1\x94\x56\x33\x71\xa8\x76\x98\xe7\xdc\xf9\x12\x61\x44\x92\x25\x93\x85\x5a\x20\x23\xf3\x2a\xe7\x9d\xd0\xe3\x79\xb3\x7d\x14\x9a\xb8\x88\x30\xef\xd1\xd8\x61\xa4\x2b\x3d\x78\x76\x2d\xdd\x5e\xcf\x5a\x64\x92\x9a\x06\x54\x43\x0a\x43\x47\xf4\x93\x2d\x1f\x45\x03\x26\x69\xca\xc8\x3c\x7a\x5c\x46\xe2\x9e\xec\x57\x3c\x3d\x5b\xb1\xf6\xf0\x8b\x58\x06\xfd\xd7\xd4\x0f\xea\x4c\xaf\xde\xff\xe6\xf2\xee\xe1\xbf\xf6\xa7\x1f\xde\xaf\x23\x82\xd3\xcf\x59\x76\x72\x3e\xe5\x4b\x99\x37\xcd\x9c\x93\x2b\x37\xbe\xf9\xe3\xad\xca\x9c\x25\x5e\x49\x71\x8f\xaa\xb3\x3e\x89\xc1\xeb\xd3\x90\x38\xea\x70\xa3\x71\x8f\x11\xd5\x35\xcf\x15\x32\xc6\xcb\xa5\x11\x6c\xe2\xe0\x52\xcf\xf0\x21\xc3\x3b\xc9\x40\xfa\x48\x63\x42\xb4\x40\x26\x12\xb3\x96\xca\x00\x86\x2d\x50\x6a\x78\x0b\x62\xb2\x2d\x11\x78\xba\x6b\x46\x39\xfa\x05\x81\xa7\x44\x1c\x83\xa7\x8c\x8b\x68\x44\xa5\xdd\x21\x7c\x74\xe1\xfc\x5a\x0b\x9e\x5b\x6b\x29\x8e\x6b\xc1\xf3\xcf\x3f\x7f\x51\x11\x1d\x7d\x8b\xe4\x1c\x47\xdf\x22\x33\x7a\x33\xfe\xf5\x82\x01\xe7\x24\x96\xb3\xb5\x68\xe5\xea\x59\xb9\x2f\xeb\x9a\x8d\x7e\x0d\xf7\x66\xa3\x2d\x58\xe5\x2b\xee\xac\xcc\x9d\x16\x52\xcc\x92\x1e\x48\x2a\x15\xc4\x0c\xcb\x23\xf0\xb2\xb3\xc3\x15\x3b\x71\x50\x3e\x50\x72\xb6\x5c\x2b\x63\xce\xe4\x66\x59\x2e\x96\x8d\x32\xc9\x98\xa6\x09\x27\x4d\x04\x55\x06\xf8\x88\xd3\x5e\x5f\xce\x9a\x33\x7d\xe7\x0b\xfa\x4e\xc6\xb4\x99\x18\xed\x42\x9c\x48\xd0\xfc\xf7\x8a\x78\xcd\x60\xf9\xc7\x64\xc7\x92\x2b\x24\x4e\x27\x26\x64\x3b\x0d\x9c\xe5\x77\x7a\xba\x8d\x24\x96\x98\xc6\xc2\xcc\xf9\xfa\x4e\x4a\x00\xd1\x58\xa2\xf1\x38\x1e\x44\x9b\x84\x8f\x46\x84\x09\x32\x1e\xab\x64\x30\xa3\xd0\x82\x4b\xea\xd8\x1a\x01\x1e\xc8\xc4\x09\x92\x28\x55\xf0\xf7\x51\xd2\xed\x9e\x28\x3d\xb4\x9d\x51\x22\xec\x1a\x0a\xaf\xa4\x5a\x79\xbe\xdd\x4d\x12\xa9\x22\x32\x0b\x12\x83\x0e\x27\x6b\x2d\xe6\xcc\xc7\x25\x1d\x5d\xcc\x04\x41\x9d\xc9\xee\x1e\x4c\xef\x5e\xa9\xa7\xc5\x63\x53\xd6\x0d\xad\x15\x75\x8e\x6e\xee\xc3\x64\xff\xe3\x3a\xda\xb1\xf3\x8c\x39\xa0\x17\x22\xfc\xe8\x60\xef\xe1\xd7\xbf\xab\x20\x7c\x90\x86\x8f\x80\xf0\x6c\xd4\xa3\x22\xfc\x64\xe8\x7e\x6c\xc0\x6d\x79\xe3\xbb\x02\x77\x11\xc8\xdf\x07\xac\x8b\xc0\x38\x2b\x58\xbf\xa1\xb5\x9e\x21\xac\xed\xb3\xb9\x02\xee\x4d\x75\xa2\xa6\xea\xe7\xb4\x00\xb7\x46\x3e\x3a\x8d\x9f\x90\xc4\x1f\x1f\xa0\x97\xbc\xf2\xfd\x80\xfd\xfb\x81\x7b\x15\x2a\x67\x05\x79\x3b\x93\x3c\x3d\xec\xb3\x24\xa8\x06\xf8\xbb\xd7\x8e\x6e\x7d\xe9\x1d\xde\x7b\xef\xf0\xe0\xc6\xe4\xda\x07\x93\x3b\xef\x4e\x3f\xbc\x3f\xd9\xfd\x68\xf2\xc1\xf5\xe9\xa7\x57\xa7\x7f\xb8\x33\x7d\x7f\xbf\x12\x11\xd5\x22\xc2\x3c\x22\xfe\x6f\xed\xc9\x42\x3c\x98\xda\x00\x70\xd2\x55\x64\xa0\xaf\xe6\xe0\x59\xb7\xd1\x1f\x52\x36\xcf\xd4\x3c\xa5\xd1\x61\x54\xc8\xc2\x14\xea\x47\x35\x22\xf0\xfa\x52\xa6\x0e\x27\xbf\x18\x10\x25\xf3\x4a\x64\xea\x05\x9e\x06\x8b\xd1\xee\x23\xe3\x6e\x08\x39\xee\x01\x0e\x4c\x9c\xd9\xbb\xb6\xa0\x7c\x61\x2a\x06\xb9\x98\x82\x43\x2e\x68\x64\xde\x7c\x53\xaa\xdc\xb5\xa3\xbc\xb4\x77\xf9\xf0\xc1\xdd\xe9\x6f\xf6\x26\x57\xee\x4c\x6f\xdf\x9a\xdc\x7a\xfb\xdf\x07\xbf\x9d\x5e\xd9\x2b\xc4\x4c\xd4\x39\xfa\xd5\xfd\xc9\xe5\x07\xc6\xbd\xed\x55\x1b\xa0\xd6\x56\x2d\x9b\x8f\xa6\x28\x43\xa5\x7a\xec\x4c\x76\xff\xfe\xf0\xd7\x5f\x19\x7d\xee\x36\x13\xdb\xc6\x8e\x82\x32\xbd\xf3\x46\xc1\xbc\x49\xdd\x60\xbf\x35\xba\xab\xdb\x7e\x56\xe8\x36\xa5\xc6\x37\xb2\x8d\x58\x86\xef\xfc\x2a\x6e\x03\xdc\xe0\x7b\x25\x6b\x34\xa5\x50\xfb\xd2\xb8\xd2\x16\x01\xa7\xa9\xe6\x0d\xb3\x0a\x78\x1a\xb0\x00\x9c\x52\xe8\xf2\x24\x02\xf4\xc2\x2a\x4e\xe9\xea\x68\xe4\x66\x04\xb4\xbe\x02\x40\x74\x3d\x0a\x42\xd2\xc5\x03\x26\x61\xa4\x27\x09\xb1\xc4\x8d\x66\xf6\x02\xc0\x89\x1c\xf0\x78\xfe\x0a\x50\xb9\xb4\x79\x70\xe1\x62\x6b\xde\xad\x2f\x1e\x9e\x25\x0f\x90\x95\x5b\x3c\xe3\xca\x96\xd5\xa3\xe6\x2a\x0e\x07\x73\xa3\xf2\x60\xcd\x6e\x53\xf7\x18\x0f\xce\xdb\x4d\x49\xb7\x2b\x88\x2c\xc9\xe9\xcb\x94\x07\xe7\xd7\xe6\x6d\xe3\xbc\x3b\xaf\x45\x7a\x30\xb2\xda\x4d\x66\x5a\x34\xb9\x2a\x05\x90\x41\x22\x5b\x46\xdd\x0c\x26\x19\x38\x0b\x4d\x39\xcf\x9e\x85\xb6\x1c\xd7\x25\x6d\x19\xf1\x94\xb7\x60\x91\xc6\xec\x69\xbc\xbe\x62\x4d\x10\x11\xd9\x4f\x42\x91\x6b\xee\x11\x59\xc2\x10\x80\xec\x53\xe1\x16\x8a\x6f\x59\xd9\x71\x7d\x2e\x82\x53\x6a\x99\xe0\xfe\x84\x0a\xd9\x28\x9c\xff\xaf\x6e\xfe\x9c\x04\xd2\xc5\x42\xd0\x5e\x5c\xec\x02\x18\xcd\x01\x61\x4d\x65\x9a\x5a\x33\x58\xd8\x46\xa8\x16\x28\xb8\x71\x6e\x66\x8e\x93\x42\x6f\x73\xa5\xfe\xd9\x95\x7d\x12\x37\xb8\x48\xc1\xef\x14\xbc\x5b\x58\xb5\x46\x35\xf8\xc0\x45\xaa\xab\x99\xa6\x61\x7d\x91\xb8\x12\xb1\xa5\xd5\xcf\x42\xe1\xdc\xa3\x7a\xbf\x6c\xb9\x71\xc1\xd2\x40\x01\xaa\x41\x38\xd7\xa6\x8e\x9b\x33\xc9\xb9\x1f\xf2\xc2\x40\x63\x88\xd9\x82\x0d\xd4\x05\x86\x21\x66\x75\x7d\xc6\xe3\x6a\x6f\xcb\xbe\x7e\x1a\x94\x4a\x70\xe0\x7c\x73\xbd\x38\x72\x8e\x97\x8a\x39\x79\x95\x63\x89\x39\x46\xbd\x0f\x43\xdb\x9d\xc7\x28\xd6\xdf\x26\x4c\xdc\xab\x7d\xae\x42\xb5\xfe\xb6\xba\x5e\x2b\xa4\x33\x62\x1f\x46\xe3\xfa\x69\x72\x38\x55\xa7\xc9\xfb\x0a\x0a\xb2\x5e\xf3\x3d\xa6\xce\x2f\x59\xc7\x92\xfd\x39\xbf\x74\x77\xd6\x4e\xec\x29\x73\xc1\x2e\x4c\xc5\x88\x04\x2b\x88\xd5\xf8\x73\xd9\x7b\xa3\x48\xfb\xc1\x25\x4f\x07\x79\x81\xde\xc9\xb6\xf4\x20\xab\x07\x1f\xde\xbb\xed\xba\x2e\xb2\xfb\x45\x4a\xe3\x98\x70\x0f\xe6\xe9\xcb\xac\x5a\x6f\x4b\xe5\x15\x39\x0f\x10\xef\x6d\xe2\xc6\x5a\x0b\xb2\x7f\xee\xff\x37\x51\xce\x59\xcd\x85\x0c\x93\x2d\xad\xbc\x95\xa7\x89\xed\x0a\x8e\x6a\x62\xb4\xe2\x5b\x38\x36\x2e\x2b\x16\x34\x9a\x55\x03\x32\xb7\xb8\x01\x4b\x04\x29\x6b\xaf\xec\x63\x56\x9f\xe6\xc9\x56\x05\x35\xe7\x82\x24\xee\x52\x1e\x35\xd0\xf4\xf6\x2d\xb3\x2f\x93\x3b\xef\x9a\x9a\xaa\x6a\xf9\xec\xa6\xc9\x92\x5b\x30\xfd\xe8\x8b\xc9\xb5\x3f\x1f\x3d\xf8\xcb\xd1\x83\xdb\x3f\x40\x2d\xc8\xb2\x6b\xd4\x2a\x98\x96\xa9\x7b\x51\x27\x36\xaf\x9b\xed\x3e\xba\xb9\x3f\xd9\xff\xb8\xb0\x85\x01\x8e\x03\xc2\x0a\x52\x93\xdd\xbd\xe9\xdd\x2b\x05\x29\x95\x4f\x79\x80\xb6\x30\x8f\x15\x06\x56\xea\x1d\xb8\xd0\x49\xc5\x2d\xd7\xb2\xb9\x27\xdc\xd1\xc8\xcd\x2f\x91\xe6\x7a\x56\xb8\xa5\x35\xcb\x63\x17\xc3\x21\xf7\x66\x9c\x48\xda\xdd\x71\xc5\x20\x08\x88\x10\x0d\x94\x39\xf2\xca\xb5\xc9\x7b\xd7\x51\x09\x20\xb0\x14\x24\x95\x75\xc2\x32\x12\xaf\x7a\xe5\x58\xba\x37\x65\x86\x42\x70\x97\x62\x24\x93\xd0\x36\x16\xeb\x37\xcb\x3d\xd7\x82\xf2\x90\xd3\x84\x55\x7d\x51\xa5\x26\xb6\x2a\xce\x9e\x7e\xf2\x8f\xe9\xde\x9d\x7a\x67\x3f\x6a\x34\x56\xdc\x66\x7f\x5d\x6a\x5a\xe6\x97\x97\x0c\x7e\x29\x67\x19\x8d\x5b\xa0\x22\xb0\xc6\xae\xca\x92\xed\xe4\xc8\x22\xfe\xc2\xa7\xcd\xda\x53\xb1\x92\x9f\x17\xcf\xc6\x9c\xd9\x4b\x1f\x53\xaa\xc7\x89\x45\x0c\xd6\x67\x96\x6f\x7e\x79\xf5\xf0\xde\xed\xa3\x8f\xdf\x9e\x7e\x76\xf3\xe8\x93\xc7\x92\x15\xf4\xea\x0a\x4b\x3f\x0e\x0d\x99\x96\x1a\x30\x2c\xf2\xe0\x63\x7b\x4a\x2a\xc3\x69\x28\xc0\x87\x0b\x17\xf3\xd6\x6e\xc2\xa1\xa1\xbb\xe2\x90\x6c\xeb\x14\x22\x7b\x6c\x2f\x80\x5d\xf6\x2d\x2f\x13\x7b\xe6\x99\x66\x19\x0e\x42\x82\x2e\xd2\xf9\x0b\x14\x5c\xd0\x03\x2f\xda\x5b\x43\x43\xe1\xa6\x03\xd1\x6f\xa8\x81\xc7\xd3\xf7\x7a\xe5\xea\x52\x21\x38\x7b\xfb\x46\x70\x9c\x46\x4f\x39\xa6\x06\x64\x8b\xa9\xec\x54\xc7\xc1\x7f\x51\xbe\x50\xfa\xba\x5b\x25\x87\x52\x91\xb3\x2e\x7f\xad\x2d\x16\xd6\xf2\xda\x82\x89\xfe\x17\x43\x8f\x4f\x0c\x99\xdd\x83\x93\xc6\x50\xab\x16\x45\xdf\x2a\xb2\xcc\xd7\x8d\xd3\x46\xd6\x32\xac\x9e\xf2\x3a\xfd\x1d\x84\xa1\xf9\x1f\x63\xe5\x0c\xcd\x9d\x35\x57\xe4\x4d\xc5\x58\x6f\xad\x3d\x66\x88\xb9\x3e\x33\xc1\xb7\xa6\x43\x38\x4d\x19\x0d\xf4\x17\xff\xd5\x61\x1c\xba\x49\x4a\xe2\xed\x88\xa9\x8d\xc0\x52\x38\x49\xb7\x4b\x03\x12\x26\xc1\x20\x22\xb1\x74\x45\xca\x09\x0e\x45\x9f\x10\x19\x31\x57\xff\x45\xb9\xf5\xb4\x0b\x76\x49\x46\x63\x4b\x17\x52\xf5\xb4\x4f\xf8\xbe\x99\xff\xa9\xa7\x96\x0b\x15\x6c\xda\x4a\x67\x46\xe8\x4a\x70\x1e\x6a\xc5\x30\x30\x68\x88\x88\x10\xb8\x47\x5c\xc2\x79\xc2\x1b\xc8\xae\x23\xeb\x32\xf2\x8d\x83\xc9\xc1\x6e\x11\x16\xa6\xb4\x59\x07\xf0\x93\x50\x4d\x21\xf0\x17\x85\x86\xb5\x1f\x7a\xa5\xdf\xee\xe8\xd0\xff\xf3\x70\x09\xc0\x17\xd7\xaf\xcf\x18\xc4\x45\xff\x34\xeb\xc0\xbc\xfc\x34\xab\x00\xd7\x2e\x90\xd7\x64\xa2\x9c\x74\x55\x8e\xac\x7a\x5d\x23\x5a\x03\xfe\xfc\x53\x4b\x43\xf9\xa0\x05\x8c\x0a\x59\xd1\x55\xf3\xe1\x45\xf1\xb4\xfa\xeb\xa6\x49\xda\x68\x5e\xac\x28\x8e\x93\x98\x34\x9a\x23\x83\x8f\x71\xcb\x14\xe3\xcd\xb5\xdf\x36\xb6\xb4\x60\x23\xa6\x06\x8d\xd7\x57\xda\xab\xb3\x02\xfd\x0a\xfc\x27\x00\x00\xff\xff\x75\xd3\xc5\x29\xfb\x2c\x00\x00")

func vueTplBytes() ([]byte, error) {
	return bindataRead(
		_vueTpl,
		"vue.tpl",
	)
}

func vueTpl() (*asset, error) {
	bytes, err := vueTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vue.tpl", size: 11515, mode: os.FileMode(420), modTime: time.Unix(1577775917, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"component.tpl":   componentTpl,
	"controllers.tpl": controllersTpl,
	"dao.tpl":         daoTpl,
	"js.tpl":          jsTpl,
	"markdown.tpl":    markdownTpl,
	"models.tpl":      modelsTpl,
	"service.tpl":     serviceTpl,
	"vue.tpl":         vueTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"component.tpl":   &bintree{componentTpl, map[string]*bintree{}},
	"controllers.tpl": &bintree{controllersTpl, map[string]*bintree{}},
	"dao.tpl":         &bintree{daoTpl, map[string]*bintree{}},
	"js.tpl":          &bintree{jsTpl, map[string]*bintree{}},
	"markdown.tpl":    &bintree{markdownTpl, map[string]*bintree{}},
	"models.tpl":      &bintree{modelsTpl, map[string]*bintree{}},
	"service.tpl":     &bintree{serviceTpl, map[string]*bintree{}},
	"vue.tpl":         &bintree{vueTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
