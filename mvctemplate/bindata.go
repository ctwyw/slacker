// Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// component.tpl
// controllers.tpl
// dao.tpl
// js.tpl
// markdown.tpl
// models.tpl
// service.tpl
// vue.tpl
package mvctemplate

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _componentTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xcb\x6a\xdc\x4a\x10\xdd\xeb\x2b\x8a\xe6\x2e\x34\x17\x5b\xe3\xb5\x34\x1a\x4c\xb2\x4c\x30\x81\x2c\x8d\x17\x6d\xa9\x64\x35\xe9\x17\xdd\xa5\x49\x86\x41\x90\x6d\xc8\x97\x64\x95\x65\xfe\x28\x24\x7f\x11\xba\xf5\x18\x8d\x3d\xc6\x78\x23\x75\x55\x9f\x3a\xf5\x3a\xbd\x21\x54\x56\x72\xc2\x6d\x02\xb0\x41\x79\xe9\x51\x62\x45\x09\x00\xc0\xee\x52\x99\x1a\x65\x46\x4e\xa8\x92\x09\x6d\x3b\x62\xf1\xa2\x11\x92\xd0\xf1\x7b\x89\xd1\x74\xa8\x0c\x0d\x47\x2b\x79\x85\xad\x91\x35\xba\x92\xfd\xf9\xf9\xeb\xef\xd7\x6f\xbf\xbf\xff\x18\xa2\xae\x1b\x53\x75\xbe\x64\x0f\x48\x52\xf8\x91\x2a\x97\x86\xd7\x42\x3f\x94\x6c\x3c\x8c\xd8\xaa\xe5\xfa\x01\x4b\xd6\x72\x5d\x4b\xfc\x18\x8b\x1a\xae\x2a\x89\xfc\x98\x3b\xaf\x85\x0f\x46\x5d\xb2\xe9\x14\x60\xdb\x78\x19\xfa\x31\x96\x84\xd1\xd1\x0c\x1d\x35\xc6\x95\x4c\x10\x2a\x10\x1a\x8e\x65\x00\xe4\x9f\x70\x3f\xdc\x64\x87\x43\xf6\xc1\x09\xc5\xdd\xfe\x1d\xee\xdf\x1a\xd9\x29\x9d\x0d\xbf\x1b\xae\xb0\xef\xe7\x10\xc9\xef\x51\xbe\x36\x68\xc7\x65\x87\xaf\x0a\xda\x6e\xd6\x73\x23\x71\x4d\xeb\x79\x4f\xdb\x64\xb3\x3e\x6e\x30\xd9\xf8\xca\x09\x4b\x01\x24\x94\x35\x8e\xe0\x7f\xe0\x1e\xb8\x15\xd0\x38\xa3\x80\x5d\xaf\xb9\x15\xeb\xc3\x21\x1b\xf9\x8b\x04\x00\xbf\x44\x64\x8d\x0d\xef\x24\xc1\x21\xe6\xac\x39\xf1\x74\x35\x1a\x61\xc5\xd4\x39\x3d\x9b\x00\xe3\xb6\x72\x68\xb8\xf4\x78\x31\xfb\xa3\x4a\x72\x60\xec\xe8\x0a\x53\xce\xe1\xf6\x6e\x74\xf4\x45\x3c\xf4\x03\xc0\x3a\x63\x7d\x0e\x07\x88\x63\xc9\xe1\xa6\x53\xf7\xe8\x2e\x60\x5a\x66\x0e\x6f\x8c\x91\xc8\xf5\x14\xa0\x90\x5a\x53\x87\x90\x91\x6f\xa9\x90\x74\xb7\x5a\xd4\x28\x1a\x48\x69\x6f\xd1\x34\xb0\x83\xb2\x04\xa6\x23\x39\x5b\x62\x00\xa8\x15\x3e\xfb\x0f\x95\xa0\x74\xd4\xf8\x05\xec\x56\xc5\x33\x88\x41\x97\x8f\x20\x3d\xa0\xf4\xf8\x22\xeb\xd5\xcb\xac\x4b\x48\x3f\x0d\x6c\x1a\xe5\xf8\x70\xd2\x65\xfd\x91\x65\x5c\x06\x94\x40\xae\xc3\x23\x03\xb7\x62\x91\x30\x7b\x1f\x83\x97\x1e\x6a\x51\xa7\xce\x5b\x28\xb7\x27\xd5\x4f\xbc\xc2\x13\x94\xe0\xbc\xcd\x82\x1e\xe2\x67\xd9\x42\x7f\x42\x56\x71\xaa\xda\x14\x9d\x8b\x6c\xfd\xd3\x44\xe9\xea\xb9\x3c\x73\xfd\x51\x4d\xa7\x29\x8a\xc7\x63\x10\x5a\x9c\x9b\xc1\x50\xeb\xed\x5d\x71\xea\x8f\xc3\x0f\x93\x09\x46\x14\x59\x71\x2a\x90\xd9\x0f\x5b\xb8\x3a\x23\x8d\x79\xea\x67\x36\xb3\x54\xf2\xe7\xd0\xfe\x51\x96\xa3\x9e\x9b\x4e\x57\xe1\xdd\x3e\x2d\x78\x68\xa3\x38\x47\xa5\x4c\xa7\x09\xeb\x45\xcc\x93\x88\x80\xef\x8b\x64\xb3\x9e\x5e\x7c\xf2\x2f\x00\x00\xff\xff\x50\xb4\x2e\x04\xca\x05\x00\x00")

func componentTplBytes() ([]byte, error) {
	return bindataRead(
		_componentTpl,
		"component.tpl",
	)
}

func componentTpl() (*asset, error) {
	bytes, err := componentTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "component.tpl", size: 1482, mode: os.FileMode(420), modTime: time.Unix(1569292443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x5d\x6f\xdb\x36\x17\xbe\x16\x7f\xc5\x79\x75\xf1\x42\x0a\x34\x29\x1d\x8a\x5e\xb8\xf0\x45\xe3\x04\x6d\xb7\x20\xf5\x96\xe4\xaa\x28\x06\x86\x3c\x76\x88\x48\x94\x47\x52\xe9\x0c\x4d\xff\x7d\x20\xa5\xb4\x96\x2d\xca\x5e\x1d\x2c\xbe\x52\x6c\xf2\x39\xcf\x07\xcf\xa1\x92\x65\xef\x51\xa2\xa2\x06\x39\xdc\xad\x41\xe7\x94\x3d\xa0\x02\x92\x65\x4b\x21\x41\x95\x95\x41\x45\xb2\x13\x42\x57\x22\x7d\x7f\x71\x13\x85\x59\x5d\xa7\x97\xe5\x57\x54\x57\xb4\xc0\xa6\xc9\x26\x82\x87\x09\x2b\xa5\x51\x65\x9e\xa3\xd2\xe9\x0d\x7d\xc0\xba\x4e\x67\xb4\xc0\x7c\x46\x35\xb6\xeb\x62\x2f\x42\x7f\xf7\xa5\xd0\xc6\xb7\x7b\xfe\xe9\x7a\xdf\xf6\x99\x42\x6a\xbc\xe5\xe7\xb7\x87\x08\xb8\x5d\xf1\x31\x8c\x77\x37\xb3\x0f\x07\xa0\xcc\xa9\x61\xf7\x3e\x90\xf3\x8b\xcb\x8b\x9b\x8b\x03\x50\xce\x31\xc7\x41\x2e\x30\x42\xa6\x0f\x71\x66\x89\xfc\x08\x9b\x01\x18\x2f\x1d\xaf\xbd\x03\x20\x5e\x7f\x81\x9c\x64\x84\xac\x28\x7b\xa0\x4b\x84\x8d\x7d\x84\x88\x62\x55\x2a\x13\x91\x00\xc2\xba\x0e\x97\xa5\x56\x2c\x2b\x4a\x8e\xb9\x0e\xff\x86\xf4\xa3\xfb\xf5\x52\xdc\x29\xaa\xd6\x4d\x63\x29\x74\xd5\x49\x10\x2e\x85\xb9\xaf\xee\x52\x56\x16\xf6\x48\xff\xb4\x2c\xa5\x60\xf6\xc9\xfe\x26\xd1\x64\xf7\xc6\xac\xec\xb3\x36\x8a\x95\xf2\x31\x24\x31\x21\x8b\x4a\x32\x00\x18\x3e\x8c\x11\x83\x93\xa5\x90\xe9\xac\x94\x06\xff\x32\x31\x40\x4d\x00\x00\x1e\xa9\x82\xbe\xf8\xad\x3f\xd3\x5d\x2c\x12\x94\x8b\x85\x46\x93\xfc\x31\x99\x76\x04\xd2\x39\x55\x1a\x6f\x85\x34\x11\x4b\xcf\x71\x41\xab\xdc\xfc\x56\xa1\x5a\x47\x61\xbb\x36\x4c\xc2\xd3\x30\x4e\xe0\xd5\x69\x02\x6f\x5e\xc7\x04\x5c\xf5\x5c\x14\xe2\x40\x18\xb7\xb4\x43\x79\x75\x9a\x38\x8c\x80\xa5\xd7\xf7\x65\x95\xf3\x33\x21\x79\xbb\xee\xff\x7d\xf6\xb1\x2d\xc3\xa9\xa1\x89\x29\x0d\xcd\x13\x54\x6a\x32\x85\x6b\x54\x8f\x82\xa1\xa7\x6f\xa3\x4e\x5d\x4b\x6e\x1b\x2f\x08\x82\x5f\xae\x3f\x5d\x45\x2c\x01\xeb\xe7\x87\x9a\x04\x41\x68\x2b\x84\x93\xae\x92\xfd\xc2\x55\x0b\x27\xd0\x56\x25\x41\x63\x2b\xc7\xa4\xf9\x96\xd2\xf0\xc0\x19\x4b\xc9\x62\x1f\x92\xcd\x90\x29\x76\xaf\xb3\x02\x04\x4f\x00\x95\x82\xc9\x14\x7a\x9e\x7f\x74\x96\xcf\xa9\xa2\x45\x14\x0a\xfe\xdd\xe4\x40\x2c\xdc\x86\xff\x4d\x41\x8a\x1c\xac\xdc\x27\xfd\x52\x38\x43\x59\xc9\x31\xbd\xc2\xaf\xd1\xd3\xf3\x19\xe5\xbf\xe3\x9f\x15\x6a\xe3\x54\x5b\xcf\x14\x9a\x4a\x49\x12\x34\x40\x02\x4b\xc6\x32\x9f\x2b\x51\x50\xb5\xfe\x15\xd7\xb3\x32\xaf\x0a\xb9\x2d\x65\x2a\xb8\xa5\x6c\x8b\x7f\x8f\xcc\xe3\x5b\xab\x10\x36\xd3\x71\x59\xf4\x5d\xf7\x0d\xda\x67\xb0\xdd\x79\xbb\x78\xb2\x76\x33\x02\xc7\xa7\xe5\xf7\xb6\xef\x24\xb8\xcf\x0f\xf8\x09\xdd\xe7\x9b\xab\xee\x9b\xae\xf6\x93\x53\x5e\xb1\xdd\x69\x18\x73\xca\x37\xed\x86\x8c\x0a\x9e\xe5\x50\x1d\x73\xa6\x8e\x18\x64\x63\x91\x6d\x75\xfe\xdb\xe7\x6c\x03\x12\xec\x92\xdb\xd7\x0f\x30\x05\xc1\x49\xd0\xef\x07\x6f\x52\xbb\x73\x6b\x8b\xef\x46\x5f\x78\x2e\xda\xc1\xb4\x5f\x3a\xeb\xc0\x06\x5d\x39\xd5\x0b\x81\x39\xd7\x30\x85\x82\x3e\x60\x54\xd0\xd5\x67\x6d\x94\x90\xcb\x2f\x42\x1a\x54\x0b\xca\xb0\x6e\xe2\xf1\x8c\x37\x81\x76\x12\x3e\x72\xce\xf5\x83\xf2\x79\x2c\x78\xd2\x23\xb1\x53\x76\x23\x27\xdf\x9b\x8c\x6f\x7e\x1d\x9d\x15\x1c\x3f\xed\xfb\x2e\x78\x15\x08\xee\x3b\xa2\xd9\x49\xa7\x7e\xf4\x65\x6e\xc7\x02\x77\x54\x75\x27\x5d\xc8\xa5\xfe\x59\x48\xf3\xe6\xb5\x8e\x58\xea\x2e\xc5\x77\x4a\xd1\x75\xab\x3e\x6e\x97\x4e\x81\xae\x56\x28\x79\x24\xb8\x4e\xf6\xed\xfa\xfc\x25\x8c\xe3\x34\x4d\xe3\x4e\xe2\xc6\xe0\x1d\xe7\x29\xf6\x64\x3c\xf6\xe6\x3b\x24\xf2\xbf\x6b\x87\x63\x27\xde\x4b\xc6\xe1\xef\x3e\x9d\xc0\x56\xff\xed\x0b\xe7\xe0\xcb\xb1\x4b\xe7\xdf\xde\x4a\xf0\xac\xd7\xd2\x4b\x84\x30\x9c\x81\xd7\x37\xdb\x12\x03\x93\x26\x26\x8d\xfd\xe7\xea\x9f\x00\x00\x00\xff\xff\xeb\x21\xac\xcd\xed\x0f\x00\x00")

func controllersTplBytes() ([]byte, error) {
	return bindataRead(
		_controllersTpl,
		"controllers.tpl",
	)
}

func controllersTpl() (*asset, error) {
	bytes, err := controllersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controllers.tpl", size: 4077, mode: os.FileMode(420), modTime: time.Unix(1573026011, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _daoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\x5f\x8b\xe3\x36\x14\xc5\x9f\xad\x4f\x71\xeb\x87\x20\x0f\x46\xee\x42\xe9\xc3\x42\x28\x6c\x66\x5a\x86\x66\x96\xcd\x66\x96\x3e\x2c\x4b\x51\xac\x9b\x44\xc4\xb6\x32\x92\xbc\xd9\xa0\xea\xbb\x17\xc9\xb1\x9b\x4c\x32\x24\x7d\xca\x78\xb8\x7f\xce\xf9\xe9\x48\x45\xf1\x07\x36\xa8\xb9\x45\x01\x8b\x3d\x98\x8a\x97\x1b\xd4\x64\xcb\xcb\x0d\x5f\x21\x08\xae\x08\x91\xf5\x56\x69\x0b\x94\x14\x85\x79\x49\xd2\x95\xb4\xeb\x76\xc1\x4a\x55\x17\x4f\xdc\x58\xd4\xb5\x6c\x84\x29\xcc\x4b\x2b\xb5\xc6\x2a\x25\xa9\x73\xe9\x4a\x19\x5d\x16\xb5\x12\x58\x99\xf4\x1f\x60\x8f\x71\xc6\x54\x2e\x34\xd7\x7b\xef\x0b\xe7\xd8\x47\x5e\xa3\xf7\x29\x90\x8c\x90\x65\xdb\x94\x40\x05\xdc\xdd\x73\x95\xc1\x54\x1a\xeb\x1c\x9b\xf0\x1a\xab\x09\x37\xd8\x55\xd2\xdd\x1a\x35\x02\x30\xc6\x42\x39\xbd\x5b\x29\x5d\xb3\xfb\x0f\xd9\xf0\x07\xd0\xaf\xdf\x9c\x63\x53\xb5\x43\xdd\xf5\xb0\xf3\x31\xb9\x6c\x6c\x8e\x5a\x2b\x9d\x81\x23\x00\x00\xdf\xb9\x06\xc1\x2d\x87\x71\xcd\x37\x78\xd3\x8c\x9f\xb3\xa1\xd3\x2a\xcb\x2b\x90\x8d\x25\x09\x6a\x0d\xef\xc7\x82\x45\x3d\x4f\xc1\x3b\xbd\x3a\xca\xf9\x8c\x4d\x54\xdb\x58\x3a\x8a\x93\x32\x36\x2f\xd5\x16\x4d\xe7\x96\x31\x96\xb1\xdf\x65\x23\xe8\x28\x28\xcc\xd8\x43\x10\x1e\x77\x6b\xb4\xad\x6e\xa2\xf0\x3c\x76\x06\x53\xc4\x13\xe2\x1c\x7b\x42\xbb\x56\xe2\x99\x6f\xd0\xfb\xd7\x70\x27\x1a\xb9\xc5\x0b\x78\x23\x82\xbb\xab\x82\x33\x88\xf0\x1c\x81\xe4\x44\x47\xe7\xba\x9b\x4e\x8f\xc5\x9e\x29\xf8\xb2\x15\x97\x15\x9c\xee\x86\x5b\xa5\x80\x23\x41\x49\x51\xc0\xdf\x79\x77\x04\x20\x98\x58\xc4\x80\x89\x87\x1f\x58\xd2\xb4\x8d\x2b\x61\x48\x1d\x18\xb4\xfd\x97\x98\xcf\xa6\xde\x43\x97\x2e\xe7\xd8\x27\x2d\x6b\xae\xf7\x7f\xe2\x7e\xa2\xaa\xb6\x6e\x58\xf7\xd3\x35\x8e\xdf\x5f\xab\x48\xf3\x53\xdd\x19\x1c\x63\xea\x39\xcd\xf9\x77\xa4\xa3\x57\x95\x6f\x01\xfb\xc4\x6d\xb9\xbe\xc0\x4b\x8a\x90\xbb\x5f\x7f\xc9\x0f\xf6\x6a\xbe\xfd\x6a\xac\x96\xcd\xea\x9b\x6c\x2c\xea\x25\x2f\xd1\x1d\x51\x82\x20\x25\x19\xe2\x7e\x95\x6f\xa8\x0e\x95\xec\xa2\xe7\xd3\xda\xb1\x14\x40\x92\xd3\x30\x74\x57\xa0\xcb\x42\x77\xe8\x86\x76\x52\x8f\xac\xfe\x97\xd7\x7b\xac\xd0\xc6\xc4\x86\x7f\xca\x25\xb0\x47\xf3\xc5\xa0\x7e\xe6\x8b\x2a\x9c\xd9\x6b\x2c\x21\xdf\xe7\xa2\x3f\xec\xc3\xef\xff\x4c\x33\x38\x20\x83\xd5\xb0\xb3\xe1\x35\x5e\x32\x0a\xde\xc3\x18\x3a\xc8\x86\x3d\xab\x38\x9d\xde\xd8\x99\x01\xf4\x8f\x44\x8f\xe8\xaf\x90\x3a\x9a\x5e\xe8\x1d\x22\x05\xde\x8f\x7f\x4b\xf3\xf4\xc6\x25\x69\x78\x30\xb4\xb1\x27\x77\xb0\x3f\x18\x38\xbc\x11\xa7\x20\xcf\xb1\x3c\x9a\x87\x1f\xd2\x58\xda\x1e\x76\x1d\x1c\x67\xb0\x50\xaa\x02\x47\x92\xf9\x6c\x1a\x5c\xa4\x06\x2b\x2c\x2d\xbc\x83\xa5\x56\xf5\xd1\xfd\x1a\x6e\xd3\x9b\xb6\x82\x2b\xa8\x64\x2d\x2d\xbc\x4b\x49\x4c\x25\x86\x9d\x71\xc5\x11\x26\xb1\x60\xb3\x16\xf5\xfe\xb3\xda\xd1\xf9\x6c\x9a\xf7\x92\xc2\x43\xc9\x1b\x3a\x8a\x4d\x19\x49\xe4\x32\x98\x83\x9f\xc6\xd0\xc8\x0a\x46\xa3\xfe\xcb\xbc\x54\x01\xc2\x47\xf5\x59\xed\x4c\x90\xde\xb3\xb0\xba\x45\x92\xf8\x81\x4d\x1c\xd4\x3d\xa0\xd8\x08\xef\xff\x0d\x00\x00\xff\xff\x11\x78\x7a\x02\x1b\x07\x00\x00")

func daoTplBytes() ([]byte, error) {
	return bindataRead(
		_daoTpl,
		"dao.tpl",
	)
}

func daoTpl() (*asset, error) {
	bytes, err := daoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dao.tpl", size: 1819, mode: os.FileMode(420), modTime: time.Unix(1573028300, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x95\x4f\x8f\xda\x3c\x10\xc6\xef\xf9\x14\x23\xeb\x3d\x38\x6f\x77\x93\x3b\xab\xa8\xed\xfe\x69\x55\x69\x55\xa1\x16\xda\x23\x0c\xc9\xa4\x58\x24\x71\x6a\x4f\x96\x22\x94\xef\x5e\xd9\x09\xdd\xed\x12\xa2\xc2\x05\x64\xcf\xcc\x33\x3f\x3f\x83\x4d\x1c\x03\x7c\xa4\x8a\x0c\x32\x65\xb0\xda\x81\x2d\x30\xdd\x90\x09\x54\x59\x6b\xc3\xb0\x66\xae\x21\x37\xba\x04\x11\xc5\x6e\x21\x6e\x82\x43\xcc\xb2\x36\xd4\x07\xdf\xc5\x7e\xf5\x22\xfa\x3f\xa0\x85\x54\xeb\x8d\x7a\xce\x69\x58\x15\x36\xee\x36\x5d\x2a\xfd\xf2\xa9\x79\x53\xa5\xac\x74\x05\x33\xdc\x90\x54\x59\x08\xfb\x00\xc0\x10\x37\xa6\xf2\x04\xd1\x0f\x62\xb9\x8c\xb1\x56\xf1\x7e\x1f\x3d\xea\x2d\x99\xcf\x58\x52\xdb\xc6\xff\xed\x55\xd6\x2e\xc3\x9b\xa0\x3d\x56\x7b\x54\x96\xe5\xcf\x86\xcc\x6e\x58\x50\x0c\x08\x8a\x2b\x9f\x0a\x50\xa3\xc1\xd2\x4e\xc0\xd7\x07\x00\xed\x70\x8f\x3b\x43\xc8\x24\x57\x3a\x1b\x68\x52\x6b\x7b\xb2\x8b\xaf\x18\x94\x9c\xd7\x99\x93\x54\x59\x9f\x74\x2c\xdb\x8c\x9a\x31\xa6\x3d\x45\x4e\xd7\x63\xd2\x3e\x7e\xa1\xf8\x3d\x15\xc4\xc3\xf3\xcb\xba\xd0\xd9\x23\xbc\x75\x3c\xbd\xee\x89\x49\x8e\x48\x2f\xcf\x1c\xa6\xef\xd6\x59\xe4\x33\xcf\x77\xa9\xf7\xe7\x92\xbe\xfd\xd8\xc7\x1b\x9f\x98\xfc\x65\x6d\x3f\xf9\x8b\x2a\x73\x55\x50\xd7\xea\x09\x0d\xe4\xda\x94\x90\x40\x45\x5b\xf8\xa0\x4d\x79\x8f\x8c\x32\xbc\x09\xc0\x07\x22\xac\x6b\xaa\x32\x29\x5c\x8d\xb8\x02\xf7\xd5\x7d\x46\x15\x96\xe4\xf3\x8e\x2e\x40\x07\xdc\xbd\x0a\xc7\xdc\x4e\xf6\xc0\xbd\x26\xcc\xc8\xd8\x49\xbf\x04\x10\x77\xba\x62\xaa\xf8\x7a\xb6\xab\x49\x4c\x40\x94\x4d\xc1\xaa\x46\xc3\xb1\xab\xbb\xce\x90\x51\xf8\xdc\xf6\xf4\x31\x1f\xfc\x5a\x3e\x1f\xb1\x31\x05\x24\x9d\x51\x46\xa7\x64\x6d\x44\xd5\x53\xf4\x6d\xfe\xb0\x78\x3f\x9d\x2e\x6e\xd1\xd2\xfc\xcb\x23\xbc\xf1\x19\xdd\xed\xed\x24\x5f\xc1\xbf\xc5\xd4\x15\x2f\x58\x6f\xa8\x4a\x44\x5f\xe0\x9f\xc1\xc8\x32\x32\x45\x3e\xe2\x3c\x29\x74\x8a\x8e\x25\x5a\x1b\xca\x21\x71\x04\x83\xa8\xdf\x69\xf5\x55\xa7\x1b\x3a\xd0\xaa\x1c\xe4\x18\x63\x92\x80\x10\x61\x6f\x57\x6f\xbc\x3c\x78\xb7\xb5\x93\x38\x3e\x60\xbd\x64\xd0\x96\xff\xec\x76\xe7\xdb\xd2\xca\xfa\xbe\xff\x74\x44\xe8\x9f\x75\xf7\x88\xce\x5c\x44\x86\x7e\xdf\x8f\xbf\x0d\x5e\x91\x8c\xf0\x47\x86\xea\x02\x53\x92\xc2\xff\xb3\x5c\x39\x66\x11\xfe\xe5\xfc\x79\x64\x43\x5c\xfe\x47\xf1\x3b\x00\x00\xff\xff\x12\x70\xb9\x58\xe7\x06\x00\x00")

func jsTplBytes() ([]byte, error) {
	return bindataRead(
		_jsTpl,
		"js.tpl",
	)
}

func jsTpl() (*asset, error) {
	bytes, err := jsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js.tpl", size: 1767, mode: os.FileMode(420), modTime: time.Unix(1569289381, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _markdownTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x52\xcd\x6e\xd3\x4c\x14\xdd\xcf\x53\x5c\xb9\xd5\xb7\x4a\xeb\xae\x2d\xd5\xdf\xa2\x0b\x36\x88\x15\x62\x01\x42\xaa\x89\xa7\x25\xd4\x3f\xc5\x76\x84\xa2\xc9\x48\xa1\x0a\x10\x14\x9a\x54\x22\x2d\x25\x25\x85\x40\x52\x75\x43\x1a\x24\x0a\x6d\x1c\xda\x97\xf1\x8c\x9d\xb7\x40\xf6\x38\x28\x81\x12\x58\x30\xab\xb9\x47\xe7\x9e\x73\xee\xcc\x95\xe5\x6b\xd8\xc2\x8e\xe6\x61\x1d\xee\x15\xc0\x35\xb4\xec\x06\x76\xd0\x1c\x10\xb2\x78\x43\x33\x31\xa5\x88\x7d\x7c\xc5\x7b\xa7\x6c\x67\x1b\x8a\xc0\x4a\xc3\xf0\x93\xcf\x0e\xab\x50\x84\xe8\xe4\x33\xdf\xaf\xa1\x85\xf1\x29\x2e\x5c\x75\x45\x84\x38\x9a\xb5\x8e\x61\x3e\x97\x99\xcf\xda\x86\xb2\xbc\xb8\x62\x1b\x79\xd3\x72\x29\x05\x42\x62\x28\x05\x84\x1d\x14\xc7\xe8\xcd\xc2\xe6\x54\xbd\x62\x9b\x26\xb6\x3c\x4a\x11\x21\xd8\xd2\x29\x45\x68\x6e\x0e\x1e\xb8\xb6\x15\x76\x06\xc1\x45\x15\xad\xae\xae\xc6\x15\x22\x33\x3d\x01\x40\xba\xc2\x57\x52\x52\xf0\x36\x76\xec\x5b\x9a\x91\xc7\x94\x66\x7e\x38\xd1\x58\x3c\xf1\xe3\xb5\x2e\xab\x7f\x88\x2e\x1b\xec\xe0\xf0\x17\xdf\x44\x3c\x6b\xeb\x58\x52\x96\x32\xa2\x32\xb1\xeb\x6a\xeb\x58\x52\x24\x7b\x43\x4a\x31\x5d\xf3\x34\x49\x11\xf4\x7f\x16\x55\x88\x89\xb8\xf1\x7d\x32\x34\xab\x1c\x30\x7f\x00\x48\x85\x4d\xdb\xf5\x92\x37\x03\x56\xe9\x83\xac\x6d\xe6\x64\x42\x16\xaf\xdb\x8f\xb0\x93\x7e\x77\xc2\x7f\x72\x2c\x7e\x3d\xb8\xec\xf1\xc6\x79\xdc\x97\x9f\xdd\x26\x2b\x39\x1d\xc4\x03\xbd\x78\xc6\x7a\xcd\xc9\xf6\xc4\x57\xf3\xb2\xf7\xff\x42\x41\x55\x21\xb8\xa8\xb2\xa3\x2d\x48\x5b\x88\x34\x7a\x53\x8a\x8e\x1e\x0b\xa9\xb0\x59\x16\xca\x92\xc2\x4a\x43\xfa\x87\x34\x62\xf4\x77\xa3\xd7\x1d\xa4\x82\x8e\x0d\xec\xe1\xdf\xb3\x21\x66\x47\xb5\xaf\xac\xbe\x17\x9c\x95\x78\xab\x8d\x54\x58\xc7\xde\xec\x61\x05\x9f\x75\x9a\x33\xf9\x48\x05\xfe\xb6\x1b\x9d\xbc\xe7\xad\x76\xe0\x7f\x09\xfc\xee\xc3\x3c\x76\x0a\xac\xbe\xc5\x77\xfb\x7c\xef\x9c\x0d\xeb\xa1\x5f\x66\x3b\x95\xcc\xc8\xdf\x8f\x7a\x9d\xff\xed\xb5\x35\x17\x7b\xcb\x4b\xff\x19\x39\x33\xe7\x2d\x2f\x21\x15\xa9\x20\x76\x0e\xa9\x30\xde\x37\x15\x08\x52\x61\x7a\xe7\xd2\xfa\xa7\xad\x4b\xd1\xf1\xde\x89\x32\x81\x3c\xdb\xd3\x8c\xb8\x13\x64\x99\x7d\x7b\xc9\x9e\x6f\x4f\x25\x3d\xab\x86\xcd\x32\x2f\xf9\xbc\xd5\xe6\xbb\xfd\x4c\xd8\x38\x0e\x06\x35\x56\x79\x3a\x6a\x9f\x4e\xaa\x08\xe1\x3b\x77\x53\x2c\x1e\x98\x8a\xa0\xdf\x03\x00\x00\xff\xff\x2c\x19\x42\x29\x60\x04\x00\x00")

func markdownTplBytes() ([]byte, error) {
	return bindataRead(
		_markdownTpl,
		"markdown.tpl",
	)
}

func markdownTpl() (*asset, error) {
	bytes, err := markdownTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "markdown.tpl", size: 1120, mode: os.FileMode(420), modTime: time.Unix(1563850859, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6f\x9b\x40\x10\xc5\xcf\xcc\xa7\x18\xa1\x1c\x40\x4a\x77\xdb\x6b\x25\xf7\xe2\x4a\x55\x5a\x27\xa9\x45\x7a\xaa\x7a\x58\xc3\x84\x6c\xb2\x7f\xf0\xee\xa0\xd4\x5a\xed\x77\xaf\xc0\xc4\x72\x9a\x1e\x2a\x38\xf0\x06\xde\xfc\xe6\x0d\x2b\xe5\x17\x72\x14\x14\x53\x87\xbb\x03\x46\xa3\xda\x27\x0a\x20\x25\xab\x9d\x21\x4c\x49\xdc\x28\x4b\x39\x83\x94\xcd\x76\x03\x52\xa6\x24\x1a\xee\x9a\xed\x66\xae\x4d\x2f\x27\x81\xef\x3e\x61\xaf\xf9\x61\xdc\x89\xd6\x5b\xf9\x68\xbd\x0e\xde\xc9\xb8\x37\xbf\x8f\x9e\x97\x0f\x67\xd7\xda\x9b\xd1\xba\xb8\x74\xdb\x6e\x16\x9d\x33\x0c\xaa\x7d\x52\xfd\xcc\xdd\xf8\x67\x0a\x0b\x1c\xb4\x1d\x7c\x60\xac\x20\xee\x8b\xf2\x0c\x74\xad\x22\x53\xb0\xda\x75\x51\xc6\xfd\xa8\x43\x20\x53\x42\x0d\xd0\x7a\x17\xb9\x82\xa2\x61\xc5\x74\xfb\x6d\xf5\x7e\x79\xfc\x4c\x66\xf5\x01\x6a\x40\xe0\xc3\x30\x73\xd6\xca\x92\x59\xab\x48\x47\x16\x46\x0e\x63\xcb\x09\x10\x11\x53\x0a\xca\xf5\x84\x17\xfa\xf2\xa2\xf5\xe6\xe3\x4a\x9c\x46\xc5\x94\xa6\xd2\x1b\xfb\x52\xbe\x3b\x0c\xe7\x4a\xf5\x67\x0e\x6f\x2d\x39\xce\x79\x41\x90\xeb\x72\x86\x0c\x90\x92\xbe\x47\x71\x15\x7f\x44\x0a\x77\xd3\xfa\x73\x86\xfb\xd1\xb5\x58\xa5\x24\xae\x9c\x66\xad\xcc\x91\xfc\x37\xb5\xc6\x6b\x15\xe2\x83\x32\x5f\x9b\xdb\x9b\xaa\xc6\xea\xe7\xaf\xdd\x81\xe9\x12\x29\x04\x1f\x6a\x4c\x50\xcc\x71\xd9\x0e\xff\x70\x43\xf1\xaa\xbf\x48\x49\x7c\x57\x31\x3e\xfb\xd0\x1d\xe3\xbe\x09\xb9\xc2\xb2\x84\x22\x10\x8f\xc1\xe1\x63\xf4\x4e\x2c\xfc\x8a\xed\xf0\x7a\xda\xba\x86\x0c\x2f\x21\xff\x3b\xce\x1c\x7f\x12\x55\x3d\xfd\x10\xed\x7a\x4c\x78\x22\x96\xa7\x63\x59\x4e\x7b\xc3\xe9\x9e\x2f\xfc\x13\x00\x00\xff\xff\xe0\x18\x7f\x11\xcf\x02\x00\x00")

func modelsTplBytes() ([]byte, error) {
	return bindataRead(
		_modelsTpl,
		"models.tpl",
	)
}

func modelsTpl() (*asset, error) {
	bytes, err := modelsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "models.tpl", size: 719, mode: os.FileMode(420), modTime: time.Unix(1563850859, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\x62\xaa\x93\xb4\x10\xe8\x4b\xd1\x43\x0b\xa3\x48\x9d\xb4\x0d\x9a\xb6\x01\x92\x6d\x0f\x41\xb0\x18\x4b\xe3\x98\x8d\x44\xaa\x24\x1d\xc7\xe0\xea\xbf\x2f\x48\x5a\xf1\x97\xec\x38\x27\x25\xd6\xcc\x7b\x6f\xe6\x3d\xd2\x1e\x8d\x7e\x23\x49\x1a\x2d\x55\x30\x5d\x81\xa9\xb1\x7c\x26\xcd\x5a\x2c\x9f\xf1\x89\xc0\x90\x7e\x11\x25\x31\x26\x9a\x56\x69\x0b\x19\x4b\xd2\x27\x61\xe7\x8b\x29\x2f\x55\x33\xfa\xaf\x51\x42\x2b\x39\x32\xff\xd7\xaf\x29\x4b\x52\xe7\xd2\x27\x65\x74\x39\x6a\x54\x45\xb5\x49\xbf\x02\xbf\x0e\x8d\x37\x62\xaa\x51\xaf\xba\x6e\xe4\x1c\xff\x0b\x1b\xea\xba\x9d\x7a\x53\xaa\x96\x06\xca\x53\x96\x33\xc6\x66\x0b\x59\x42\x66\xe0\xd3\x5d\x94\x93\xdf\xe3\x33\x39\xc7\x27\xd8\x50\x3d\x41\x43\x11\x31\xab\xd0\x22\x7c\x72\x8e\xdf\xa8\x25\xe9\xf8\x21\x3f\xac\xcb\x49\x6b\xa5\x1d\x30\x00\xd2\x1a\x7e\x1c\x83\xe1\x15\x2a\x7e\x02\x35\x07\x96\x68\xb2\x0b\x2d\x21\x36\xb1\x6e\x40\xd6\x8d\x30\x76\x00\x40\xcd\x66\x86\x6c\x51\x8b\x46\x58\x58\x08\x69\x7f\xf8\xbe\x30\x84\xba\x9c\xc3\xfb\x5a\xb3\x87\xc7\x77\x8b\x0a\x21\x6d\x11\x86\xca\x1d\xb0\xe4\x05\x35\x2c\xe7\xa4\x09\xc2\x5a\xf9\xbf\xfe\x6f\xc3\x92\xf0\xd9\x18\xdb\x96\x64\x95\x85\x7f\x8a\x58\xf0\x77\x10\x78\xe3\xf5\xed\x88\xcd\x73\x96\x38\x27\x66\x30\x51\xd2\xa2\x90\x06\xf8\xdd\x52\xd8\x72\xee\xa9\x21\x35\x16\x2d\xa5\x5d\x07\x2c\x39\x8e\x1d\xc8\xb3\x58\xfb\xdd\xf8\xe7\xb4\xd8\x9b\xe6\xce\xbf\xb8\xa4\x3a\xf7\x2b\x76\x8e\x64\xd5\x75\xa7\xa4\xea\x8a\x74\x96\x3a\xc7\x6f\xb5\x68\x50\xaf\xfe\xa0\xd5\x44\xd5\x8b\x46\xf2\xf8\x88\xb0\x50\x91\x29\xd3\x80\xe9\xed\x2b\xac\xb2\x58\x17\x3b\x6e\x1f\x31\x2b\x90\x71\xce\xb7\x1c\xdf\x42\x38\xee\xfd\x44\x13\xda\xa1\xf8\xec\xce\xfb\x91\x78\xc6\xdd\xf3\x6b\xf3\xd9\x90\xbe\xc7\x69\x4d\x7e\x35\xc9\x21\x80\x7f\x2f\xb1\xa1\x7e\x11\xbb\x78\x30\x06\x63\xb5\x90\x4f\x86\xdf\xab\xd0\x99\x7d\x14\x22\x1f\xa4\xbd\x45\x63\x96\x4a\x57\xc7\x69\xf9\x95\x2c\xf5\xaa\xb5\x7d\xe5\x00\xf1\x69\x10\x4f\x2c\x66\x6b\xc7\x0e\x57\x75\x6d\xae\x5e\x85\xb1\x1f\x9f\x07\x1c\x4b\x92\x9d\x13\x5d\xaa\x8a\xf8\x45\xad\x09\xab\x55\x00\x65\x49\xd2\x6d\x25\x72\x9b\x02\xbe\x02\xbf\x58\x58\xd5\xa0\x15\x65\x34\xfe\x73\x5b\xa1\xa5\xab\xd7\x56\x93\x31\x42\x49\x7f\x2a\xf6\xae\x97\x33\x13\x72\xde\x55\x13\xf9\xde\x8f\xdb\x07\xd2\x96\xc0\xd1\x19\x0f\xa7\x63\x09\xc0\x5a\x65\x9c\xee\x4c\x41\x7e\xba\xe1\x89\x6e\xd1\x96\xf3\x81\x7e\x51\x41\xbc\x32\x17\x81\x01\x1a\x6c\x1f\x62\x9e\x1f\x85\xb4\xa4\x67\x58\x92\x7b\xf7\xd0\x88\x19\xbc\xf8\xf3\xab\x9e\xbd\x21\x11\xea\x21\x1d\xc8\xdf\xd6\x25\x92\x3e\xfe\xe4\xeb\x43\x54\xda\x75\x59\x8f\xf0\x82\x35\xcf\xa2\x0c\x9f\x51\x8f\xdf\x97\xbe\xd5\x0e\x9e\x80\xfe\x65\xe8\x4a\xce\x15\x02\x63\xe8\x1b\x7d\x5f\xb7\x17\x4e\x9f\xce\x3d\xb3\xfe\xc4\x76\xcf\xaf\x1d\xbb\x8e\x6f\x7b\xbd\xe7\x7c\xd8\xa5\x4b\xaa\x69\xd0\xe6\xde\xa6\x8d\x11\x3b\x7c\x27\xfa\x72\x08\x54\x43\xbe\x1d\xd0\xc3\xf0\x77\xf4\x2f\x2b\xff\x3c\xfb\xfb\x3f\x1e\x2c\xa5\x01\xb6\x74\x26\xa7\x7e\x04\x6c\x11\xac\xe5\x46\x69\x5f\x36\xd2\x8e\x19\xbd\xbe\x7c\xf3\xf5\xd3\x67\x64\x8e\x66\x5e\x15\xf0\xc5\x07\x69\x1a\xba\x78\xff\x2b\xec\x57\xad\x9a\x37\x88\x87\xc7\xe9\xca\xd2\x26\x32\x45\x5f\x7d\x49\x33\x5c\xd4\x76\xa2\x8c\xcd\x37\x8b\x0e\xf8\x59\x00\xcf\x07\x25\xfe\x83\xb5\xa8\x0e\x04\x16\x14\x95\x53\xd5\x2e\x37\x6a\xa7\x4a\xd5\x5e\xeb\x1a\x5c\x8a\x1a\xc6\x6f\x6a\x27\xaa\x69\x51\xd3\xef\x68\xe6\x17\xb2\xda\xd7\xbb\x8d\x97\x17\xb0\x3f\x45\xce\x3a\x60\xeb\xe8\x7e\x0b\x00\x00\xff\xff\xe9\x1b\x7e\x94\x7f\x0a\x00\x00")

func serviceTplBytes() ([]byte, error) {
	return bindataRead(
		_serviceTpl,
		"service.tpl",
	)
}

func serviceTpl() (*asset, error) {
	bytes, err := serviceTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service.tpl", size: 2687, mode: os.FileMode(420), modTime: time.Unix(1573028290, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vueTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x6d\x6f\x1b\xc7\xf1\x7f\xaf\x4f\x31\x59\x38\x01\x99\xf0\x4e\x72\xfe\x08\xfe\xc8\x89\xc7\x1a\x51\xda\x22\x68\xd1\x06\x68\xf2\xca\x30\x82\xd5\xdd\x92\xdc\x7a\xef\xa1\xbb\x4b\x3d\x84\x20\x50\xb4\x49\x6c\xa7\x4d\xe4\xa2\xa9\x90\xe6\x01\xb6\x0b\xa7\x4f\x80\x15\xbf\x28\x5c\x3b\x56\xd2\x2f\x23\x52\xce\xab\x7e\x85\x62\x77\x8f\xbc\xbd\x07\x8a\x94\xa3\x04\x35\x50\x40\x20\x8f\xbb\xb3\x33\xb3\x33\xbf\x99\x9d\x9d\x13\x40\xfb\x29\xc7\x81\x1f\x92\x98\x70\x2c\x49\x08\x9b\xbb\x20\x18\x0e\x2e\x13\xee\x38\x1d\x58\x69\x4b\x12\xa5\x0c\x4b\xd2\x59\x01\x68\x13\xe6\x04\x98\x87\xea\x19\xa0\x1d\xd2\x2d\x10\x2c\x91\x3e\xea\x13\x1c\x12\x8e\xcc\xb8\xa1\xeb\x26\x3c\x02\x8f\xc6\x8c\xc6\xc4\x47\x92\x0f\x08\x82\x2d\x27\x4a\x42\xc2\x7c\x24\x08\xe6\x41\x5f\x91\x20\xb8\x20\x06\x9b\x11\x95\x6e\x8c\x25\xdd\x22\x6e\xca\xc9\x16\x89\xa5\x8f\xe2\x24\x26\x33\x8e\x39\x4f\x87\x4a\x12\xe5\xc3\x66\x82\xc6\xe9\x40\x42\xca\x49\x97\xee\x38\x34\x48\x62\x1f\xa9\xd1\x20\x89\x1d\x23\x0a\x41\xc0\x08\xe6\x78\x93\x91\xa9\x16\xae\xe4\x34\xb2\x55\x71\x69\x8a\x20\x65\x38\x20\xfd\x84\x85\x84\xfb\x68\x72\xe3\xb3\xc9\xb5\xaf\xc6\xef\xbc\x3d\x3e\x78\x80\x3a\xed\xd5\xa9\x24\x4b\xab\xd5\x82\x5a\xb0\x9c\xba\x9b\x03\x29\x93\x18\xe4\x6e\x4a\x7c\x94\x72\x1a\x61\xbe\x8b\xe0\x42\xc0\x68\x70\xd9\x47\x3f\xcb\x34\xae\xdd\x47\x67\x72\xe3\xb3\x47\x9f\xff\x49\xcb\x35\x6c\xe6\x30\x9f\x72\xe3\x44\x10\x69\xd9\xbb\x33\xb9\xff\xf6\xf1\xdf\xbe\x30\x6c\x26\x9f\xde\x3a\x7a\x78\xaf\x96\x59\x69\x67\x2b\xa5\xd1\xd9\x80\x42\x4f\x8d\x58\x1a\xa5\x09\x97\x5d\xca\x88\xbb\x45\x05\xdd\x64\xc4\x37\x18\xe0\xc9\x20\x0e\xcb\x5b\x0f\x18\x16\xc2\x47\x0a\x5b\x19\x23\xd4\x69\xd3\xe9\xf0\xd4\x04\x83\x94\x25\x38\x7c\x5e\x79\x82\x76\xc6\x9f\x1f\x8e\xdf\xfe\xec\xd1\xad\xbf\x4e\x6e\x1e\xda\x1b\x00\xc7\x59\xa4\xdb\xf7\x77\x94\x6e\xa8\xac\x84\xd1\x6c\x39\x55\xc2\x64\x3b\x56\xca\xe4\xba\x5c\xf9\xe2\x64\x5d\xaa\x6a\x04\x9c\x60\x39\x33\x0f\xf8\x60\x0c\xb4\xac\x56\x25\x7c\xa4\x6c\x20\x50\x67\xf2\xcf\x87\xe3\x77\x6f\xd6\x38\xd4\x04\xab\xdc\x65\xc4\x47\x3a\x14\xbc\xcd\x44\xf6\x95\xfa\x21\xdd\xca\xe2\xd9\x7a\x24\xcc\x91\x3a\x58\xbc\x10\x4b\xec\x23\xfd\xc3\x55\xcf\x68\xca\x65\x9b\x86\xb2\xef\xc1\xf9\xb5\xb5\xa7\x55\x10\x13\x46\x02\x49\x93\xd8\x09\xfa\x38\xee\x11\x05\xe3\x6c\x64\x43\x0f\xa8\xe8\x57\x16\xa3\x71\x6f\xca\x2e\xfb\x59\x48\x1b\x7a\xc6\x09\x12\x36\x88\xa6\x01\x32\x63\x8d\x40\xcb\xf4\xd1\x0b\x2f\xa0\x02\x20\xed\x45\x39\x82\x87\x43\xae\x04\xc3\x39\xda\x3a\x17\x24\xcc\xf3\xdd\x0d\x4d\x21\x46\xa3\x79\x02\x19\xde\x54\xe9\x69\x38\x54\x0b\xdc\x0d\x1c\x11\xb6\x81\x05\xf9\x09\x8e\xc8\x68\x64\x27\xa3\x69\x56\xd4\xf9\xcf\x11\x41\xa2\x15\x55\x5f\xa8\x10\x8f\x22\xc5\x71\x07\xda\xed\x36\xe8\x49\x97\x27\xdb\xee\x94\xbb\x16\x69\x58\x43\xa7\xd3\x81\xf6\xaa\xa6\xb6\x22\xd0\xce\xbd\x0b\x36\x0b\xc3\x21\x89\xc3\x85\x3b\x9b\xfc\xfe\xbd\xa3\x2f\x3f\x79\x9c\x9d\xe4\xf8\x15\xf4\x4d\x45\x12\x61\xc6\x2a\x68\x4d\x19\xa6\x39\xc2\x07\x69\xa8\x10\xae\x8f\x02\x1f\x7e\xba\xf9\x73\x12\x48\x17\x0b\x41\x7b\x71\x63\x38\x6a\xcd\x4c\xd2\x5c\xcf\x28\xcb\xb1\x50\x84\x38\x09\xa9\x44\x1d\x58\x9c\xfb\x6a\x34\x0c\x15\x14\x78\x9e\x64\x5f\x26\x8c\x48\xd2\xc8\x55\x28\x0b\x0b\x35\x41\x96\xf5\xab\xc9\x71\x49\xd7\xe4\xc3\xf6\x99\x69\x02\x28\xc2\xbc\x47\x63\x87\x91\xae\xf4\xe0\xf9\xb5\x74\x67\x3d\x1b\x91\x49\x6a\x06\x50\x4d\xf6\xd8\x72\x44\x3f\xd9\xf6\x51\x34\x60\x92\xa6\x8c\xcc\xc2\xcc\x65\x24\xee\xc9\x7e\xc5\x25\xd3\x1d\x6f\xa8\xaf\x97\xb0\x0c\xfa\xaf\xaa\x0f\xd4\x99\x5c\x7b\xf0\xf5\x95\xbd\xa3\x7f\x1d\x4c\x3e\x78\x50\x97\x31\x4e\x2f\xb3\x6c\xe4\x5c\xe4\xcb\x99\x35\x8d\xcc\xf1\xd5\x9b\x5f\xff\xf1\x76\x45\x66\x29\x01\xa5\xb8\x47\x55\x51\x90\xc4\xe0\xf5\x69\x48\x1c\x75\x0a\xd2\xb8\xc7\x88\x9a\x9a\x15\x15\x59\x6a\xcc\xa9\x11\x6c\xe2\xe0\x72\xcf\x24\x4e\x86\x77\x93\x81\xf4\x91\xc6\x84\x68\x81\x4c\x24\x66\x2d\x55\x2a\x6c\xb5\x40\xb1\xe1\x2d\x88\xc9\x8e\x44\xe0\xe9\xa9\x69\x6e\xd2\x3f\x10\x78\x8a\xc4\x31\x78\xca\x92\x16\x8d\xa8\xb4\x27\x84\x8f\x2e\x9e\x5f\x6b\xc1\x0b\x6b\x2d\x95\x0c\x5b\xf0\xe2\x8b\x2f\x5e\x52\x19\x91\xbe\x49\xf2\x64\x48\xdf\x24\xd3\x3c\x78\x21\x18\x70\x4e\x62\x39\x9b\x7c\x15\xf7\xa6\x93\x16\x6a\xf2\x0d\x75\x56\x66\x36\x09\x29\x66\x49\x0f\x24\x95\x0a\x41\x26\xdb\x23\xf0\xb2\xb8\x71\xc5\x6e\x1c\x94\x0f\x96\x3c\x6b\xae\x95\x21\x65\x6a\xb4\xac\x26\xcb\x56\x99\xa2\x4c\xa7\x0b\x27\x4d\x04\x55\x0a\xf8\x88\xd3\x5e\x5f\x4e\x87\x33\x7e\xe7\x0b\xfc\x96\xcb\xb8\x19\x19\xed\x42\x9c\x48\xd0\x79\xf0\x15\xf1\xaa\x81\xea\x8f\xc8\xae\x45\x57\x28\xa0\x96\x4e\xcc\x76\x39\x38\xad\xf3\xb4\xb8\x8d\x24\x96\x98\xc6\xc2\xc8\x7c\x6d\x37\x25\x80\x68\x2c\xd1\x68\x14\x0f\xa2\x4d\xc2\x87\x43\xc2\x04\x19\x8d\x54\x51\x98\xa5\xd2\x82\x49\xea\xb2\x36\x02\x3c\x90\x89\x13\x24\x51\xaa\xd0\xed\xa3\xa4\xdb\x5d\xaa\x4c\xb4\x8d\x51\x4a\xdc\x35\xa9\xbc\x52\x72\xe5\x75\x77\x37\x49\xa4\x0a\xb8\x2c\x06\x0c\x3a\x9c\x6c\xb4\x58\x3b\x2f\x2a\x3e\xba\x98\x09\x82\x3a\xe3\xbd\x7d\x98\xdc\xbb\x5a\x9f\xf5\x16\x96\xae\x1b\x9a\x2b\xea\x1c\xdf\x3a\x80\xf1\xc1\x47\x75\x59\xc5\xae\x37\x66\x80\x9e\x8b\xf0\xe3\xc3\xfd\x47\x5f\xfd\xae\x82\xf0\xe2\x71\xb1\x2c\xc2\xad\xe3\xe8\x71\x10\xbe\x1c\xba\x9f\x18\x70\x5b\xd6\xf8\xb6\xc0\x5d\x04\xf2\x77\x01\xeb\x4a\x1d\x71\x26\xb0\x7e\x5d\x73\x3d\x43\x58\xdb\x47\x6f\x05\xdc\x9b\xea\xc0\x4c\xd5\xc7\x69\x01\x6e\xad\x7c\xfc\x34\xbe\x64\x12\x7f\x72\x80\x5e\xb2\xca\x77\x03\xf6\xef\x06\xee\x55\xa8\x9c\x15\xe4\xed\x42\xf1\xf4\xb0\xcf\xfa\x20\x35\xc0\xdf\xbb\x7e\x7c\xfb\x0b\xef\xe8\xfe\xbb\x47\x87\x37\xc7\xd7\xdf\x1f\xdf\x7d\x67\xf2\xc1\x83\xf1\xde\x87\xe3\xf7\x6f\x4c\x3e\xb9\x36\xf9\xc3\xdd\xc9\x7b\x07\x95\x88\xa8\x36\x13\x66\x11\xf1\x7f\x6b\x4f\x17\xe2\xc1\xf4\x08\x80\x93\xae\x4a\x06\xfa\x8a\x0e\x9e\x75\x2b\xfd\x01\x65\xb3\x42\xcc\x53\x1c\x1d\x46\x85\x2c\x88\x50\x1f\x6a\x10\x81\xd7\x97\x32\x75\x38\xf9\xc5\x80\x28\x9a\x57\x22\xd3\x37\xf0\x34\x58\x0c\x77\x1f\x19\x73\x43\xc8\x71\x0f\x70\x60\xe2\xcc\xf6\xda\x9c\x36\x86\xe9\x1c\xe4\x64\x0a\x0e\x39\xa1\xa1\x79\xe3\x0d\xa9\x4a\xd3\x8e\xb2\xd2\xfe\x95\xa3\x87\xf7\x26\xbf\xd9\x1f\x5f\xbd\x3b\xb9\x73\x7b\x7c\xfb\xad\x7f\x1f\xfe\x76\x72\x75\xbf\x10\x33\x51\xe7\xf8\x57\x0f\xc6\x57\x1e\x1a\xf3\xb6\x57\x6d\x80\x5a\xae\x3a\x49\x1e\x4d\x51\x86\x4a\xf5\xd8\x19\xef\xfd\xfd\xd1\xaf\xbf\x34\xfc\xdc\x1d\x26\x76\x8c\x1e\x05\x66\xda\xf3\x86\xc1\x6c\x48\xdd\x64\xbf\x31\xba\xab\x6e\x3f\x2b\x74\x9b\x96\xe3\xeb\x99\x23\x4e\xc2\x77\x7e\x25\xb7\x01\x6e\xf0\xbd\x92\x0d\x9a\x96\xa8\x7d\x27\x5c\x69\x8b\x80\xd3\x54\xe7\x0d\xb3\x0b\x78\x16\xb0\x00\x9c\x52\xe8\xf2\x24\x02\x74\x61\x15\xa7\x74\x75\x38\x74\xb3\x04\xb4\xbe\x02\x40\x74\x5f\x0a\x42\xd2\xc5\x03\x26\x61\xa8\x85\x84\x58\xe2\x46\x33\xfb\x01\xc0\x89\x1c\xf0\x78\xf6\x13\xa0\x72\x27\xf3\xe0\xe2\xa5\xd6\x6c\x5a\x5f\x5a\x3c\x8b\x1e\x20\x6b\xbb\x78\xc6\x94\x2d\x6b\x46\xc9\x2a\x2e\x07\x73\x61\xf2\x60\xcd\x1e\x4b\xba\x5d\x41\x64\x69\x50\x5f\x8c\x3c\x38\xbf\x36\x1b\x1b\xe5\xd3\x79\x03\xd2\x83\xa1\x35\x6e\xca\xd0\xa2\x7e\x55\x2a\x80\xcc\xff\x99\xce\x75\x12\xcc\xc9\x7f\x16\x9c\xf2\xa4\x7a\x16\xdc\x72\x10\x97\xb8\x65\x59\xa6\x6c\xef\x79\x1c\xb3\xa7\xd1\xfa\x8a\x25\x20\x22\xb2\x9f\x84\x22\xe7\xdc\x23\xb2\x04\x18\x00\xd9\xa7\xc2\x2d\x74\xdc\xb2\xfe\xca\xfa\x8c\x04\xa7\xd4\x52\xc1\xfd\x31\x15\xb2\x51\x38\xec\x8b\xbd\x9b\xc2\x14\xc0\x70\x06\x08\x4b\x94\x19\x6a\x4d\x61\x61\x2b\xa1\x46\xa0\x60\xc6\x99\x9a\x39\x4e\x0a\xb3\xcd\x95\xfa\x67\x57\xf6\x49\xdc\xe0\x22\x05\xbf\x53\xb0\x6e\x61\xd7\x1a\xc2\xe0\x03\x17\xa9\x6e\x61\x9a\x81\xf5\x79\xe4\x8a\xc4\xa6\x56\x1f\x73\x89\x73\x8b\x6a\x7f\xd9\x74\xa3\x82\xa6\x81\x02\x54\x83\x70\xae\x55\x1d\x35\xa7\x94\x33\x3b\xe4\x5d\x80\xc6\x16\x66\x73\x1c\x68\xac\xaa\xfc\x57\xb6\xe7\xb3\xa0\x96\x81\x03\xe7\x9b\xeb\xc5\x95\x33\x4c\x54\x44\xe6\x5d\x89\x13\x44\x1a\xf6\x3e\x6c\xd9\x26\x5b\xc0\x58\xbf\x74\x30\xb1\xad\x7c\x59\x85\x63\xfd\xf5\x73\xbd\x96\x28\x6b\x1f\x0e\x47\xf5\x62\x72\xc8\x54\xc5\xe4\x73\x05\x06\xd9\xac\x79\xd1\x52\x67\x97\x6c\x62\x81\x0f\xd6\x96\xb6\x87\xb9\x17\x17\x18\x32\x22\xc1\x0a\x47\xb5\xfe\x5c\xf6\xbb\x51\xcc\xd6\xc1\x65\x4f\x87\x6b\x21\x2b\x93\x1d\xe9\x41\xd6\xce\x3d\xba\x7f\xc7\x75\x5d\x64\xcf\x8b\x94\xc6\x31\xe1\x1e\xcc\xaa\x8e\x69\xb3\xdd\xa6\xca\xfb\x64\x1e\x20\xde\xdb\xc4\x8d\xb5\x16\x64\x7f\xee\xff\x37\x51\x9e\x7d\x9a\x73\x73\x45\xb6\xb5\xb2\xc3\x4e\x13\xa5\x15\xb4\xd4\x44\x5b\xc5\xb6\xb0\x30\xc2\x2a\x1a\x34\x9a\x55\x05\x32\xb3\xb8\x01\x4b\x04\x29\x73\xaf\xf8\x31\xeb\x1a\xf3\x64\xbb\x82\x8d\x73\x41\x12\x77\x29\x8f\x1a\x68\x72\xe7\xb6\xf1\xcb\xf8\xee\x3b\xa6\xd3\xa9\x46\x3e\xbd\x65\x8a\xdb\x16\x4c\x3e\xfc\x7c\x7c\xfd\xcf\xc7\x0f\xff\x72\xfc\xf0\xce\xf7\x50\x0b\xb2\xa2\x18\xb5\x0a\xaa\x65\xec\x5e\xd2\xf5\xc8\x6b\xc6\xdd\xc7\xb7\x0e\xc6\x07\x1f\x15\x5c\x18\xe0\x38\x20\xac\x40\x35\xde\xdb\x9f\xdc\xbb\x5a\xa0\x52\x65\x90\x07\x68\x1b\xf3\x58\x61\x60\xa5\xde\x80\x73\x8d\x54\x74\xb9\xa6\xcd\x2d\xe1\x0e\x87\x6e\x7e\xf7\x33\xb7\xaa\xc2\xe5\xaa\x59\x5e\x3b\x1f\x0e\xb9\x35\xe3\x44\xd2\xee\xae\x2b\x06\x41\x40\x84\x68\xa0\xcc\x90\x57\xaf\x8f\xdf\xbd\x81\x4a\x00\x81\x13\x41\x52\xd9\x27\x9c\x94\x8e\xab\x56\x59\x98\xb8\x4d\x77\xa0\x10\xdc\xa5\x18\xc9\x28\xb4\x8e\xc5\xb6\xcb\xc9\x96\x6b\x41\x79\xc9\x69\xc2\xaa\xbe\x17\x52\x13\x5b\x15\x63\x4f\x3e\xfe\xc7\x64\xff\x6e\xbd\xb1\x1f\x37\x1a\x6b\x92\x6c\xe1\xfd\x60\xed\x09\x54\x29\x6e\x8b\xe7\x50\x9e\x5f\x4b\x2f\x1a\xaa\xa9\xdb\x0a\x4f\xeb\x15\xc4\xd7\xbf\xbc\x76\x74\xff\xce\xf1\x47\x6f\x4d\x3e\xbd\x75\xfc\xf1\x13\x19\x9b\x7a\x77\x85\xad\x2f\xf2\x49\xc6\xa5\xc6\x25\xf3\x2c\xf8\xc4\x9e\x55\x4a\x71\x1a\x0a\xf0\xe1\xe2\xa5\x7c\xb4\x9b\x70\x68\xe8\xa9\x38\x24\x3b\xfa\x20\xcf\x1e\xdb\x73\x60\x97\xbd\xe7\xca\xc8\x9e\x7b\xae\x59\x86\x83\x90\xa0\x3b\x5c\xfe\x1c\x06\x17\xf5\xc2\x4b\xb6\x6b\x68\x28\xdc\x74\x20\xfa\x0d\xb5\x70\x71\x12\x5d\xaf\x5c\x05\x2a\x69\xc6\x76\xdf\x10\x16\x71\xf4\x94\x61\x6a\x40\x36\x3f\xa1\x9c\x2a\x29\xff\x17\x9d\xda\xa5\x37\x9f\xd5\xe4\x50\xea\x10\xd6\xd5\x8a\xb5\x9d\x36\xfb\x12\x55\x0c\xa2\xaa\xa0\xff\xc5\xd0\x93\x13\x43\xc6\x7b\xb0\x6c\x0c\xb5\x6a\x51\xf4\x8d\x22\xcb\xbc\x1a\x38\x6d\x64\x9d\x84\xd5\x53\x5e\x4f\xbf\x85\x30\x34\xff\x76\x55\xae\x93\xdc\xe9\x70\x85\xde\xb4\x5b\xb5\x6b\xed\x35\x5b\x98\xeb\x33\x13\x7c\x4b\x1c\xc2\x69\xca\x68\xa0\x5f\x97\xaf\x6e\xc5\xa1\x9b\xa4\x24\xde\x89\x98\x72\x04\x96\xc2\x49\xba\x5d\x1a\x90\x30\x09\x06\x11\x89\xa5\x2b\x52\x4e\x70\x28\xfa\x84\xc8\x88\xb9\xfa\x1b\xe5\xda\xd3\x2e\xd8\x2d\x0e\x8d\x2d\xdd\x85\xd4\x62\x9f\xf2\x7d\x23\xff\x99\x67\x4e\x26\x2a\xe8\xb4\x9d\x4e\x95\xd0\x6d\xd4\x3c\xd4\x8a\x61\x60\xd0\x10\x11\x21\x70\x8f\xb8\x84\xf3\x84\x37\x90\xdd\x84\xd5\x3d\xd8\x9b\x87\xe3\xc3\xbd\x22\x2c\x4c\x5f\xb0\x0e\xe0\xcb\xa4\x9a\x42\xe0\xcf\x0b\x0d\xcb\x1f\x7a\xa7\xdf\xec\xe8\xd0\xff\xbe\x77\x02\xc0\xe7\x37\x7f\xcf\x18\xc4\x45\xfb\x34\xeb\xc0\x7c\xf2\x69\x56\x01\xae\xdd\x5d\xae\xa9\x44\x39\xe9\xaa\xe2\x5c\xcd\xba\x86\xb4\x06\xfc\xf9\x7b\x8a\x86\xb2\x41\x0b\x18\x15\xb2\xc2\xab\xe6\xad\x85\xca\xd3\xea\xdb\x4d\x93\xb4\xd1\xbc\x54\x61\x1c\x27\x31\x69\x34\x87\x06\x1f\xa3\x96\xe9\x64\x9b\xcb\xb7\xad\x6c\x69\xc3\x86\x4c\x2d\x1a\xad\xaf\xb4\x57\xa7\xdd\xed\x15\xf8\x4f\x00\x00\x00\xff\xff\xdc\x78\x49\x6f\x40\x2c\x00\x00")

func vueTplBytes() ([]byte, error) {
	return bindataRead(
		_vueTpl,
		"vue.tpl",
	)
}

func vueTpl() (*asset, error) {
	bytes, err := vueTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vue.tpl", size: 11328, mode: os.FileMode(420), modTime: time.Unix(1569289396, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"component.tpl":   componentTpl,
	"controllers.tpl": controllersTpl,
	"dao.tpl":         daoTpl,
	"js.tpl":          jsTpl,
	"markdown.tpl":    markdownTpl,
	"models.tpl":      modelsTpl,
	"service.tpl":     serviceTpl,
	"vue.tpl":         vueTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"component.tpl":   &bintree{componentTpl, map[string]*bintree{}},
	"controllers.tpl": &bintree{controllersTpl, map[string]*bintree{}},
	"dao.tpl":         &bintree{daoTpl, map[string]*bintree{}},
	"js.tpl":          &bintree{jsTpl, map[string]*bintree{}},
	"markdown.tpl":    &bintree{markdownTpl, map[string]*bintree{}},
	"models.tpl":      &bintree{modelsTpl, map[string]*bintree{}},
	"service.tpl":     &bintree{serviceTpl, map[string]*bintree{}},
	"vue.tpl":         &bintree{vueTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
