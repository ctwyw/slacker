// Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// component.tpl
// controllers.tpl
// dao.tpl
// js.tpl
// markdown.tpl
// models.tpl
// service.tpl
// vue.tpl
package mvctemplate

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _componentTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xcb\x6a\xdc\x4a\x10\xdd\xeb\x2b\x8a\xe6\x2e\x34\x17\x5b\xe3\xb5\x34\x1a\x4c\xb2\x4c\x30\x81\x2c\x8d\x17\x6d\xa9\x64\x35\xe9\x17\xdd\xa5\x49\x86\x41\x90\x6d\xc8\x97\x64\x95\x65\xfe\x28\x24\x7f\x11\xba\xf5\x18\x8d\x3d\xc6\x78\x23\x75\x55\x9f\x3a\xf5\x3a\xbd\x21\x54\x56\x72\xc2\x6d\x02\xb0\x41\x79\xe9\x51\x62\x45\x09\x00\xc0\xee\x52\x99\x1a\x65\x46\x4e\xa8\x92\x09\x6d\x3b\x62\xf1\xa2\x11\x92\xd0\xf1\x7b\x89\xd1\x74\xa8\x0c\x0d\x47\x2b\x79\x85\xad\x91\x35\xba\x92\xfd\xf9\xf9\xeb\xef\xd7\x6f\xbf\xbf\xff\x18\xa2\xae\x1b\x53\x75\xbe\x64\x0f\x48\x52\xf8\x91\x2a\x97\x86\xd7\x42\x3f\x94\x6c\x3c\x8c\xd8\xaa\xe5\xfa\x01\x4b\xd6\x72\x5d\x4b\xfc\x18\x8b\x1a\xae\x2a\x89\xfc\x98\x3b\xaf\x85\x0f\x46\x5d\xb2\xe9\x14\x60\xdb\x78\x19\xfa\x31\x96\x84\xd1\xd1\x0c\x1d\x35\xc6\x95\x4c\x10\x2a\x10\x1a\x8e\x65\x00\xe4\x9f\x70\x3f\xdc\x64\x87\x43\xf6\xc1\x09\xc5\xdd\xfe\x1d\xee\xdf\x1a\xd9\x29\x9d\x0d\xbf\x1b\xae\xb0\xef\xe7\x10\xc9\xef\x51\xbe\x36\x68\xc7\x65\x87\xaf\x0a\xda\x6e\xd6\x73\x23\x71\x4d\xeb\x79\x4f\xdb\x64\xb3\x3e\x6e\x30\xd9\xf8\xca\x09\x4b\x01\x24\x94\x35\x8e\xe0\x7f\xe0\x1e\xb8\x15\xd0\x38\xa3\x80\x5d\xaf\xb9\x15\xeb\xc3\x21\x1b\xf9\x8b\x04\x00\xbf\x44\x64\x8d\x0d\xef\x24\xc1\x21\xe6\xac\x39\xf1\x74\x35\x1a\x61\xc5\xd4\x39\x3d\x9b\x00\xe3\xb6\x72\x68\xb8\xf4\x78\x31\xfb\xa3\x4a\x72\x60\xec\xe8\x0a\x53\xce\xe1\xf6\x6e\x74\xf4\x45\x3c\xf4\x03\xc0\x3a\x63\x7d\x0e\x07\x88\x63\xc9\xe1\xa6\x53\xf7\xe8\x2e\x60\x5a\x66\x0e\x6f\x8c\x91\xc8\xf5\x14\xa0\x90\x5a\x53\x87\x90\x91\x6f\xa9\x90\x74\xb7\x5a\xd4\x28\x1a\x48\x69\x6f\xd1\x34\xb0\x83\xb2\x04\xa6\x23\x39\x5b\x62\x00\xa8\x15\x3e\xfb\x0f\x95\xa0\x74\xd4\xf8\x05\xec\x56\xc5\x33\x88\x41\x97\x8f\x20\x3d\xa0\xf4\xf8\x22\xeb\xd5\xcb\xac\x4b\x48\x3f\x0d\x6c\x1a\xe5\xf8\x70\xd2\x65\xfd\x91\x65\x5c\x06\x94\x40\xae\xc3\x23\x03\xb7\x62\x91\x30\x7b\x1f\x83\x97\x1e\x6a\x51\xa7\xce\x5b\x28\xb7\x27\xd5\x4f\xbc\xc2\x13\x94\xe0\xbc\xcd\x82\x1e\xe2\x67\xd9\x42\x7f\x42\x56\x71\xaa\xda\x14\x9d\x8b\x6c\xfd\xd3\x44\xe9\xea\xb9\x3c\x73\xfd\x51\x4d\xa7\x29\x8a\xc7\x63\x10\x5a\x9c\x9b\xc1\x50\xeb\xed\x5d\x71\xea\x8f\xc3\x0f\x93\x09\x46\x14\x59\x71\x2a\x90\xd9\x0f\x5b\xb8\x3a\x23\x8d\x79\xea\x67\x36\xb3\x54\xf2\xe7\xd0\xfe\x51\x96\xa3\x9e\x9b\x4e\x57\xe1\xdd\x3e\x2d\x78\x68\xa3\x38\x47\xa5\x4c\xa7\x09\xeb\x45\xcc\x93\x88\x80\xef\x8b\x64\xb3\x9e\x5e\x7c\xf2\x2f\x00\x00\xff\xff\x50\xb4\x2e\x04\xca\x05\x00\x00")

func componentTplBytes() ([]byte, error) {
	return bindataRead(
		_componentTpl,
		"component.tpl",
	)
}

func componentTpl() (*asset, error) {
	bytes, err := componentTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "component.tpl", size: 1482, mode: os.FileMode(420), modTime: time.Unix(1569292443, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _controllersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\xdf\x6f\xdb\xb6\x13\x7f\x16\xff\x8a\xfb\xea\xe1\x0b\x29\xd0\xa4\x74\x28\xfa\xe0\xc2\x0f\x8d\x13\xb4\xdd\x82\xd4\x5b\x92\xa7\xa2\x18\x18\xf2\xec\x10\x91\x28\x8f\xa4\xd2\x19\x9a\xfe\xf7\x81\x94\xd2\x5a\xb6\x28\x7b\x75\xb0\xf8\x49\xb1\x79\x77\x9f\x1f\x77\x47\x25\xcb\xde\xa3\x44\x45\x0d\x72\xb8\x5b\x83\xce\x29\x7b\x40\x05\x24\xcb\x96\x42\x82\x2a\x2b\x83\x8a\x64\x27\x84\xae\x44\xfa\xfe\xe2\x26\x0a\xb3\xba\x4e\x2f\xcb\xaf\xa8\xae\x68\x81\x4d\x93\x4d\x04\x0f\x13\x56\x4a\xa3\xca\x3c\x47\xa5\xd3\x1b\xfa\x80\x75\x9d\xce\x68\x81\xf9\x8c\x6a\x6c\xcf\xc5\xde\x0c\xfd\xe8\x4b\xa1\x8d\x2f\x7a\xfe\xe9\x7a\x5f\xf8\x4c\x21\x35\xde\xf2\xf3\xdb\x43\x08\xdc\xae\xf8\x58\x8e\x77\x37\xb3\x0f\x07\x64\x99\x53\xc3\xee\x7d\x49\xce\x2f\x2e\x2f\x6e\x2e\x0e\xc8\x72\x8e\x39\x0e\x62\x81\x11\x30\xfd\x14\x67\x16\xc8\x8f\xa0\x19\x48\xe3\x85\xe3\x95\x77\x20\x89\x57\x5f\x20\x27\x19\x21\x2b\xca\x1e\xe8\x12\x61\x23\x8e\x10\x51\xac\x4a\x65\x22\x12\x40\x58\xd7\xe1\xb2\xd4\x8a\x65\x45\xc9\x31\xd7\xe1\xdf\x90\x7e\x74\xbf\x5e\x8a\x3b\x45\xd5\xba\x69\x2c\x84\xae\x7a\x2f\x00\x95\x62\x25\xc7\x81\x88\x90\x04\xe1\x52\x98\xfb\xea\x2e\x65\x65\x61\x5b\xff\xa7\x65\x29\x05\xb3\x4f\xf6\x37\x89\x26\xbb\x37\x66\x65\x9f\xb5\x51\xac\x94\x8f\x21\x89\x09\x59\x54\x92\x01\xc0\x70\xd3\x46\x0c\x4e\x96\x42\xa6\xb3\x52\x1a\xfc\xcb\xc4\x00\x35\x01\x00\x78\xa4\x0a\xfa\x22\x6d\xfd\x99\xee\xe6\x22\x41\xb9\x58\x68\x34\xc9\x1f\x93\x69\x07\x20\x9d\x53\xa5\xf1\x56\x48\x13\xb1\xf4\x1c\x17\xb4\xca\xcd\x6f\x15\xaa\x75\x14\xb6\x67\xc3\x24\x3c\x0d\xe3\x04\x5e\x9d\x26\xf0\xe6\x75\x4c\xc0\x55\xcf\x45\x21\x0e\x4c\xe3\x8e\x76\x59\x5e\x9d\x26\x2e\x47\xc0\xd2\xeb\xfb\xb2\xca\xf9\x99\x90\xbc\x3d\xf7\xff\x3e\xfa\xd8\x96\xe1\xd4\xd0\xc4\x94\x86\xe6\x09\x2a\x35\x99\xc2\x35\xaa\x47\xc1\xd0\x33\xdf\x51\xc7\xae\x05\xb7\x9d\x2f\x08\x82\x5f\xae\x3f\x5d\x45\x2c\x01\xab\xe7\x87\x9a\x04\x41\x68\x2b\x84\x93\xae\x92\xfd\xc2\x55\x0b\x27\xd0\x56\x25\x41\x63\x2b\xc7\xa4\xf9\xe6\xd2\xf0\x62\x1a\x73\xc9\xe6\x3e\xc4\x9b\x21\x51\x6c\xac\x93\x02\x04\x4f\x00\x95\x82\xc9\x14\x7a\x9a\x7f\x74\x92\xcf\xa9\xa2\x45\x14\x0a\xfe\x5d\xe4\x40\x2c\x5c\xc0\xff\xa6\x20\x45\x0e\x96\xee\x13\x7f\x29\x9c\xa0\xb6\x8d\xd3\x2b\xfc\x1a\x3d\x3d\x9f\x51\xfe\x3b\xfe\x59\xa1\x36\x8e\xb5\xd5\x4c\xa1\xa9\x94\x24\x41\x03\x24\xb0\x60\x2c\xf2\xb9\x12\x05\x55\xeb\x5f\x71\x3d\x2b\xf3\xaa\x90\xdb\x54\xa6\x82\x5b\xc8\xb6\xf8\x77\xcb\x3c\xba\xb5\x0c\x61\xd3\x1d\xe7\x45\x5f\x75\xdf\x42\x7e\x06\xd9\x9d\xb6\x8b\x27\x69\x37\x2d\x70\x78\x5a\x7c\x6f\xfb\x4a\x82\xfb\xfc\x80\x9e\xd0\x7d\xbe\xa9\xea\xbe\xe9\x6a\x3f\x29\xe5\x25\xdb\x75\xc3\x98\x52\xbe\xad\x38\x24\x54\xf0\x2c\x4d\x75\x4c\x4f\x1d\xb1\xc8\xc6\x2c\xdb\x9a\xfc\xb7\xcf\x39\x06\x24\xd8\x05\xb7\x6f\x1e\x60\x0a\x82\x93\xa0\x3f\x0f\x5e\xa7\x76\xf7\xd6\x16\xde\x8d\xb9\xf0\x5c\xc8\x83\x6e\xbf\xb4\xd7\x81\x35\xba\x72\xac\x17\x02\x73\xae\x61\x0a\x05\x7d\xc0\xa8\xa0\xab\xcf\xda\x28\x21\x97\x5f\x84\x34\xa8\x16\x94\x61\xdd\xc4\xe3\x1e\x6f\x26\xda\x71\xf8\xc8\x3d\xd7\x37\xca\xa7\xb1\xe0\x49\x0f\xc4\x4e\xd9\x0d\x9f\x7c\x6f\x3c\xbe\xfd\x75\xb4\x57\x70\xfc\xb6\xef\xab\xe0\x65\x20\xb8\xaf\x45\xb3\x93\x8e\xfd\xe8\x4b\xdf\x8e\x04\xae\x55\x75\x47\x5d\xc8\xa5\xfe\x59\x48\xf3\xe6\xb5\x8e\x58\xea\x2e\xc5\x77\x4a\xd1\x75\xcb\x3e\x6e\x8f\x4e\x81\xae\x56\x28\x79\x24\xb8\x4e\xf6\x45\x7d\xfe\x12\xc6\x71\x9a\xa6\x71\x47\x71\x63\xf1\x8e\xe3\x14\x7b\x3c\x1e\x7b\x43\x1e\x22\xf9\xdf\x8d\xc3\xb1\x1b\xef\x25\xed\xf0\x4f\x9f\x4e\x60\x6b\xfe\xf6\x99\x73\xf0\xe5\xd8\xb9\xf3\x6f\x6f\x25\x78\xd6\x6b\xe9\x25\x4c\x18\xf6\xc0\xab\x9b\x1d\x89\x81\x4d\x13\x93\xc6\xfe\x13\xf6\x4f\x00\x00\x00\xff\xff\x2e\x18\xbb\xc9\x15\x10\x00\x00")

func controllersTplBytes() ([]byte, error) {
	return bindataRead(
		_controllersTpl,
		"controllers.tpl",
	)
}

func controllersTpl() (*asset, error) {
	bytes, err := controllersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "controllers.tpl", size: 4117, mode: os.FileMode(420), modTime: time.Unix(1575619965, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _daoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\xdf\x6f\xfa\x36\x14\xc5\x9f\xf1\x5f\x71\x97\x07\xe4\x54\x91\xd9\x57\x9a\xf6\x50\x09\x4d\x2a\x6d\xa7\x6a\xb4\x2a\xa5\xd5\x1e\xaa\x6a\x32\xf1\x85\x5a\x24\x31\xb3\x9d\x52\xe4\xf9\x7f\x9f\xec\x90\x0c\x0a\x15\xec\x89\x52\xee\x8f\x73\x3e\x3e\xf6\x60\xf0\x3b\x56\xa8\xb9\x45\x01\xb3\x0d\x98\x82\xe7\x4b\xd4\x64\xc5\xf3\x25\x5f\x20\x08\xae\x08\x91\xe5\x4a\x69\x0b\x14\x48\xe2\x5c\xb2\x50\x46\xe7\x83\x52\x09\x2c\x4c\xf2\x0f\xb0\xbb\xf8\xeb\x58\xce\x34\xd7\x1b\xef\x07\xce\xb1\x07\x5e\xa2\xf7\x09\x90\x94\x90\x79\x5d\xe5\x40\x05\x5c\x5c\x73\x95\xc2\x58\x1a\xeb\x1c\x1b\xf1\x12\x8b\x11\x37\xd8\x54\xd2\xf5\x3b\x6a\x04\x60\x8c\x85\x72\x7a\xb1\x50\xba\x64\xd7\x57\x69\xf7\x07\xd0\xd7\x37\xe7\xd8\x58\xad\x51\x37\x3d\xec\x70\x4c\x26\x2b\x9b\xa1\xd6\x4a\xa7\xe0\x08\x00\xc0\x07\xd7\x20\xb8\xe5\x30\x2c\xf9\x12\xcf\x9a\xf1\x73\xda\x75\x5a\x65\x79\x01\xb2\xb2\xa4\x87\x5a\xc3\xe5\x50\xb0\xa8\xe7\x3e\x78\xa7\x27\x47\x39\x9f\xb2\x91\xaa\x2b\x4b\xfb\x71\x52\xca\xa6\xb9\x5a\xa1\x69\xdc\x32\xc6\x52\x76\x2b\x2b\x41\xfb\x41\x61\xca\x6e\x82\xf0\xb8\x5b\xa3\xad\x75\x15\x85\x67\xb1\x33\x98\x22\x9e\x10\xe7\xd8\x3d\xda\x77\x25\x9e\xf9\x12\xbd\xff\x0a\x77\xa4\x91\x5b\x3c\x82\x37\x22\xb8\x38\x29\x38\x85\x08\xcf\x11\xe8\xed\xe9\x68\x5c\x37\xd3\xe9\xae\xd8\x03\x05\x2f\x2b\x71\x5c\xc1\xfe\x6e\x38\x57\x0a\x38\x12\x94\x0c\x06\xf0\x57\xd6\x1c\x01\x08\x26\x66\x31\x60\xe2\xe6\x13\x73\x9a\xd4\x71\x25\x74\xa9\x03\x83\xb6\xfd\x26\xa6\x93\xb1\xf7\xd0\xa4\xcb\x39\xf6\xa8\x65\xc9\xf5\xe6\x0f\xdc\x8c\x54\x51\x97\x15\x6b\x3e\x9a\xc6\xe1\xe5\xa9\x8a\x24\xdb\xd7\x9d\xc2\x2e\xa6\x96\xd3\x94\x7f\x20\xed\x7f\xa9\xfc\x0e\xd8\x23\xb7\xf9\xfb\x11\x5e\x52\x84\xdc\xfd\xfa\x4b\xb6\xb5\x57\xf2\xd5\xab\xb1\x5a\x56\x8b\x37\x59\x59\xd4\x73\x9e\xa3\xdb\xa1\x04\x41\x4a\xaf\x8b\xfb\x49\xbe\xa1\x3a\x54\xb2\xa3\x9e\xf7\x6b\x87\x52\x00\xe9\xed\x87\xa1\xb9\x02\x4d\x16\x9a\x43\x37\xb4\x91\xba\x63\xf5\xbf\xbc\x5e\x63\x81\x36\x26\x36\xfc\x53\xce\x81\xdd\x99\x17\x83\xfa\x99\xcf\x8a\x70\x66\x5f\xb1\x84\x7c\x1f\x8a\xbe\xda\x84\xcf\xff\x99\x66\x70\x40\x3a\xab\x61\x67\xc5\x4b\x3c\x66\x14\xbc\x87\x21\x34\x90\x0d\x7b\x56\x71\x3a\x3d\xb3\x33\x05\x68\x1f\x89\x16\xd1\x9f\x21\x75\x34\x39\xd2\xdb\x45\x0a\xbc\x1f\xfe\x96\x64\xe7\xee\x60\xb7\x52\x1b\xbb\x77\x03\xdb\x63\x81\xed\x0b\xb1\x8f\xf1\x10\xca\x9d\xb9\xf9\x94\xc6\xd2\x7a\xbb\x6a\xeb\x37\x85\x99\x52\x05\x38\xd2\x9b\x4e\xc6\xc1\x43\x62\xb0\xc0\xdc\xc2\x0f\x98\x6b\x55\xee\xdc\xae\xee\x2e\x7d\x6b\x2a\x78\x82\x42\x96\xd2\xc2\x8f\x84\xc4\x4c\x62\xd8\x19\x57\xec\x40\x12\x33\x36\xa9\x51\x6f\x9e\xd4\x9a\x4e\x27\xe3\xac\x95\x14\x9e\x49\x5e\xd1\x7e\x6c\x4a\x49\x4f\xce\x83\x39\xf8\x69\x08\x95\x2c\xa0\xdf\x6f\xbf\x99\xbf\x8b\x00\xe1\x41\x3d\xa9\xb5\x09\xd2\x5b\x16\x56\xd7\x48\x7a\xbe\x63\x13\x07\x35\xcf\x27\x56\xc2\xfb\x7f\x03\x00\x00\xff\xff\x1c\xc5\xe4\x71\xf3\x06\x00\x00")

func daoTplBytes() ([]byte, error) {
	return bindataRead(
		_daoTpl,
		"dao.tpl",
	)
}

func daoTpl() (*asset, error) {
	bytes, err := daoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dao.tpl", size: 1779, mode: os.FileMode(420), modTime: time.Unix(1576221407, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\x16\x84\x0f\xf2\xf7\x25\xd2\xdd\x81\xd0\x36\x3f\x2d\x0a\x04\x45\xd0\x26\xed\x31\x5e\x4b\xeb\x5a\xb0\x44\xaa\xe4\x2a\x6e\x20\xe8\xdd\x0b\x2e\x65\xb8\xa9\x65\x01\xc9\x25\x02\xb9\xb3\x33\xc3\xd9\x90\x4e\x53\x80\x4f\xa4\xc9\x22\x53\x01\xab\x67\x70\x15\xe6\x5b\xb2\x51\x59\x37\xc6\x32\x6c\x98\x1b\x58\x5b\x53\x83\x4a\x52\xbf\x50\x17\xd1\xbe\xe6\xd8\x58\x1a\x8a\xef\x53\x59\xfd\x55\xfd\x0f\xd0\x41\x6e\xcc\xb6\x3c\x60\x5a\x2e\x2b\x97\x86\x4d\x0f\xa5\xdf\x02\x5d\xb7\x3a\xe7\xd2\x68\xb8\xc7\x2d\xc5\x65\x31\x87\x2e\x02\xb0\xc4\xad\xd5\xe2\x20\xf9\x49\x1c\x2f\x53\x6c\xca\xb4\xeb\x92\x5b\xb3\x23\xfb\x05\x6b\xea\xfb\x74\xd6\x95\x45\xbf\x9c\x5f\x44\xfd\x31\xdb\x6d\xe9\x38\xfe\xd5\x92\x7d\x1e\x27\x54\x23\x84\xea\x4c\xa0\x00\x0d\x5a\xac\xdd\x02\xa4\x3f\x02\xe8\xc7\x35\xae\x2c\x21\x53\xbc\x32\xc5\x88\x48\x63\xdc\x49\x15\xe9\x18\xa5\x7c\x68\x0a\x4f\x59\x16\x03\xe8\x98\xb6\x9d\x0c\x63\x8a\xfb\x0e\x39\xdf\x4c\x51\x4b\xfd\x8d\xe4\xd7\x54\x11\x8f\xcf\xaf\x08\xa5\x57\x8f\xf0\xd2\xfb\x19\x78\x4f\x4c\x72\x82\x7a\xf9\xca\x61\x8a\x5a\x88\x48\x90\xaf\x4f\x69\xc8\xe7\x2d\xba\xc3\xd8\xa7\x85\x4f\x4c\xfe\x6d\xb2\x9f\xe5\xa2\xc6\xeb\xb2\xa2\x20\xf5\x84\x16\xd6\xc6\xd6\x90\x81\xa6\x1d\x7c\x34\xb6\xbe\x46\xc6\x78\x7e\x11\x81\x14\x12\x6c\x1a\xd2\x45\xac\x7c\x8f\x3a\x03\xff\x09\x7f\x13\x8d\x35\x09\xee\xe8\x02\x04\xc3\xe1\x55\x38\xf6\xed\x69\xf7\xbe\x37\x84\x05\x59\xb7\x18\x96\x00\xea\xca\x68\x26\xcd\xe7\xf7\xcf\x0d\xa9\x05\xa8\xba\xad\xb8\x6c\xd0\x72\xea\xfb\xce\x0b\x64\x54\x82\xed\x4f\x1f\xf3\x46\xd6\xf1\xe1\x88\xad\xad\x20\x0b\x41\x59\x93\x93\x73\x09\xe9\xa7\xe4\xfb\xc3\xcd\xe3\x87\xbb\xbb\xc7\x4b\x74\xf4\xf0\xf5\x16\xfe\x17\x44\xb8\xbd\x81\xf2\x1f\xf3\xef\x30\xf7\xcd\x8f\x6c\xb6\xa4\x33\x35\x34\xc8\x33\x98\x38\x46\xa6\x44\x2a\x3e\x93\xca\xe4\xe8\xbd\x24\x1b\x4b\x6b\xc8\xbc\x83\x51\xab\x3f\x68\xf5\xcd\xe4\x5b\xda\xbb\xcd\x8d\x76\x0c\x42\x03\xd9\xf0\x98\xfa\xa7\xeb\xde\xef\x84\xb1\x54\xc4\xb0\x31\x8e\x21\x03\xa5\xfc\x46\xb9\x86\x78\xea\x5c\x99\x07\xce\xf7\x89\x87\xce\xe5\xce\x2d\xd2\x74\xd6\x1d\x7c\x1a\xc7\xfd\xd2\xd3\xf5\x40\x95\xa3\x97\xf0\x09\xfa\xc4\x52\x53\x61\x4e\xb1\x92\x1f\x8b\x33\x50\x3b\xa7\xc4\x68\x7f\xf8\xdf\x58\xce\x3a\x11\x90\x6c\x77\xb4\x72\x72\xe6\xd4\xb9\xcd\xcb\x4c\x67\x9d\x7c\xbd\x91\x3e\xfa\x13\x00\x00\xff\xff\x20\xa0\x60\x3e\xaa\x06\x00\x00")

func jsTplBytes() ([]byte, error) {
	return bindataRead(
		_jsTpl,
		"js.tpl",
	)
}

func jsTpl() (*asset, error) {
	bytes, err := jsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "js.tpl", size: 1706, mode: os.FileMode(420), modTime: time.Unix(1576224034, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _markdownTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x52\xcd\x6e\xd3\x4c\x14\xdd\xcf\x53\x5c\xb9\xd5\xb7\x4a\xeb\xae\x2d\xd5\xdf\xa2\x0b\x36\x88\x15\x62\x01\x42\xaa\x89\xa7\x25\xd4\x3f\xc5\x76\x84\xa2\xc9\x48\xa1\x0a\x10\x14\x9a\x54\x22\x2d\x25\x25\x85\x40\x52\x75\x43\x1a\x24\x0a\x6d\x1c\xda\x97\xf1\x8c\x9d\xb7\x40\xf6\x38\x28\x81\x12\x58\x30\xab\xb9\x47\xe7\x9e\x73\xee\xcc\x95\xe5\x6b\xd8\xc2\x8e\xe6\x61\x1d\xee\x15\xc0\x35\xb4\xec\x06\x76\xd0\x1c\x10\xb2\x78\x43\x33\x31\xa5\x88\x7d\x7c\xc5\x7b\xa7\x6c\x67\x1b\x8a\xc0\x4a\xc3\xf0\x93\xcf\x0e\xab\x50\x84\xe8\xe4\x33\xdf\xaf\xa1\x85\xf1\x29\x2e\x5c\x75\x45\x84\x38\x9a\xb5\x8e\x61\x3e\x97\x99\xcf\xda\x86\xb2\xbc\xb8\x62\x1b\x79\xd3\x72\x29\x05\x42\x62\x28\x05\x84\x1d\x14\xc7\xe8\xcd\xc2\xe6\x54\xbd\x62\x9b\x26\xb6\x3c\x4a\x11\x21\xd8\xd2\x29\x45\x68\x6e\x0e\x1e\xb8\xb6\x15\x76\x06\xc1\x45\x15\xad\xae\xae\xc6\x15\x22\x33\x3d\x01\x40\xba\xc2\x57\x52\x52\xf0\x36\x76\xec\x5b\x9a\x91\xc7\x94\x66\x7e\x38\xd1\x58\x3c\xf1\xe3\xb5\x2e\xab\x7f\x88\x2e\x1b\xec\xe0\xf0\x17\xdf\x44\x3c\x6b\xeb\x58\x52\x96\x32\xa2\x32\xb1\xeb\x6a\xeb\x58\x52\x24\x7b\x43\x4a\x31\x5d\xf3\x34\x49\x11\xf4\x7f\x16\x55\x88\x89\xb8\xf1\x7d\x32\x34\xab\x1c\x30\x7f\x00\x48\x85\x4d\xdb\xf5\x92\x37\x03\x56\xe9\x83\xac\x6d\xe6\x64\x42\x16\xaf\xdb\x8f\xb0\x93\x7e\x77\xc2\x7f\x72\x2c\x7e\x3d\xb8\xec\xf1\xc6\x79\xdc\x97\x9f\xdd\x26\x2b\x39\x1d\xc4\x03\xbd\x78\xc6\x7a\xcd\xc9\xf6\xc4\x57\xf3\xb2\xf7\xff\x42\x41\x55\x21\xb8\xa8\xb2\xa3\x2d\x48\x5b\x88\x34\x7a\x53\x8a\x8e\x1e\x0b\xa9\xb0\x59\x16\xca\x92\xc2\x4a\x43\xfa\x87\x34\x62\xf4\x77\xa3\xd7\x1d\xa4\x82\x8e\x0d\xec\xe1\xdf\xb3\x21\x66\x47\xb5\xaf\xac\xbe\x17\x9c\x95\x78\xab\x8d\x54\x58\xc7\xde\xec\x61\x05\x9f\x75\x9a\x33\xf9\x48\x05\xfe\xb6\x1b\x9d\xbc\xe7\xad\x76\xe0\x7f\x09\xfc\xee\xc3\x3c\x76\x0a\xac\xbe\xc5\x77\xfb\x7c\xef\x9c\x0d\xeb\xa1\x5f\x66\x3b\x95\xcc\xc8\xdf\x8f\x7a\x9d\xff\xed\xb5\x35\x17\x7b\xcb\x4b\xff\x19\x39\x33\xe7\x2d\x2f\x21\x15\xa9\x20\x76\x0e\xa9\x30\xde\x37\x15\x08\x52\x61\x7a\xe7\xd2\xfa\xa7\xad\x4b\xd1\xf1\xde\x89\x32\x81\x3c\xdb\xd3\x8c\xb8\x13\x64\x99\x7d\x7b\xc9\x9e\x6f\x4f\x25\x3d\xab\x86\xcd\x32\x2f\xf9\xbc\xd5\xe6\xbb\xfd\x4c\xd8\x38\x0e\x06\x35\x56\x79\x3a\x6a\x9f\x4e\xaa\x08\xe1\x3b\x77\x53\x2c\x1e\x98\x8a\xa0\xdf\x03\x00\x00\xff\xff\x2c\x19\x42\x29\x60\x04\x00\x00")

func markdownTplBytes() ([]byte, error) {
	return bindataRead(
		_markdownTpl,
		"markdown.tpl",
	)
}

func markdownTpl() (*asset, error) {
	bytes, err := markdownTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "markdown.tpl", size: 1120, mode: os.FileMode(420), modTime: time.Unix(1563850859, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelsTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6f\xd3\x40\x10\xc5\xcf\x99\x4f\x31\x8a\x7a\xb0\xa5\xb2\x0b\x57\xa4\x70\x09\x12\x2a\x84\x96\xc8\xe5\x84\x38\x6c\x9c\xa9\xeb\x76\xff\x98\xdd\xb1\x4a\x34\xda\xef\x8e\xd6\x71\xa3\x96\x70\x40\xf6\xc1\x6f\xbc\x6f\x7e\xfb\x66\x57\xeb\x4f\xe4\x29\x1a\xa6\x3d\xee\x0e\x98\xac\x69\x1f\x29\x82\xd6\x6c\x76\x96\x50\x44\x5d\x1b\x47\x39\x83\xd6\xcd\x76\x03\x5a\x8b\xa8\x86\xf7\xcd\x76\x33\xd5\xca\xcf\x22\xf0\xcd\x07\xec\x7a\xbe\x1f\x77\xaa\x0d\x4e\x3f\xb8\xd0\xc7\xe0\x75\xfa\x65\x7f\x1f\x3d\xcf\x0b\x27\xd7\x3a\xd8\xd1\xf9\x34\x77\xdb\x6e\x66\x9d\x33\x0c\xa6\x7d\x34\xdd\xc4\xdd\x84\x27\x8a\x33\x1c\xda\xe0\x13\x57\xb0\x68\xd8\x30\xdd\x7c\x59\xbd\x9d\x3f\x3f\x92\x5d\xbd\x83\x1a\x10\xf8\x30\x4c\xb6\xb5\x71\x64\xd7\x26\xd1\xd1\x8a\x89\xe3\xd8\xb2\x00\x22\xa2\x48\x34\xbe\x23\xbc\xe8\x2f\x2f\xda\x60\xdf\xaf\xd4\x89\x8c\x22\xa5\x74\x66\x9f\xcb\xb7\x87\xe1\xa5\x32\xdd\x0b\x47\x70\x8e\x3c\xe7\x3c\x23\xc8\xef\x73\x86\x0c\x20\xd2\xdf\xa1\xba\x4a\xdf\x13\xc5\xdb\x32\xcd\x9c\xe1\x6e\xf4\x2d\x56\x22\xea\xca\xf7\xdc\x1b\x7b\x24\xff\x4d\xad\xf1\xab\x89\xe9\xde\xd8\xcf\xcd\xcd\x75\x55\x63\xf5\xe3\xe7\xee\xc0\x74\x89\x14\x63\x88\x35\x0a\x2c\xa6\xb8\xec\x86\x7f\xb8\x61\xf1\xaa\xbf\x12\x51\xdf\x4c\x4a\x4f\x21\xee\x8f\x71\xcf\x42\xae\x70\xb9\x84\x45\x24\x1e\xa3\xc7\x87\x14\xbc\x9a\xf9\x15\xbb\xe1\xf5\x6e\xeb\x1a\x32\x3c\x87\xfc\xef\x38\x53\xfc\x22\xaa\xba\x1c\x48\xef\x3b\x14\x3c\x11\x97\xa7\x5b\xb6\x2c\x73\xc3\xf2\x4e\x0f\xfe\x09\x00\x00\xff\xff\x53\xf9\x88\xe7\x9e\x02\x00\x00")

func modelsTplBytes() ([]byte, error) {
	return bindataRead(
		_modelsTpl,
		"models.tpl",
	)
}

func modelsTpl() (*asset, error) {
	bytes, err := modelsTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "models.tpl", size: 670, mode: os.FileMode(420), modTime: time.Unix(1575619807, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xd1\x6e\xab\x46\x10\x7d\x66\xbf\x62\xca\x13\x5c\xa1\xf5\x4b\xd5\x87\x56\x56\x95\x3a\x69\x1b\x35\x6d\x23\x25\xb7\x7d\x88\xa2\xab\x31\x8c\xe3\x6d\x80\xa5\xb3\xeb\x38\x16\x97\x7f\xbf\x5a\x16\x62\x6c\x63\xc7\x79\xc2\x86\x99\x73\xce\xec\x39\xbb\x30\x99\xfc\x46\x25\x31\x5a\xca\x60\xbe\x01\x93\x63\xfa\x4c\x2c\x2a\x4c\x9f\xf1\x89\xc0\x10\xbf\xa8\x94\x84\x50\x45\xa5\xd9\x42\x24\x82\xf0\x49\xd9\xe5\x6a\x2e\x53\x5d\x4c\xfe\x2b\xb4\x62\x5d\x4e\xcc\xff\xf9\x6b\x28\x82\xb0\xae\xc3\x27\x6d\x38\x9d\x14\x3a\xa3\xdc\x84\x5f\x41\x5e\xb7\x8d\x37\x6a\xce\xc8\x9b\xa6\x99\xd4\xb5\xfc\x0b\x0b\x6a\x9a\x9d\x7a\x93\xea\x8a\x46\xca\x43\x11\xd4\xb5\x5a\x80\xbc\x36\x9f\x0d\xf1\x3d\xce\x73\x6a\x9a\x61\x27\x31\xa7\x3a\x3b\xda\x4b\x65\xd6\x34\x22\x16\x42\x2c\x56\x65\x0a\x91\x81\x4f\x77\x7e\xa6\xf8\x1e\x9f\xa9\xae\xe5\x0c\x0b\xca\x67\x68\xc8\xcb\x8a\x32\xb4\x08\x9f\xea\x5a\xde\xe8\x35\xb1\xbf\x29\x0f\xeb\x62\x62\xd6\x5c\x83\x00\x20\x66\xf8\x71\x0a\x46\x66\xa8\xe5\x09\xd4\x18\x44\xc0\x64\x57\x5c\x82\x6f\x12\xcd\x88\xac\x1b\x65\xec\x08\x80\x5e\x2c\x0c\xd9\x24\x57\x85\xb2\xb0\x52\xa5\xfd\xe1\xfb\xc4\x10\x72\xba\x84\xf7\xb5\x46\x0f\x8f\xef\x16\x25\xaa\xb4\x49\x3b\x54\x5c\x83\x08\x5e\x90\x61\xbd\x24\x26\x68\xbd\x91\xff\xba\xdf\x46\x04\xed\xbd\x29\x56\x15\x95\x59\xd4\xfe\x49\x7c\xc1\xdf\xad\xc0\x1b\xa7\x6f\x47\x6c\x1c\x77\x1e\xce\x74\x69\x51\x95\x06\xe4\xdd\x5a\xd9\x74\xe9\xa8\x21\x34\x16\x2d\x85\x4d\x03\x22\x38\x8e\xdd\x92\x47\xbe\xf6\xbb\xe9\xcf\x61\xb2\x37\xcd\x9d\x7b\x70\x49\x79\xec\x96\xb8\x37\xfd\x84\x54\xce\x88\xa3\xb0\xae\xe5\x2d\xab\x02\x79\xf3\x07\x6d\x66\x3a\x5f\x15\xa5\xf4\x17\x0f\x0b\x19\x99\x34\x6c\x31\x9d\x7d\x89\xd5\x16\xf3\x64\xc7\xed\x23\x66\xb5\x64\x52\xca\x81\xe3\x03\x84\xe3\xde\xcf\x98\xd0\x8e\xc5\x67\x77\xde\x8f\xc4\x73\x7c\xff\x04\x87\x00\xee\x79\x89\x05\xf5\x0b\xb1\x8b\x07\x53\x30\x96\x55\xf9\x64\xe4\xbd\x6e\x3b\xa3\x8f\x42\xc4\xa3\xb4\xb7\x68\xcc\x5a\x73\x76\x9c\x56\x5e\x95\x29\x6f\x2a\xdb\x57\x8e\x10\x9f\x06\x71\xc4\x6a\xd1\x39\x76\xb8\x54\xd7\xe6\xea\x55\x19\xfb\xf1\x79\xa0\x16\x41\xb0\xb3\xa3\xdd\x49\x24\x2f\x72\x26\xcc\x36\x2d\xa8\x08\x82\x66\x90\xc8\x21\x05\x7c\x05\x79\xb1\xb2\xba\x40\xab\x52\x6f\xfc\xe7\x2a\x43\x4b\x57\xaf\x15\x93\x31\x4a\x97\x6e\x57\xec\x1d\x2f\x67\x26\xe4\xbc\xa3\xc6\xf3\xbd\x1f\xb7\x0f\xa4\x2d\x80\xa3\x33\x1e\x4e\x27\x02\x80\x4e\xa5\x9f\xee\x4c\x41\x6e\xba\xf1\x89\x6e\xd1\xa6\xcb\x91\x7e\x95\x81\x3f\x32\x57\x2d\x03\x14\x58\x3d\xf8\x3c\x3f\xaa\xd2\x12\x2f\x30\xa5\xfa\xdd\x4d\xa3\x16\xf0\xe2\xf6\xaf\x7e\x76\x86\x78\xa8\x87\x70\x24\x7f\x83\x43\x24\x7c\xfc\xc9\xd5\xb7\x51\xa9\xba\xb2\x1e\xe1\x05\x73\x19\x79\x19\x2e\xa3\x0e\xbf\x2f\x7d\xab\x1d\xdd\x01\xfd\xc3\xb6\x2b\x38\x57\x08\x4c\xa1\x6f\x74\x7d\xcd\x5e\x38\x5d\x3a\xf7\xcc\xfa\x13\xab\x3d\xbf\x76\xec\x3a\xbe\xda\xdd\x3a\xc7\xe3\x2e\x5d\x52\x4e\xa3\x36\xf7\x36\x6d\x8d\xd8\xe1\x3b\xd1\x17\x43\x4b\x35\xe6\xdb\x01\x3d\x8c\xbf\xa3\x7f\xd9\xb8\xeb\xd9\xef\x7f\xbf\xb1\x34\x03\x0c\x74\x06\xa7\x3e\x02\x06\x04\x9d\x5c\x2f\xed\xcb\x56\xda\x31\xa3\xbb\xc3\x37\xee\xae\x2e\x23\x4b\x34\xcb\x2c\x81\x2f\x2e\x48\xf3\xb6\x4b\xf6\x9f\x72\xbf\xb2\x2e\xde\x20\x1e\x1e\xe7\x1b\x4b\xdb\xc8\x24\x7d\xf5\x25\x2d\x70\x95\xdb\x99\x36\x36\xde\x2e\x74\x8b\x1f\xb5\xe0\xf1\xa8\xc4\x7f\x30\x57\xd9\x81\xc0\x84\xbc\x72\xca\xaa\xf5\x56\xed\x5c\xeb\xdc\x69\xed\xc0\x4b\x95\xc3\xf4\x4d\xed\x4c\x17\x15\x32\xfd\x8e\x66\x79\x51\x66\xfb\x7a\x87\x78\x71\x02\xfb\x53\xc4\xa2\x01\xd1\x45\xf7\x5b\x00\x00\x00\xff\xff\x3e\x81\xb0\x50\xc4\x0a\x00\x00")

func serviceTplBytes() ([]byte, error) {
	return bindataRead(
		_serviceTpl,
		"service.tpl",
	)
}

func serviceTpl() (*asset, error) {
	bytes, err := serviceTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service.tpl", size: 2756, mode: os.FileMode(420), modTime: time.Unix(1575620055, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vueTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xed\x6f\x1b\xc7\xd1\xff\xae\xbf\x62\xb2\x70\x02\x2a\xe1\x9d\xa4\x3c\x08\x1e\xe4\xc4\xe3\x13\x44\x79\x9e\x07\x41\x8b\x36\x40\x93\x4f\x86\x11\xac\xee\x96\xe4\xd6\x7b\x2f\xdd\x5d\x52\x52\x08\x02\x45\x9b\xc4\x76\xda\x44\x2e\x9a\x0a\x69\x5e\x60\xbb\x70\xfa\x06\x58\xf1\x87\xc2\xb5\x63\x25\xfd\x67\x44\xca\xf9\xd4\x7f\xa1\xd8\xdd\x23\x6f\xef\x85\x14\xe5\x28\x41\x0d\x14\x10\xc8\xe3\xee\xec\xcc\xec\xcc\x6f\x66\x67\xe7\x04\xd0\x7a\xca\x71\xe0\xff\x49\x4c\x38\x96\x24\x84\xed\x3d\x10\x0c\x07\x97\x09\x77\x9c\x36\xac\xb4\x24\x89\x52\x86\x25\x69\xaf\x00\xb4\x08\x73\x02\xcc\x43\xf5\x0c\xd0\x0a\xe9\x00\x04\x4b\xa4\x8f\x7a\x04\x87\x84\x23\x33\x6e\xe8\x3a\x09\x8f\xc0\xa3\x31\xa3\x31\xf1\x91\xe4\x7d\x82\x60\xe0\x44\x49\x48\x98\x8f\x04\xc1\x3c\xe8\x29\x12\x04\x2f\x89\xfe\x76\x44\xa5\x1b\x63\x49\x07\xc4\x4d\x39\x19\x90\x58\xfa\x28\x4e\x62\x32\xe3\x98\xf3\x74\xa8\x24\x51\x3e\x6c\x26\x68\x9c\xf6\x25\xa4\x9c\x74\xe8\xae\x43\x83\x24\xf6\x91\x1a\x0d\x92\xd8\x31\xa2\x10\x04\x8c\x60\x8e\xb7\x19\x99\x6a\xe1\x4a\x4e\x23\x5b\x15\x97\xa6\x08\x52\x86\x03\xd2\x4b\x58\x48\xb8\x8f\x26\x37\x3e\x9f\x5c\xfb\x7a\xfc\xee\x3b\xe3\xc3\x07\xa8\xdd\x5a\x9b\x4a\xb2\xb4\x5a\x2b\xa8\x05\xcb\xa9\xbb\xdd\x97\x32\x89\x41\xee\xa5\xc4\x47\x29\xa7\x11\xe6\x7b\x08\x5e\x0a\x18\x0d\x2e\xfb\xe8\x27\x99\xc6\xb5\xfb\x68\x4f\x6e\x7c\xfe\xe8\x8b\x3f\x68\xb9\x86\xcd\x1c\xe6\x53\x6e\x9c\x08\x22\x2d\x7b\xb7\x27\xf7\xdf\x39\xf9\xcb\x97\x86\xcd\xe4\xb3\x5b\xc7\x0f\xef\xd5\x32\x2b\xed\x6c\xa5\x34\x3a\x1b\x50\xe8\xa9\x11\x4b\xa3\x34\xe1\xb2\x43\x19\x71\x07\x54\xd0\x6d\x46\x7c\x83\x01\x9e\xf4\xe3\xb0\xbc\xf5\x80\x61\x21\x7c\xa4\xb0\x95\x31\x42\xed\x16\x9d\x0e\x4f\x4d\xd0\x4f\x59\x82\xc3\xe7\x95\x27\x68\x7b\xfc\xc5\xd1\xf8\x9d\xcf\x1f\xdd\xfa\xf3\xe4\xe6\x91\xbd\x01\x70\x9c\xd3\x74\xfb\xdf\x5d\xa5\x1b\x2a\x2b\x61\x34\x5b\x4e\x95\x30\xd9\x89\x95\x32\xb9\x2e\x57\xbe\x5c\xac\x4b\x55\x8d\x80\x13\x2c\x67\xe6\x01\x1f\x8c\x81\x96\xd5\xaa\x84\x8f\x94\xf5\x05\x6a\x4f\xfe\xfe\x70\xfc\xde\xcd\x1a\x87\x9a\x60\x95\x7b\x8c\xf8\x48\x87\x82\xb7\x9d\xc8\x9e\x52\x3f\xa4\x83\x2c\x9e\xad\x47\xc2\x1c\xa9\x83\xc5\x0b\xb1\xc4\x3e\xd2\x3f\x5c\xf5\x8c\xa6\x5c\x76\x68\x28\x7b\x1e\x6c\xac\xaf\x3f\xad\x82\x98\x30\x12\x48\x9a\xc4\x4e\xd0\xc3\x71\x97\x28\x18\x67\x23\x5b\x7a\x40\x45\xbf\xb2\x18\x8d\xbb\x53\x76\xd9\xcf\x42\xda\xd0\x33\x4e\x90\xb0\x7e\x34\x0d\x90\x19\x6b\x04\x5a\xa6\x8f\x5e\x78\x01\x15\x00\x69\x2f\xca\x11\x3c\x1c\x72\x25\x18\x2e\xd0\xe6\x85\x20\x61\x9e\xef\x6e\x69\x0a\x31\x1a\xcd\x13\xc8\xf0\xb6\x4a\x4f\xc3\xa1\x5a\xe0\x6e\xe1\x88\xb0\x2d\x2c\xc8\x8f\x70\x44\x46\x23\x3b\x19\x4d\xb3\xa2\xce\x7f\x8e\x08\x12\xad\xa8\xfa\x42\x85\x78\x14\x29\x8e\xdb\xd0\x6a\xb5\x40\x4f\xba\x3c\xd9\x71\xa7\xdc\xb5\x48\xc3\x1a\xda\xed\x36\xb4\xd6\x34\xb5\x15\x81\x76\xee\x3d\x65\xb3\x30\x1c\x92\x38\x3c\x75\x67\x93\xdf\xbe\x7f\xfc\xd5\xa7\x8f\xb3\x93\x1c\xbf\x82\xbe\xa5\x48\x22\xcc\x58\x05\xad\x29\xc3\x34\x47\x78\x3f\x0d\x15\xc2\xf5\x51\xe0\xc3\x8f\xb7\x7f\x4a\x02\xe9\x62\x21\x68\x37\x6e\x0c\x47\xcd\x99\x49\x56\x37\x33\xca\x72\x2c\x14\x21\x4e\x42\x2a\x51\x1b\x4e\xcf\x7d\x35\x1a\x86\x0a\x0a\x3c\x4f\xb2\xaf\x10\x46\x24\x69\xe4\x2a\x94\x85\x85\x9a\x20\xcb\xfa\xd5\xe4\xb8\xa4\x6b\xf2\x61\xfb\xcc\x34\x01\x14\x61\xde\xa5\xb1\xc3\x48\x47\x7a\xf0\xfc\x7a\xba\xbb\x99\x8d\xc8\x24\x35\x03\xa8\x26\x7b\x0c\x1c\xd1\x4b\x76\x7c\x14\xf5\x99\xa4\x29\x23\xb3\x30\x73\x19\x89\xbb\xb2\x57\x71\xc9\x74\xc7\x5b\xea\xeb\x65\x2c\x83\xde\x6b\xea\x03\xb5\x27\xd7\x1e\x7c\x73\x65\xff\xf8\x1f\x87\x93\x0f\x1f\xd4\x65\x8c\xb3\xcb\x2c\x1b\x39\x17\xf9\x4a\x66\x4d\x23\x73\x7c\xf5\xe6\x37\xbf\xbf\x5d\x91\x59\x4a\x40\x29\xee\x52\x55\x14\x24\x31\x78\x3d\x1a\x12\x47\x9d\x82\x34\xee\x32\xa2\xa6\x66\x45\x45\x96\x1a\x73\x6a\x04\xdb\x38\xb8\xdc\x35\x89\x93\xe1\xbd\xa4\x2f\x7d\xa4\x31\x21\x9a\x20\x13\x89\x59\x53\x95\x0a\x83\x26\x28\x36\xbc\x09\x31\xd9\x95\x08\x3c\x3d\x35\xcd\x4d\xfa\x07\x02\x4f\x91\x38\x06\x4f\x59\xd2\xa2\x11\x95\xf6\x84\xf0\xd1\xc5\x8d\xf5\x26\xbc\xb0\xde\x54\xc9\xb0\x09\x2f\xbe\xf8\xe2\x25\x95\x11\xe9\x5b\x24\x4f\x86\xf4\x2d\x32\xcd\x83\xc6\xbe\x5e\xd0\xe7\x9c\xc4\x72\xba\x17\xcd\x5c\x3d\x2b\xf3\x65\x53\xd3\xd5\xaf\xe1\xee\x74\xb5\x05\xab\x7c\xc7\xed\x95\x99\xd1\x42\x8a\x59\xd2\x05\x49\xa5\x82\x98\x39\x0e\x10\x78\x59\x60\xb9\x62\x2f\x0e\xca\x27\x4f\x9e\x56\xd7\xcb\x98\x33\x45\x5c\x56\xb4\x65\xab\x4c\xd5\xa6\xf3\x89\x93\x26\x82\x2a\x05\x7c\xc4\x69\xb7\x27\xa7\xc3\x19\xbf\x8d\x02\xbf\xe5\x52\x72\x46\x46\x3b\x10\x27\x12\x74\xa2\x7c\x55\xbc\x66\xb0\xfc\x03\xb2\x67\xd1\x15\x2a\xac\xa5\x33\xb7\x5d\x2f\x4e\x0b\x41\x2d\x6e\x2b\x89\x25\xa6\xb1\x30\x32\x5f\xdf\x4b\x09\x20\x1a\x4b\x34\x1a\xc5\xfd\x68\x9b\xf0\xe1\x90\x30\x41\x46\x23\x55\x35\x66\xb9\xb6\x60\x92\xba\xb4\x8e\x00\xf7\x65\xe2\x04\x49\x94\x2a\xf8\xfb\x28\xe9\x74\x96\xaa\x23\x6d\x63\x94\x32\x7b\x4d\xae\xaf\xd4\x64\x79\x61\xde\x49\x12\xa9\x22\x32\x0b\x12\x83\x0e\x27\x1b\x2d\x16\xd7\xa7\x55\x27\x1d\xcc\x04\x41\xed\xf1\xfe\x01\x4c\xee\x5d\xad\x4f\x8b\xa7\xd6\xb6\x5b\x9a\x2b\x6a\x9f\xdc\x3a\x84\xf1\xe1\xc7\x75\x69\xc7\x2e\x48\x66\x80\x9e\x8b\xf0\x93\xa3\x83\x47\x5f\xff\xa6\x82\xf0\xe2\x79\xb2\x2c\xc2\xad\xf3\xea\x71\x10\xbe\x1c\xba\x9f\x18\x70\x5b\xd6\xf8\xae\xc0\x5d\x04\xf2\xf7\x01\xeb\x4a\xa1\x71\x2e\xb0\x7e\x43\x73\x3d\x47\x58\xdb\x67\x73\x05\xdc\xdb\xea\x44\x4d\xd5\xc7\x59\x01\x6e\xad\x7c\xfc\x34\xbe\x64\x12\x7f\x72\x80\x5e\xb2\xca\xf7\x03\xf6\xef\x07\xee\x55\xa8\x9c\x17\xe4\xed\x4a\xf2\xec\xb0\xcf\x8a\xa0\x1a\xe0\xef\x5f\x3f\xb9\xfd\xa5\x77\x7c\xff\xbd\xe3\xa3\x9b\xe3\xeb\x1f\x8c\xef\xbe\x3b\xf9\xf0\xc1\x78\xff\xa3\xf1\x07\x37\x26\x9f\x5e\x9b\xfc\xee\xee\xe4\xfd\xc3\x4a\x44\x54\xbb\x0d\xb3\x88\xf8\xaf\xf5\xa7\x0b\xf1\x60\x9a\x08\xc0\x49\x47\x25\x03\x7d\x87\x07\xcf\xba\xb6\xfe\x1f\x65\xb3\x4a\xcd\x53\x1c\x1d\x46\x85\x2c\x88\x50\x1f\x6a\x10\x81\xd7\x93\x32\x75\x38\xf9\x59\x9f\x28\x9a\x57\x23\xd3\x58\xf0\x34\x58\x0c\x77\x1f\x19\x73\x43\xc8\x71\x17\x70\x60\xe2\xcc\xf6\xda\x9c\x3e\x87\x69\x2d\xe4\x64\x0a\x0e\x39\xa1\xa1\x79\xf3\x4d\xa9\x6a\xd7\xb6\xb2\xd2\xc1\x95\xe3\x87\xf7\x26\xbf\x3a\x18\x5f\xbd\x3b\xb9\x73\x7b\x7c\xfb\xed\x7f\x1e\xfd\x7a\x72\xf5\xa0\x10\x33\x51\xfb\xe4\x17\x0f\xc6\x57\x1e\x1a\xf3\xb6\xd6\x6c\x80\x5a\xae\x5a\x24\x8f\xa6\x28\x43\xa5\x7a\x6c\x8f\xf7\xff\xfa\xe8\x97\x5f\x19\x7e\xee\x2e\x13\xbb\x46\x8f\x02\x33\xed\x79\xc3\x60\x36\xa4\xae\xba\xdf\x1a\xdd\x55\xb7\x9f\x17\xba\x4d\x4f\xf2\x8d\xcc\x11\x8b\xf0\x9d\xdf\xd9\x6d\x80\x1b\x7c\xaf\x64\x83\xa6\x67\x6a\x5f\x1a\x57\x5a\x22\xe0\x34\xd5\x79\xc3\xec\x02\x9e\x05\x2c\x00\xa7\x14\x3a\x3c\x89\x00\xbd\xb4\x86\x53\xba\x36\x1c\xba\x59\x02\xda\x5c\x01\x20\xba\x71\x05\x21\xe9\xe0\x3e\x93\x30\xd4\x42\x42\x2c\x71\x63\x35\xfb\x01\xc0\x89\xec\xf3\x78\xf6\x13\xa0\x72\x69\xf3\xe0\xe2\xa5\xe6\x6c\x5a\x5f\x3c\x3c\x8b\x1e\x20\xeb\xcb\x78\xc6\x94\x4d\x6b\x46\xc9\x2a\x2e\x07\x73\xa3\xf2\x60\xdd\x1e\x53\xf7\x18\x0f\x36\xec\xa1\xa4\xd3\x11\x44\x96\xe8\xf4\x65\xca\x83\x8d\xf5\xd9\xd8\x28\x9f\xce\x9b\x96\x1e\x0c\xad\x71\x53\x99\x16\x55\xae\x52\x01\x64\x90\xc8\xb6\x51\x27\xc1\x14\x03\xe7\xc1\x29\xcf\xb3\xe7\xc1\x2d\xc7\x75\x89\x5b\x96\x78\xca\x2e\x98\xc7\x31\x7b\x1a\x6d\xae\x58\x02\x22\x22\x7b\x49\x28\x72\xce\x5d\x22\x4b\x18\x02\x90\x3d\x2a\xdc\x42\x97\x2e\xeb\xc9\x6c\xce\x48\x70\x4a\x2d\x15\xdc\x1f\x52\x21\x1b\x85\xf3\xbf\xd8\xef\x29\x4c\x01\x0c\x67\x80\xb0\x44\x99\xa1\xe6\x14\x16\xb6\x12\x6a\x04\x0a\x66\x9c\xa9\x99\xe3\xa4\x30\xbb\xba\x52\xff\xec\xca\x1e\x89\x1b\x5c\xa4\xe0\xb7\x0b\xd6\x2d\xec\x5a\xa3\x1a\x7c\xe0\x22\xd5\x6d\x4f\x33\xb0\x39\x8f\x5c\x91\xd8\xd4\xea\x63\x2e\x71\x6e\x51\xed\x2f\x9b\x6e\x54\xd0\x34\x50\x80\x6a\x10\xce\xb5\xaa\xa3\xd5\x29\xe5\xcc\x0e\x79\x63\xa0\x31\xc0\x6c\x8e\x03\x75\x83\x61\x80\x59\xdd\x9c\xb1\xb8\xf2\x6d\xd9\xd6\xcf\x82\x62\x09\x0e\x6c\xac\x6e\x16\x57\xce\xf0\x52\x51\x27\xef\x72\x2c\x50\xc7\xb0\xf7\x61\x60\x9b\xf3\x14\xc6\xfa\x25\x86\x89\x7b\xe5\xe7\x2a\x54\xeb\x6f\xab\x9b\xb5\x44\x59\x3b\x72\x38\xaa\x17\x93\xc3\xa9\x2a\x26\x9f\x2b\x30\xc8\x66\xcd\x8b\x9b\x3a\xbb\x64\x13\x0b\xfc\xb3\xb1\xd0\x3b\xeb\x4b\x5b\xca\x5c\xb0\x0b\xa2\x18\x91\x60\x05\xb1\x5a\x7f\x21\xfb\xdd\x28\xa6\xfd\xe0\xb2\xa7\x83\xbc\x90\xde\xc9\xae\xf4\x20\x6b\x1c\x1f\xdf\xbf\xe3\xba\x2e\xb2\xe7\x45\x4a\xe3\x98\x70\x0f\x66\xe5\xcb\xb4\xad\x6f\x53\xe5\x1d\x39\x0f\x10\xef\x6e\xe3\xc6\x7a\x13\xb2\x3f\xf7\xbf\x57\x51\x9e\xb3\x56\xe7\x66\x98\x6c\x6b\x65\x57\x9e\x25\xb6\x2b\x38\xaa\x89\xd1\x8a\x6d\xe1\xd4\xb8\xac\x68\xd0\x58\xad\x2a\x90\x99\xc5\x0d\x58\x22\x48\x99\x7b\xc5\x8f\x59\x7f\x9a\x27\x3b\x15\xd4\x5c\x08\x92\xb8\x43\x79\xd4\x40\x93\x3b\xb7\x8d\x5f\xc6\x77\xdf\x35\x3d\x55\x35\xf2\xd9\x2d\x53\x25\x37\x61\xf2\xd1\x17\xe3\xeb\x7f\x3c\x79\xf8\xa7\x93\x87\x77\xfe\x07\x35\x21\xab\xae\x51\xb3\xa0\x5a\xc6\xee\x65\x5d\xd8\xbc\x6e\xdc\x7d\x72\xeb\x70\x7c\xf8\x71\xc1\x85\x01\x8e\x03\xc2\x0a\x54\xe3\xfd\x83\xc9\xbd\xab\x05\x2a\x55\x4f\x79\x80\x76\x30\x8f\x15\x06\x56\xea\x0d\x38\xd7\x48\x45\x97\x6b\xda\xdc\x12\xee\x70\xe8\xe6\x97\x48\x73\x3d\x2b\xdc\xd2\x56\xcb\x6b\xe7\xc3\x21\xb7\x66\x9c\x48\xda\xd9\x73\x45\x3f\x08\x88\x10\x0d\x94\x19\xf2\xea\xf5\xf1\x7b\x37\x50\x09\x20\xb0\x10\x24\x95\x7d\xc2\xa2\x24\x5e\xb5\xca\xa9\xe9\xde\xb4\x19\x0a\xc1\x5d\x8a\x91\x8c\x42\xeb\x58\xec\xdf\x2c\xb6\x5c\x13\xca\x4b\xce\x12\x56\xf5\x4d\x95\x9a\xd8\xaa\x18\x7b\xf2\xc9\xdf\x26\x07\x77\xeb\x8d\xfd\xb8\xd1\x58\x93\x7e\x0b\x6f\x22\x6b\xcf\xa6\x4a\x95\x5c\x3c\xa1\xf2\xfc\x5a\x7a\xa5\x51\x4d\xea\x56\x78\x5a\x2f\x3b\xbe\xf9\xf9\xb5\xe3\xfb\x77\x4e\x3e\x7e\x7b\xf2\xd9\xad\x93\x4f\x9e\xc8\xd8\xd4\xbb\x2b\x6c\xfd\x34\x9f\x64\x5c\x6a\x5c\x32\xcf\x82\x4f\xec\x59\xa5\x14\xa7\xa1\x00\x1f\x2e\x5e\xca\x47\x3b\x09\x87\x86\x9e\x8a\x43\xb2\xab\x0f\xf2\xec\xb1\x35\x07\x76\xd9\x1b\xb5\x8c\xec\xb9\xe7\x56\xcb\x70\x10\x12\x74\xab\xcc\x9f\xc3\xe0\xa2\x5e\x78\xc9\x76\x0d\x0d\x85\x9b\xf6\x45\xaf\xa1\x16\x9e\x9e\x44\x37\x2b\x17\x88\x4a\x9a\xb1\xdd\x37\x84\xd3\x38\x7a\xca\x30\x35\x20\x9b\x9f\x50\xce\x94\x94\xff\x8d\x4e\xed\xd2\x3b\xd6\x6a\x72\x28\xb5\x1a\xeb\xaa\xc8\xda\x96\x9d\x7d\xf5\x2a\x06\x51\x55\xd0\x7f\x62\xe8\xc9\x89\x21\xe3\x3d\x58\x36\x86\x9a\xb5\x28\xfa\x56\x91\x65\xde\x31\x9c\x35\xb2\x16\x61\xf5\x8c\x97\xda\xef\x20\x0c\xcd\x3f\x78\x95\xeb\x24\x77\x3a\x5c\xa1\x37\x7d\x5b\xed\x5a\x7b\xcd\x00\x73\x7d\x66\x82\x6f\x89\x43\x38\x4d\x19\x0d\xf4\x7b\xf7\xb5\x41\x1c\xba\x49\x4a\xe2\xdd\x88\x29\x47\x60\x29\x9c\xa4\xd3\xa1\x01\x09\x93\xa0\x1f\x91\x58\xba\x22\xe5\x04\x87\xa2\x47\x88\x8c\x98\xab\xbf\x51\xae\x3d\xed\x80\xdd\x18\xd1\xd8\xd2\xed\x4c\x2d\xf6\x29\xdf\x37\xf2\x9f\x79\x66\x31\x51\x41\xa7\x9d\x74\xaa\x84\xee\xc7\xe6\xa1\x56\x0c\x03\x83\x86\x88\x08\x81\xbb\xc4\x25\x9c\x27\xbc\x81\xec\x6e\xae\x6e\xe6\xde\x3c\x1a\x1f\xed\x17\x61\x61\x1a\x8c\x75\x00\x5f\x26\xd5\x14\x02\x7f\x5e\x68\x58\xfe\xd0\x3b\xfd\x76\x47\x87\xfe\x47\xc1\x05\x00\x9f\xdf\x45\x3e\x67\x10\x17\xed\xb3\x5a\x07\xe6\xc5\xa7\x59\x05\xb8\x76\x9b\xba\xa6\x12\xe5\xa4\xa3\x8a\x73\x35\xeb\x1a\xd2\x1a\xf0\xe7\x2f\x3c\x1a\xca\x06\x4d\x60\x54\xc8\x0a\xaf\x9a\xd7\x1f\x2a\x4f\xab\x6f\x37\x4d\xd2\xc6\xea\xa5\x0a\xe3\x38\x89\x49\x63\x75\x68\xf0\x31\x6a\x9a\x96\xb8\xb9\x7c\xdb\xca\x96\x36\x6c\xc8\xd4\xa2\xd1\xe6\x4a\x6b\x6d\xda\x26\x5f\x81\x7f\x05\x00\x00\xff\xff\xcb\xd7\x86\xc3\xaa\x2c\x00\x00")

func vueTplBytes() ([]byte, error) {
	return bindataRead(
		_vueTpl,
		"vue.tpl",
	)
}

func vueTpl() (*asset, error) {
	bytes, err := vueTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vue.tpl", size: 11434, mode: os.FileMode(420), modTime: time.Unix(1575618722, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"component.tpl":   componentTpl,
	"controllers.tpl": controllersTpl,
	"dao.tpl":         daoTpl,
	"js.tpl":          jsTpl,
	"markdown.tpl":    markdownTpl,
	"models.tpl":      modelsTpl,
	"service.tpl":     serviceTpl,
	"vue.tpl":         vueTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"component.tpl":   &bintree{componentTpl, map[string]*bintree{}},
	"controllers.tpl": &bintree{controllersTpl, map[string]*bintree{}},
	"dao.tpl":         &bintree{daoTpl, map[string]*bintree{}},
	"js.tpl":          &bintree{jsTpl, map[string]*bintree{}},
	"markdown.tpl":    &bintree{markdownTpl, map[string]*bintree{}},
	"models.tpl":      &bintree{modelsTpl, map[string]*bintree{}},
	"service.tpl":     &bintree{serviceTpl, map[string]*bintree{}},
	"vue.tpl":         &bintree{vueTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
